{"openapi":"3.0.0","servers":[{"url":"https://api.botpress.cloud"}],"info":{"title":"Botpress API","description":"API for Botpress Cloud","version":"0.3.1"},"paths":{"/v1/chat/conversations":{"post":{"operationId":"createConversation","description":"Creates a new [Conversation](#schema_conversation). When creating a new [Conversation](#schema_conversation), the required tags must be provided. See the specific integration for more details.","parameters":[],"responses":{"201":{"$ref":"#/components/responses/createConversationResponse"},"default":{"$ref":"#/components/responses/createConversationResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createConversationBody"}},"get":{"operationId":"listConversations","description":"Retrieves a list of [Conversation](#schema_conversation) you’ve previously created. The conversations are returned in sorted order, with the most recent appearing first. The list can be filtered using [Tags](#tags).","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"tags","in":"query","description":"Filter by tags","schema":{"type":"object","additionalProperties":{"type":"string"}}},{"name":"participantIds","in":"query","description":"Filter by participant ids","schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"$ref":"#/components/responses/listConversationsResponse"},"default":{"$ref":"#/components/responses/listConversationsResponse"}}}},"/v1/chat/conversations/{id}":{"get":{"operationId":"getConversation","description":"Retrieves the [Conversation](#schema_conversation) object for a valid identifier.","parameters":[{"name":"id","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getConversationResponse"},"default":{"$ref":"#/components/responses/getConversationResponse"}}},"put":{"operationId":"updateConversation","description":"Update a [Conversation](#schema_conversation) object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.","parameters":[{"name":"id","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateConversationResponse"},"default":{"$ref":"#/components/responses/updateConversationResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateConversationBody"}},"delete":{"operationId":"deleteConversation","description":"Permanently deletes a [Conversation](#schema_conversation). It cannot be undone. Also immediately deletes corresponding [Messages](#schema_message).","parameters":[{"name":"id","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteConversationResponse"},"default":{"$ref":"#/components/responses/deleteConversationResponse"}}}},"/v1/chat/conversations/get-or-create":{"post":{"operationId":"getOrCreateConversation","description":"Retrieves the [Conversation](#schema_conversation) object for a valid identifier. If the conversation does not exist, it will be created.","parameters":[],"responses":{"200":{"$ref":"#/components/responses/getOrCreateConversationResponse"},"default":{"$ref":"#/components/responses/getOrCreateConversationResponse"}},"requestBody":{"$ref":"#/components/requestBodies/getOrCreateConversationBody"}}},"/v1/chat/events":{"post":{"operationId":"createEvent","description":"Creates a new [Event](#schema_event). When creating a new [Event](#schema_event), the required tags must be provided. See the specific integration for more details.","parameters":[],"responses":{"201":{"$ref":"#/components/responses/createEventResponse"},"default":{"$ref":"#/components/responses/createEventResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createEventBody"}},"get":{"operationId":"listEvents","description":"Retreives a list of [Event](#schema_event) you’ve previously created. The events are returned in sorted order, with the most recent appearing first.","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"type","in":"query","description":"Filter by event type","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listEventsResponse"},"default":{"$ref":"#/components/responses/listEventsResponse"}}}},"/v1/chat/events/{id}":{"get":{"operationId":"getEvent","description":"Retrieves the [Event](#schema_event) object for a valid identifiers.","parameters":[{"name":"id","in":"path","description":"Event id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getEventResponse"},"default":{"$ref":"#/components/responses/getEventResponse"}}}},"/v1/chat/messages":{"post":{"operationId":"createMessage","description":"Creates a new [Message](#schema_message). When creating a new [Message](#schema_message), the required tags must be provided. See the specific integration for more details.","parameters":[],"responses":{"201":{"$ref":"#/components/responses/createMessageResponse"},"default":{"$ref":"#/components/responses/createMessageResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createMessageBody"}},"get":{"operationId":"listMessages","description":"Retrieves a list of [Messages](#schema_message) you’ve previously created. The messages are returned in sorted order, with the most recent appearing first. The list can be filtered using [Tags](#tags).","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"conversationId","in":"query","description":"Conversation id","schema":{"type":"string"}},{"name":"tags","in":"query","description":"Filter by tags","schema":{"type":"object","additionalProperties":{"type":"string"}}}],"responses":{"200":{"$ref":"#/components/responses/listMessagesResponse"},"default":{"$ref":"#/components/responses/listMessagesResponse"}}}},"/v1/chat/messages/get-or-create":{"post":{"operationId":"getOrCreateMessage","description":"Retrieves the [Message](#schema_message) object for a valid identifier. If the message does not exist, it will be created.","parameters":[],"responses":{"200":{"$ref":"#/components/responses/getOrCreateMessageResponse"},"default":{"$ref":"#/components/responses/getOrCreateMessageResponse"}},"requestBody":{"$ref":"#/components/requestBodies/getOrCreateMessageBody"}}},"/v1/chat/messages/{id}":{"get":{"operationId":"getMessage","description":"Retrieves the [Message](#schema_message) object for a valid identifier.","parameters":[{"name":"id","in":"path","description":"Id of the Message","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getMessageResponse"},"default":{"$ref":"#/components/responses/getMessageResponse"}}},"put":{"operationId":"updateMessage","description":"Update a message","parameters":[{"name":"id","in":"path","description":"Message id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateMessageResponse"},"default":{"$ref":"#/components/responses/updateMessageResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateMessageBody"}},"delete":{"operationId":"deleteMessage","description":"Permanently deletes a [Message](#schema_message). It cannot be undone.","parameters":[{"name":"id","in":"path","description":"Message id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteMessageResponse"},"default":{"$ref":"#/components/responses/deleteMessageResponse"}}}},"/v1/chat/users":{"post":{"operationId":"createUser","description":"Creates a new [User](#schema_user). When creating a new [User](#schema_user), the required tags must be provided. See the specific integration for more details.","parameters":[],"responses":{"201":{"$ref":"#/components/responses/createUserResponse"},"default":{"$ref":"#/components/responses/createUserResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createUserBody"}},"get":{"operationId":"listUsers","description":"Retrieves a list of [User](#schema_user) previously created. The users are returned in sorted order, with the most recent appearing first. The list can be filtered using [Tags](#tags).","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"conversationId","in":"query","description":"Filter by conversation id. This will return all users that have participated in the conversation.","schema":{"type":"string"}},{"name":"tags","in":"query","description":"Filter by tags","schema":{"type":"object","additionalProperties":{"type":"string"}}}],"responses":{"200":{"$ref":"#/components/responses/listUsersResponse"},"default":{"$ref":"#/components/responses/listUsersResponse"}}}},"/v1/chat/users/{id}":{"get":{"operationId":"getUser","description":"Retrieves the [User](#schema_user) object for a valid identifier.","parameters":[{"name":"id","in":"path","description":"User ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getUserResponse"},"default":{"$ref":"#/components/responses/getUserResponse"}}},"put":{"operationId":"updateUser","description":"Update a [User](#schema_user) object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.","parameters":[{"name":"id","in":"path","description":"User ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateUserResponse"},"default":{"$ref":"#/components/responses/updateUserResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateUserBody"}},"delete":{"operationId":"deleteUser","description":"Permanently deletes a [User](#schema_user). It cannot be undone.","parameters":[{"name":"id","in":"path","description":"User ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteUserResponse"},"default":{"$ref":"#/components/responses/deleteUserResponse"}}}},"/v1/chat/users/get-or-create":{"post":{"operationId":"getOrCreateUser","description":"Retrieves the [User](#schema_user) object for a valid identifier. If the user does not exist, it will be created.","parameters":[],"responses":{"200":{"$ref":"#/components/responses/getOrCreateUserResponse"},"default":{"$ref":"#/components/responses/getOrCreateUserResponse"}},"requestBody":{"$ref":"#/components/requestBodies/getOrCreateUserBody"}}},"/v1/chat/states/{type}/{id}/{name}":{"get":{"operationId":"getState","description":"Retrieves the [State](#schema_state) object for a valid identifiers.","parameters":[{"name":"type","in":"path","description":"State type","required":true,"schema":{"type":"string","enum":["conversation","user","bot","integration"]}},{"name":"id","in":"path","description":"State id","required":true,"schema":{"type":"string"}},{"name":"name","in":"path","description":"State name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getStateResponse"},"default":{"$ref":"#/components/responses/getStateResponse"}}},"post":{"operationId":"setState","description":"Overrides the [State](#schema_state) object by setting the values of the parameters passed.","parameters":[{"name":"type","in":"path","description":"State type","required":true,"schema":{"type":"string","enum":["conversation","user","bot","integration"]}},{"name":"id","in":"path","description":"State id","required":true,"schema":{"type":"string"}},{"name":"name","in":"path","description":"State name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/setStateResponse"},"default":{"$ref":"#/components/responses/setStateResponse"}},"requestBody":{"$ref":"#/components/requestBodies/setStateBody"}},"patch":{"operationId":"patchState","description":"Updates the [State](#schema_state) object by setting the values of the parameters passed.","parameters":[{"name":"type","in":"path","description":"State type","required":true,"schema":{"type":"string","enum":["conversation","user","bot","integration"]}},{"name":"id","in":"path","description":"State id","required":true,"schema":{"type":"string"}},{"name":"name","in":"path","description":"State name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/patchStateResponse"},"default":{"$ref":"#/components/responses/patchStateResponse"}},"requestBody":{"$ref":"#/components/requestBodies/patchStateBody"}}},"/v1/chat/actions":{"post":{"operationId":"callAction","description":"Call an action","parameters":[],"responses":{"200":{"$ref":"#/components/responses/callActionResponse"},"default":{"$ref":"#/components/responses/callActionResponse"}},"requestBody":{"$ref":"#/components/requestBodies/callActionBody"}}},"/v1/chat/integrations/configure":{"post":{"operationId":"configureIntegration","description":"An integration can call this endpoint to configure itself","parameters":[],"responses":{"200":{"$ref":"#/components/responses/configureIntegrationResponse"},"default":{"$ref":"#/components/responses/configureIntegrationResponse"}},"requestBody":{"$ref":"#/components/requestBodies/configureIntegrationBody"}}},"/v1/admin/hub/integrations":{"get":{"operationId":"listPublicIntegrations","description":"List public integration","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"name","in":"query","description":"Integration Name","schema":{"type":"string"}},{"name":"version","in":"query","description":"Integration version. Either a semver version or tag \"latest\"","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listPublicIntegrationsResponse"},"default":{"$ref":"#/components/responses/listPublicIntegrationsResponse"}}}},"/v1/admin/hub/integrations/{id}":{"get":{"operationId":"getPublicIntegrationById","description":"Get public integration by Id","parameters":[{"name":"id","in":"path","description":"Integration Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getPublicIntegrationByIdResponse"},"default":{"$ref":"#/components/responses/getPublicIntegrationByIdResponse"}}}},"/v1/admin/hub/integrations/{name}/{version}":{"get":{"operationId":"getPublicIntegration","description":"Get public integration by name and version","parameters":[{"name":"name","in":"path","description":"Integration Name","required":true,"schema":{"type":"string"}},{"name":"version","in":"path","description":"Integration version. Either a semver version or tag \"latest\"","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getPublicIntegrationResponse"},"default":{"$ref":"#/components/responses/getPublicIntegrationResponse"}}}},"/v1/admin/bots":{"post":{"operationId":"createBot","description":"Create bot","parameters":[],"responses":{"200":{"$ref":"#/components/responses/createBotResponse"},"default":{"$ref":"#/components/responses/createBotResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createBotBody"}},"get":{"operationId":"listBots","description":"List bots","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listBotsResponse"},"default":{"$ref":"#/components/responses/listBotsResponse"}}}},"/v1/admin/bots/{id}":{"put":{"operationId":"updateBot","description":"Update bot","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateBotResponse"},"default":{"$ref":"#/components/responses/updateBotResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateBotBody"}},"get":{"operationId":"getBot","description":"Get bot details","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getBotResponse"},"default":{"$ref":"#/components/responses/getBotResponse"}}},"delete":{"operationId":"deleteBot","description":"Delete bot","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteBotResponse"},"default":{"$ref":"#/components/responses/deleteBotResponse"}}}},"/v1/admin/bots/{id}/transfer":{"post":{"operationId":"transferBot","description":"Transfer bot to another workspace. You need to be a Manager member of the workspace the bot currently belongs to and have permission to create bots in the target workspace.","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/transferBotResponse"},"default":{"$ref":"#/components/responses/transferBotResponse"}},"requestBody":{"$ref":"#/components/requestBodies/transferBotBody"}}},"/v1/admin/bots/{id}/logs":{"get":{"operationId":"getBotLogs","description":"Get bot logs","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getBotLogsResponse"},"default":{"$ref":"#/components/responses/getBotLogsResponse"}}}},"/v1/admin/bots/{id}/webchat":{"get":{"operationId":"getBotWebchat","description":"Get the webchat code/URL for a bot","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}},{"name":"type","in":"query","description":"type of script to get","required":true,"schema":{"type":"string","enum":["preconfigured","configurable","fullscreen","sharableUrl"]}}],"responses":{"200":{"$ref":"#/components/responses/getBotWebchatResponse"},"default":{"$ref":"#/components/responses/getBotWebchatResponse"}}}},"/v1/admin/bots/{id}/analytics":{"get":{"operationId":"getBotAnalytics","description":"Get bot analytics","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}},{"name":"startDate","in":"query","description":"Start date/time (inclusive)","required":true,"schema":{"type":"string"}},{"name":"endDate","in":"query","description":"End date/time (exclusive)","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getBotAnalyticsResponse"},"default":{"$ref":"#/components/responses/getBotAnalyticsResponse"}}}},"/v1/admin/workspaces/{id}":{"get":{"operationId":"getWorkspace","description":"Get workspace details","parameters":[{"name":"id","in":"path","description":"Workspace ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getWorkspaceResponse"},"default":{"$ref":"#/components/responses/getWorkspaceResponse"}}},"put":{"operationId":"updateWorkspace","description":"Update workspace","parameters":[{"name":"id","in":"path","description":"Workspace ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateWorkspaceResponse"},"default":{"$ref":"#/components/responses/updateWorkspaceResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateWorkspaceBody"}}},"/v1/admin/workspaces":{"get":{"operationId":"listWorkspaces","description":"List workspaces the user has access to","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listWorkspacesResponse"},"default":{"$ref":"#/components/responses/listWorkspacesResponse"}}}},"/v1/admin/integrations":{"post":{"operationId":"createIntegration","description":"Create integration","parameters":[],"responses":{"200":{"$ref":"#/components/responses/createIntegrationResponse"},"default":{"$ref":"#/components/responses/createIntegrationResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createIntegrationBody"}},"get":{"operationId":"listIntegrations","description":"List integrations","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"name","in":"query","description":"Integration Name","schema":{"type":"string"}},{"name":"version","in":"query","description":"Integration version. Either a semver version or tag \"latest\"","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listIntegrationsResponse"},"default":{"$ref":"#/components/responses/listIntegrationsResponse"}}}},"/v1/admin/integrations/{id}":{"put":{"operationId":"updateIntegration","description":"Update integration","parameters":[{"name":"id","in":"path","description":"Integration Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateIntegrationResponse"},"default":{"$ref":"#/components/responses/updateIntegrationResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateIntegrationBody"}},"get":{"operationId":"getIntegration","description":"Get integration","parameters":[{"name":"id","in":"path","description":"Integration Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getIntegrationResponse"},"default":{"$ref":"#/components/responses/getIntegrationResponse"}}},"delete":{"operationId":"deleteIntegration","description":"Delete integration","parameters":[{"name":"id","in":"path","description":"Integration Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteIntegrationResponse"},"default":{"$ref":"#/components/responses/deleteIntegrationResponse"}}}},"/v1/admin/integrations/{id}/logs":{"get":{"operationId":"getIntegrationLogs","description":"Get integration logs","parameters":[{"name":"id","in":"path","description":"Integration Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getIntegrationLogsResponse"},"default":{"$ref":"#/components/responses/getIntegrationLogsResponse"}}}},"/v1/admin/integrations/{name}/{version}":{"get":{"operationId":"getIntegrationByName","description":"Get integration","parameters":[{"name":"name","in":"path","description":"Integration Name","required":true,"schema":{"type":"string"}},{"name":"version","in":"path","description":"Integration version. Either a semver version or tag \"latest\"","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getIntegrationByNameResponse"},"default":{"$ref":"#/components/responses/getIntegrationByNameResponse"}}}},"/v1/admin/workspace-members":{"get":{"operationId":"listWorkspaceMembers","description":"Lists all the members in a workspace","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listWorkspaceMembersResponse"},"default":{"$ref":"#/components/responses/listWorkspaceMembersResponse"}}},"post":{"operationId":"createWorkspaceMember","description":"Add a member to the workspace","parameters":[],"responses":{"200":{"$ref":"#/components/responses/createWorkspaceMemberResponse"},"default":{"$ref":"#/components/responses/createWorkspaceMemberResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createWorkspaceMemberBody"}}},"/v1/admin/workspace-members/{id}":{"delete":{"operationId":"deleteWorkspaceMember","description":"Remove a member of a workspace","parameters":[{"name":"id","in":"path","description":"Workspace member ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteWorkspaceMemberResponse"},"default":{"$ref":"#/components/responses/deleteWorkspaceMemberResponse"}}},"put":{"operationId":"updateWorkspaceMember","description":"Update the member of a workspace","parameters":[{"name":"id","in":"path","description":"Workspace member ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateWorkspaceMemberResponse"},"default":{"$ref":"#/components/responses/updateWorkspaceMemberResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateWorkspaceMemberBody"}}},"/v1/admin/introspect":{"post":{"operationId":"introspect","description":"Introspect the API","parameters":[],"responses":{"200":{"$ref":"#/components/responses/introspectResponse"},"default":{"$ref":"#/components/responses/introspectResponse"}},"requestBody":{"$ref":"#/components/requestBodies/introspectBody"}}},"/v1/storage/files":{"post":{"operationId":"createFile","description":"Create File","parameters":[],"responses":{"200":{"$ref":"#/components/responses/createFileResponse"},"default":{"$ref":"#/components/responses/createFileResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createFileBody"}},"get":{"operationId":"listFiles","description":"List Files","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"botId","in":"query","description":"Bot ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listFilesResponse"},"default":{"$ref":"#/components/responses/listFilesResponse"}}}},"/v1/storage/files/{id}":{"get":{"operationId":"getFile","description":"Get File","parameters":[{"name":"id","in":"path","description":"File ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getFileResponse"},"default":{"$ref":"#/components/responses/getFileResponse"}}},"delete":{"operationId":"deleteFile","description":"Delete File","parameters":[{"name":"id","in":"path","description":"File ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteFileResponse"},"default":{"$ref":"#/components/responses/deleteFileResponse"}}}},"/v1/storage/files/{id}/download":{"get":{"operationId":"downloadFile","description":"Download File","parameters":[{"name":"id","in":"path","description":"File ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/downloadFileResponse"},"default":{"$ref":"#/components/responses/downloadFileResponse"}}}}},"components":{"schemas":{"Bot":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Id of the [Bot](#schema_bot)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Bot](#schema_bot) in the ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Bot](#schema_bot) in the ISO 8601 format"},"signingSecret":{"type":"string","description":"Signing secret of the [Bot](#schema_bot)"},"integrations":{"type":"object","additionalProperties":{"type":"object","properties":{"enabled":{"type":"boolean"},"name":{"type":"string"},"version":{"type":"string"},"webhookUrl":{"type":"string"},"configuration":{"type":"object","additionalProperties":true},"status":{"type":"string","enum":["registration_pending","registered","registration_failed","unregistration_pending","unregistered","unregistration_failed"]}},"required":["enabled","name","version","webhookUrl","configuration","status"],"additionalProperties":false},"description":"A mapping of integrations to their configuration"},"user":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"required":["tags"],"description":"User object configuration","additionalProperties":false},"conversation":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"required":["tags"],"description":"Conversation object configuration","additionalProperties":false},"message":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"required":["tags"],"description":"Message object configuration","additionalProperties":false},"states":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["conversation","user","bot"],"description":"Type of the [State](#schema_state) (`conversation`, `user` or `bot`)"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the [State](#schema_state) in the `JSON schema` format. This `JSON schema` is going to be used for validating the state data."},"expiry":{"type":"number","minimum":1,"description":"Expiry of the [State](#schema_state) in milliseconds. The state will expire if it is idle for the configured value. By default, a state doesn't expire."}},"required":["type","schema"],"additionalProperties":false},"description":"A mapping of states to their definition"},"configuration":{"type":"object","properties":{"data":{"type":"object","additionalProperties":true,"description":"Configuration data"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."}},"required":["data","schema"],"description":"Configuration of the bot","additionalProperties":false},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Event Definition","additionalProperties":false},"description":"Events definition"},"recurringEvents":{"type":"object","additionalProperties":{"type":"object","properties":{"schedule":{"type":"object","properties":{"cron":{"type":"string"}},"required":["cron"],"additionalProperties":false},"type":{"type":"string"},"payload":{"type":"object","additionalProperties":true}},"required":["schedule","type","payload"],"additionalProperties":false},"description":"Recurring events"},"name":{"type":"string","description":"Name of the [Bot](#schema_bot)"},"deployedAt":{"type":"string","format":"date-time","description":"Last deployment date of the [Bot](#schema_bot) in the ISO 8601 format"},"dev":{"type":"boolean","description":"Indicates if the [Bot](#schema_bot) is a development bot; Development bots run locally and can install dev integrations"},"createdBy":{"type":"string","description":"Id of the user that created the bot"},"medias":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string","description":"URL of the media file"},"name":{"type":"string","description":"Name of the media file"}},"required":["url","name"]},"description":"Media files associated with the [Bot](#schema_bot)"}},"required":["id","createdAt","updatedAt","signingSecret","integrations","user","conversation","message","states","configuration","events","recurringEvents","name","dev","medias"],"additionalProperties":false},"Integration":{"type":"object","properties":{"id":{"type":"string","description":"Id of the [Integration](#schema_integration)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Integration](#schema_integration) in the ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Integration](#schema_integration) in the ISO 8601 format"},"name":{"type":"string","description":"Name of the [Integration](#schema_integration)"},"version":{"type":"string","description":"Version of the [Integration](#schema_integration)"},"configuration":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."}},"required":["schema"],"description":"Configuration definition","additionalProperties":false},"channels":{"type":"object","additionalProperties":{"type":"object","properties":{"messages":{"type":"object","additionalProperties":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Message definition","additionalProperties":false}},"conversation":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}},"creation":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Enable conversation creation"},"requiredTags":{"type":"array","items":{"type":"string"},"description":"The list of tags that are required to be specified when calling the API directly to create a conversation."}},"required":["enabled","requiredTags"],"description":"The conversation creation setting determines how to create a conversation through the API directly. The integration will have to implement the `createConversation` functionality to support this setting.","additionalProperties":false}},"required":["tags","creation"],"description":"Conversation object configuration","additionalProperties":false},"message":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"required":["tags"],"description":"Message object configuration","additionalProperties":false}},"required":["messages","conversation","message"],"description":"Channel definition","additionalProperties":false}},"states":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["conversation","user","integration"],"description":"Type of the [State](#schema_state) (`conversation`, `user` or `integration`)"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the [State](#schema_state) in the `JSON schema` format. This `JSON schema` is going to be used for validating the state data."}},"required":["type","schema"],"description":"State definition","additionalProperties":false}},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Event Definition","additionalProperties":false}},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"input":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false},"output":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false}},"required":["input","output"],"description":"Action definition","additionalProperties":false}},"user":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}},"creation":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Enable user creation"},"requiredTags":{"type":"array","items":{"type":"string"},"description":"The list of tags that are required to be specified when calling the API directly to create a user."}},"required":["enabled","requiredTags"],"description":"The user creation setting determines how to create a user through the API directly. The integration will have to implement the `createUser` functionality to support this setting.","additionalProperties":false}},"required":["tags","creation"],"description":"User object configuration","additionalProperties":false},"dev":{"type":"boolean","description":"Indicates if the integration is a development integration; Dev integrations run locally"},"title":{"type":"string","minLength":1,"maxLength":64,"description":"Title of the integration. This is the name that will be displayed in the UI"},"description":{"type":"string","maxLength":256,"description":"Description of the integration. This is the description that will be displayed in the UI"},"iconUrl":{"type":"string","description":"URL of the icon of the integration. This is the icon that will be displayed in the UI"},"readmeUrl":{"type":"string","description":"URL of the readme of the integration. This is the readme that will be displayed in the UI"}},"required":["id","createdAt","updatedAt","name","version","configuration","channels","states","events","actions","user","dev","title","description","iconUrl","readmeUrl"],"additionalProperties":false},"Workspace":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"ownerId":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"},"botCount":{"type":"number"},"accountType":{"type":"string","enum":["free","premium"]},"blocked":{"type":"boolean"},"spendingLimit":{"type":"number"}},"required":["id","name","ownerId","createdAt","updatedAt","botCount","accountType","blocked","spendingLimit"],"additionalProperties":false},"User":{"type":"object","properties":{"id":{"type":"string","description":"Id of the [User](#schema_user)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in the ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in the ISO 8601 format"},"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"Set of [Tags](#tags) that you can attach to a [User](#schema_user). The set of [Tags](#tags) available on a [User](#schema_user) is restricted by the list of [Tags](#tags) defined previously by the [Bot](#schema_bot). Individual keys can be unset by posting an empty value to them."}},"required":["id","createdAt","updatedAt","tags"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false},"Conversation":{"type":"object","properties":{"id":{"type":"string","description":"Id of the [Conversation](#schema_conversation)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Conversation](#schema_conversation) in the ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Conversation](#schema_conversation) in the ISO 8601 format"},"channel":{"type":"string","description":"Name of the channel where the [Conversation](#schema_conversation) is happening"},"integration":{"type":"string","description":"Name of the integration that created the [Conversation](#schema_conversation)"},"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"Set of [Tags](#tags) that you can attach to a [Conversation](#schema_conversation). The set of [Tags](#tags) available on a [Conversation](#schema_conversation) is restricted by the list of [Tags](#tags) defined previously by the [Bot](#schema_bot). Individual keys can be unset by posting an empty value to them."}},"required":["id","createdAt","updatedAt","channel","integration","tags"],"description":"The conversation object represents an exchange of messages between one or more users. A [Conversation](#schema_conversation) is always linked to an integration's channels. For example, a Slack channel represents a conversation.","additionalProperties":false},"Event":{"type":"object","properties":{"id":{"type":"string","description":"Id of the [Event](#schema_event)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Event](#schema_event) in the ISO 8601 format"},"type":{"type":"string","description":"Type of the [Event](#schema_event)."},"payload":{"type":"object","additionalProperties":true,"description":"Payload is the content of the event defined by the integration installed on your bot or one of the default events created by our api."}},"required":["id","createdAt","type","payload"],"description":"The event object represents an action or an occurrence.","additionalProperties":false},"Message":{"type":"object","properties":{"id":{"type":"string","description":"Id of the [Message](#schema_message)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Message](#schema_message) in the ISO 8601 format"},"type":{"type":"string","description":"Type of the [Message](#schema_message) represents the resource type that the message is related to"},"payload":{"type":"object","additionalProperties":true,"description":"Payload is the content type of the message. Accepted payload options: Text, Image, Choice, Dropdown, Card, Carousel, File, Audio, Video, Location"},"direction":{"type":"string","enum":["incoming","outgoing"],"description":"Direction of the message (`incoming` or `outgoing`)."},"userId":{"type":"string","description":"ID of the [User](#schema_user)"},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)"},"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"Set of [Tags](#tags) that you can attach to a [Conversation](#schema_conversation). The set of [Tags](#tags) available on a [Conversation](#schema_conversation) is restricted by the list of [Tags](#tags) defined previously by the [Bot](#schema_bot). Individual keys can be unset by posting an empty value to them."}},"required":["id","createdAt","type","payload","direction","userId","conversationId","tags"],"description":"The Message object represents a message in a [Conversation](#schema_conversation) for a specific [User](#schema_user).","additionalProperties":false},"State":{"type":"object","properties":{"id":{"type":"string","description":"Id of the [State](#schema_state)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [State](#schema_state) in the ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [State](#schema_state) in the ISO 8601 format"},"botId":{"type":"string","description":"Id of the [Bot](#schema_bot)"},"conversationId":{"type":"string","description":"Id of the [Conversation](#schema_conversation)"},"userId":{"type":"string","description":"Id of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [State](#schema_state) which is declared inside the bot definition"},"type":{"type":"string","enum":["conversation","user","bot","integration"],"description":"Type of the [State](#schema_state) represents the resource type (`conversation`, `user`, `bot` or `integration`) that the state is related to"},"payload":{"type":"object","additionalProperties":true,"description":"Payload is the content of the state defined by your bot."}},"required":["id","createdAt","updatedAt","botId","name","type","payload"],"description":"The state object represents the current payload. A state is always linked to either a bot, a conversation or a user.","additionalProperties":false},"File":{"type":"object","properties":{"botId":{"type":"string","format":"uuid","description":"ID of the bot the file will be used for"},"name":{"type":"string","description":"Optional arbitrary file name (e.g. my-image.jpg), will be used for display purposes only."},"accessType":{"type":"string","enum":["private","public"],"description":"Accepted values: private, public"},"id":{"type":"string","description":"ID of the [File](#schema_file)"},"createdAt":{"type":"string","description":"Creation date of the [File](#schema_file) in ISO 8601 format"},"size":{"type":"number","description":"Size of the file in bytes"},"publicUrl":{"type":"string","description":"Public URL to the file contents, available only if the access type is public. If the file is private, use the Download endpoint to retrieve the file contents."}},"required":["botId","name","accessType","id","createdAt","size"],"additionalProperties":false}},"responses":{"createConversationResponse":{"description":"Returns a [Conversation](#schema_conversation) object if creation succeeds. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"conversation":{"$ref":"#/components/schemas/Conversation"}},"required":["conversation"],"title":"createConversationResponse","additionalProperties":false}}}},"getConversationResponse":{"description":"Returns a [Conversation](#schema_conversation) object if a valid identifier was provided. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"conversation":{"$ref":"#/components/schemas/Conversation"}},"required":["conversation"],"title":"getConversationResponse","additionalProperties":false}}}},"listConversationsResponse":{"description":"Returns a list of [Conversation](#schema_conversation) objects","content":{"application/json":{"schema":{"type":"object","properties":{"conversations":{"type":"array","items":{"$ref":"#/components/schemas/Conversation"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["conversations","meta"],"title":"listConversationsResponse","additionalProperties":false}}}},"getOrCreateConversationResponse":{"description":"Returns a [Conversation](#schema_conversation) object if a valid identifier was provided. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"conversation":{"$ref":"#/components/schemas/Conversation"}},"required":["conversation"],"title":"getOrCreateConversationResponse","additionalProperties":false}}}},"updateConversationResponse":{"description":"Returns an updated [Conversation](#schema_conversation) object if a valid identifier was provided. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"conversation":{"$ref":"#/components/schemas/Conversation"}},"required":["conversation"],"title":"updateConversationResponse","additionalProperties":false}}}},"deleteConversationResponse":{"description":"Returns the [Conversation](#schema_conversation) object that was deleted","content":{"application/json":{"schema":{"type":"object","title":"deleteConversationResponse","additionalProperties":false}}}},"createEventResponse":{"description":"Returns a [Event](#schema_event) object if creation succeeds. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"event":{"$ref":"#/components/schemas/Event"}},"required":["event"],"title":"createEventResponse","additionalProperties":false}}}},"getEventResponse":{"description":"Returns the [Event](#schema_event) object if a valid identifiers were provided. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"event":{"$ref":"#/components/schemas/Event"}},"required":["event"],"title":"getEventResponse","additionalProperties":false}}}},"listEventsResponse":{"description":"Returns a list of [Event](#schema_event) objects","content":{"application/json":{"schema":{"type":"object","properties":{"events":{"type":"array","items":{"$ref":"#/components/schemas/Event"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["events","meta"],"title":"listEventsResponse","additionalProperties":false}}}},"createMessageResponse":{"description":"Returns a [Message](#schema_message) object if creation succeeds.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"$ref":"#/components/schemas/Message"}},"required":["message"],"title":"createMessageResponse","additionalProperties":false}}}},"getOrCreateMessageResponse":{"description":"Returns a [Message](#schema_message) object if a valid identifier was provided. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"$ref":"#/components/schemas/Message"}},"required":["message"],"title":"getOrCreateMessageResponse","additionalProperties":false}}}},"getMessageResponse":{"description":"Returns a [Message](#schema_message) object if a valid identifier was provided. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"$ref":"#/components/schemas/Message"}},"required":["message"],"title":"getMessageResponse","additionalProperties":false}}}},"updateMessageResponse":{"description":"Message information","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"$ref":"#/components/schemas/Message"}},"required":["message"],"title":"updateMessageResponse","additionalProperties":false}}}},"listMessagesResponse":{"description":"Returns a list of [Messages](#schema_message) objects.","content":{"application/json":{"schema":{"type":"object","properties":{"messages":{"type":"array","items":{"$ref":"#/components/schemas/Message"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["messages","meta"],"title":"listMessagesResponse","additionalProperties":false}}}},"deleteMessageResponse":{"description":"Returns the [Message](#schema_message) object that was deleted","content":{"application/json":{"schema":{"type":"object","title":"deleteMessageResponse","additionalProperties":false}}}},"createUserResponse":{"description":"Returns a [User](#schema_user) object if creation succeeds. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"$ref":"#/components/schemas/User"}},"required":["user"],"title":"createUserResponse","additionalProperties":false}}}},"getUserResponse":{"description":"Returns a [User](#schema_user) object if a valid identifier was provided. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"$ref":"#/components/schemas/User"}},"required":["user"],"title":"getUserResponse","additionalProperties":false}}}},"listUsersResponse":{"description":"Returns a list of [User](#schema_user) objects","content":{"application/json":{"schema":{"type":"object","properties":{"users":{"type":"array","items":{"$ref":"#/components/schemas/User"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["users","meta"],"title":"listUsersResponse","additionalProperties":false}}}},"getOrCreateUserResponse":{"description":"Returns a [User](#schema_user) object if a valid identifier was provided. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"$ref":"#/components/schemas/User"}},"required":["user"],"title":"getOrCreateUserResponse","additionalProperties":false}}}},"updateUserResponse":{"description":"Returns an updated [User](#schema_user) object if a valid identifier was provided. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"$ref":"#/components/schemas/User"}},"required":["user"],"title":"updateUserResponse","additionalProperties":false}}}},"deleteUserResponse":{"description":"Returns the [User](#schema_user) object that was deleted","content":{"application/json":{"schema":{"type":"object","title":"deleteUserResponse","additionalProperties":false}}}},"getStateResponse":{"description":"Returns the [State](#schema_state) object if a valid identifiers were provided. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"state":{"$ref":"#/components/schemas/State"}},"required":["state"],"title":"getStateResponse","additionalProperties":false}}}},"setStateResponse":{"description":"Returns the updated [State](#schema_state) object if a valid identifier was provided. Returns an [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"state":{"$ref":"#/components/schemas/State"}},"required":["state"],"title":"setStateResponse","additionalProperties":false}}}},"patchStateResponse":{"description":"Returns the updated [State](#schema_state) object if a valid identifier was provided. Returns an [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"state":{"$ref":"#/components/schemas/State"}},"required":["state"],"title":"patchStateResponse","additionalProperties":false}}}},"callActionResponse":{"description":"Action payload","content":{"application/json":{"schema":{"type":"object","properties":{"output":{"type":"object","additionalProperties":true,"description":"Input of the action"}},"required":["output"],"title":"callActionResponse","additionalProperties":false}}}},"configureIntegrationResponse":{"description":"Configuration of the integration","content":{"application/json":{"schema":{"type":"object","title":"configureIntegrationResponse","additionalProperties":false}}}},"listPublicIntegrationsResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"integrations":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Id of the [Integration](#schema_integration)"},"name":{"type":"string","description":"Name of the [Integration](#schema_integration)"},"version":{"type":"string","description":"Version of the [Integration](#schema_integration)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Integration](#schema_integration) in the ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Integration](#schema_integration) in the ISO 8601 format"},"title":{"type":"string","minLength":1,"maxLength":64,"description":"Title of the integration. This is the name that will be displayed in the UI"},"description":{"type":"string","maxLength":256,"description":"Description of the integration. This is the description that will be displayed in the UI"},"iconUrl":{"type":"string","description":"URL of the icon of the integration. This is the icon that will be displayed in the UI"}},"required":["id","name","version","createdAt","updatedAt","title","description","iconUrl"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["integrations","meta"],"title":"listPublicIntegrationsResponse","additionalProperties":false}}}},"getPublicIntegrationByIdResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"integration":{"$ref":"#/components/schemas/Integration"}},"required":["integration"],"title":"getPublicIntegrationByIdResponse","additionalProperties":false}}}},"getPublicIntegrationResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"integration":{"$ref":"#/components/schemas/Integration"}},"required":["integration"],"title":"getPublicIntegrationResponse","additionalProperties":false}}}},"createBotResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"bot":{"$ref":"#/components/schemas/Bot"}},"required":["bot"],"title":"createBotResponse","additionalProperties":false}}}},"updateBotResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"bot":{"$ref":"#/components/schemas/Bot"}},"required":["bot"],"title":"updateBotResponse","additionalProperties":false}}}},"transferBotResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"transferBotResponse","additionalProperties":false}}}},"listBotsResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"bots":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Id of the [Bot](#schema_bot)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Bot](#schema_bot) in the ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Bot](#schema_bot) in the ISO 8601 format"},"name":{"type":"string"},"deployedAt":{"type":"string","format":"date-time"}},"required":["id","createdAt","updatedAt","name"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["bots","meta"],"title":"listBotsResponse","additionalProperties":false}}}},"getBotResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"bot":{"$ref":"#/components/schemas/Bot"}},"required":["bot"],"title":"getBotResponse","additionalProperties":false}}}},"deleteBotResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"deleteBotResponse","additionalProperties":false}}}},"getBotLogsResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"logs":{"type":"array","items":{"type":"object","properties":{"timestamp":{"type":"string"},"level":{"type":"string"},"message":{"type":"string"}},"required":["timestamp","level","message"]}}},"required":["logs"],"title":"getBotLogsResponse","additionalProperties":false}}}},"getBotWebchatResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string"}},"required":["code"],"title":"getBotWebchatResponse","additionalProperties":false}}}},"getBotAnalyticsResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"records":{"type":"array","items":{"type":"object","properties":{"startDateTimeUtc":{"type":"string","description":"ISO 8601 date string of the beginning (inclusive) of the period"},"endDateTimeUtc":{"type":"string","description":"ISO 8601 date string of the end (exclusive) of the period"},"returningUsers":{"type":"number"},"newUsers":{"type":"number"},"sessions":{"type":"number"},"messages":{"type":"number"}},"required":["startDateTimeUtc","endDateTimeUtc","returningUsers","newUsers","sessions","messages"]}}},"required":["records"],"title":"getBotAnalyticsResponse","additionalProperties":false}}}},"getWorkspaceResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"ownerId":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"},"botCount":{"type":"number"},"accountType":{"type":"string","enum":["free","premium"]},"blocked":{"type":"boolean"},"spendingLimit":{"type":"number"}},"required":["id","name","ownerId","createdAt","updatedAt","botCount","accountType","blocked","spendingLimit"],"title":"getWorkspaceResponse","additionalProperties":false}}}},"updateWorkspaceResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"ownerId":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"},"botCount":{"type":"number"},"accountType":{"type":"string","enum":["free","premium"]},"blocked":{"type":"boolean"},"spendingLimit":{"type":"number"}},"required":["id","name","ownerId","createdAt","updatedAt","botCount","accountType","blocked","spendingLimit"],"title":"updateWorkspaceResponse","additionalProperties":false}}}},"listWorkspacesResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"workspaces":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"ownerId":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"},"botCount":{"type":"number"},"accountType":{"type":"string","enum":["free","premium"]}},"required":["id","name","ownerId","createdAt","updatedAt","botCount","accountType"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["workspaces","meta"],"title":"listWorkspacesResponse","additionalProperties":false}}}},"createIntegrationResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"integration":{"$ref":"#/components/schemas/Integration"}},"required":["integration"],"title":"createIntegrationResponse","additionalProperties":false}}}},"updateIntegrationResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"integration":{"$ref":"#/components/schemas/Integration"}},"required":["integration"],"title":"updateIntegrationResponse","additionalProperties":false}}}},"listIntegrationsResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"integrations":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Id of the [Integration](#schema_integration)"},"name":{"type":"string","description":"Name of the [Integration](#schema_integration)"},"version":{"type":"string","description":"Version of the [Integration](#schema_integration)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Integration](#schema_integration) in the ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Integration](#schema_integration) in the ISO 8601 format"},"title":{"type":"string","minLength":1,"maxLength":64,"description":"Title of the integration. This is the name that will be displayed in the UI"},"description":{"type":"string","maxLength":256,"description":"Description of the integration. This is the description that will be displayed in the UI"},"iconUrl":{"type":"string","description":"URL of the icon of the integration. This is the icon that will be displayed in the UI"}},"required":["id","name","version","createdAt","updatedAt","title","description","iconUrl"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["integrations","meta"],"title":"listIntegrationsResponse","additionalProperties":false}}}},"getIntegrationResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"integration":{"$ref":"#/components/schemas/Integration"}},"required":["integration"],"title":"getIntegrationResponse","additionalProperties":false}}}},"getIntegrationLogsResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"logs":{"type":"array","items":{"type":"object","properties":{"timestamp":{"type":"string"},"level":{"type":"string"},"message":{"type":"string"}},"required":["timestamp","level","message"]}}},"required":["logs"],"title":"getIntegrationLogsResponse","additionalProperties":false}}}},"getIntegrationByNameResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"integration":{"$ref":"#/components/schemas/Integration"}},"required":["integration"],"title":"getIntegrationByNameResponse","additionalProperties":false}}}},"deleteIntegrationResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"deleteIntegrationResponse","additionalProperties":false}}}},"listWorkspaceMembersResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"members":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"userId":{"type":"string","format":"uuid"},"email":{"type":"string"},"role":{"type":"string","enum":["viewer","billing","developer","manager","administrator","owner"]}},"required":["id","email","role"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["members","meta"],"title":"listWorkspaceMembersResponse","additionalProperties":false}}}},"deleteWorkspaceMemberResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"deleteWorkspaceMemberResponse","additionalProperties":false}}}},"createWorkspaceMemberResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string"},"userId":{"type":"string","format":"uuid"},"email":{"type":"string"},"role":{"type":"string","enum":["viewer","billing","developer","manager","administrator","owner"]}},"required":["id","email","role"],"title":"createWorkspaceMemberResponse","additionalProperties":false}}}},"updateWorkspaceMemberResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string"},"userId":{"type":"string","format":"uuid"},"email":{"type":"string"},"role":{"type":"string","enum":["viewer","billing","developer","manager","administrator","owner"]}},"required":["id","email","role"],"title":"updateWorkspaceMemberResponse","additionalProperties":false}}}},"introspectResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"workspaceId":{"type":"string"},"botId":{"type":"string"},"userId":{"type":"string"}},"required":["workspaceId","botId","userId"],"title":"introspectResponse","additionalProperties":false}}}},"createFileResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"file":{"$ref":"#/components/schemas/File"}},"required":["file"],"title":"createFileResponse","additionalProperties":false}}}},"getFileResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"file":{"$ref":"#/components/schemas/File"}},"required":["file"],"title":"getFileResponse","additionalProperties":false}}}},"downloadFileResponse":{"description":"Raw file contents","content":{"application/json":{"schema":{"nullable":true,"title":"downloadFileResponse"}}}},"deleteFileResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"deleteFileResponse","additionalProperties":false}}}},"listFilesResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"files":{"type":"array","items":{"$ref":"#/components/schemas/File"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["files","meta"],"title":"listFilesResponse","additionalProperties":false}}}}},"requestBodies":{"createConversationBody":{"description":"Conversation data","content":{"application/json":{"schema":{"type":"object","properties":{"channel":{"type":"string","description":"Channel name"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Tags for the [Conversation](#schema_conversation)"},"integrationName":{"type":"string","description":"Name of the integration to which the conversation creation will be delegated"}},"required":["channel","tags"],"title":"createConversationBody","additionalProperties":false}}}},"getOrCreateConversationBody":{"description":"Conversation data","content":{"application/json":{"schema":{"type":"object","properties":{"channel":{"type":"string","description":"Channel name"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Tags for the [Conversation](#schema_conversation)"},"integrationName":{"type":"string","description":"Name of the integration to which the conversation creation will be delegated"}},"required":["channel","tags"],"title":"getOrCreateConversationBody","additionalProperties":false}}}},"updateConversationBody":{"description":"Conversation data","content":{"application/json":{"schema":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"Tags for the [Conversation](#schema_conversation)"},"participantIds":{"type":"array","items":{"type":"string"},"description":"Ids of the [User]s(#schema_user) participating in the conversation"}},"required":["tags","participantIds"],"title":"updateConversationBody","additionalProperties":false}}}},"createEventBody":{"description":"Event data","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Type of the [Event](#schema_event)."},"payload":{"type":"object","additionalProperties":true,"description":"Payload is the content of the event defined by the integration installed on your bot or one of the default events created by our API."},"schedule":{"type":"object","properties":{"dateTime":{"type":"string","description":"When the [Event](#schema_event) will be sent, in the ISO 8601 format"},"delay":{"type":"number","description":"Delay in milliseconds before sending the [Event](#schema_event)"}},"description":"Schedule the Event to be sent at a specific time. Either dateTime or delay must be provided.","additionalProperties":false}},"required":["type","payload"],"title":"createEventBody","additionalProperties":false}}}},"createMessageBody":{"description":"Message data","content":{"application/json":{"schema":{"type":"object","properties":{"payload":{"type":"object","additionalProperties":true,"description":"Payload is the content type of the message. Accepted payload options: Text, Image, Choice, Dropdown, Card, Carousel, File, Audio, Video, Location"},"userId":{"type":"string","description":"ID of the [User](#schema_user)"},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)"},"type":{"type":"string","description":"Type of the [Message](#schema_message) represents the resource type that the message is related to"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Set of [Tags](#tags) that you can attach to a [Conversation](#schema_conversation). The set of [Tags](#tags) available on a [Conversation](#schema_conversation) is restricted by the list of [Tags](#tags) defined previously by the [Bot](#schema_bot). Individual keys can be unset by posting an empty value to them."},"schedule":{"type":"object","properties":{"dateTime":{"type":"string","description":"When the [Message](#schema_message) will be sent, in the ISO 8601 format"},"delay":{"type":"number","description":"Delay in milliseconds before sending the [Message](#schema_message)"}},"description":"Schedule the Message to be sent at a specific time. Either dateTime or delay must be provided.","additionalProperties":false}},"required":["payload","userId","conversationId","type","tags"],"title":"createMessageBody","additionalProperties":false}}}},"getOrCreateMessageBody":{"description":"Message data","content":{"application/json":{"schema":{"type":"object","properties":{"payload":{"type":"object","additionalProperties":true,"description":"Payload is the content type of the message. Accepted payload options: Text, Image, Choice, Dropdown, Card, Carousel, File, Audio, Video, Location"},"userId":{"type":"string","description":"ID of the [User](#schema_user)"},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)"},"type":{"type":"string","description":"Type of the [Message](#schema_message) represents the resource type that the message is related to"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Set of [Tags](#tags) that you can attach to a [Conversation](#schema_conversation). The set of [Tags](#tags) available on a [Conversation](#schema_conversation) is restricted by the list of [Tags](#tags) defined previously by the [Bot](#schema_bot). Individual keys can be unset by posting an empty value to them."},"schedule":{"type":"object","properties":{"dateTime":{"type":"string","description":"When the [Message](#schema_message) will be sent, in the ISO 8601 format"},"delay":{"type":"number","description":"Delay in milliseconds before sending the [Message](#schema_message)"}},"description":"Schedule the Message to be sent at a specific time. Either dateTime or delay must be provided.","additionalProperties":false}},"required":["payload","userId","conversationId","type","tags"],"title":"getOrCreateMessageBody","additionalProperties":false}}}},"updateMessageBody":{"description":"Message data","content":{"application/json":{"schema":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"Set of [Tags](#tags) that you can attach to a [Conversation](#schema_conversation). The set of [Tags](#tags) available on a [Conversation](#schema_conversation) is restricted by the list of [Tags](#tags) defined previously by the [Bot](#schema_bot). Individual keys can be unset by posting an empty value to them."}},"required":["tags"],"title":"updateMessageBody","additionalProperties":false}}}},"createUserBody":{"description":"User data","content":{"application/json":{"schema":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Tags for the [User](#schema_user)"},"integrationName":{"type":"string","description":"Name of the integration to which the user creation will be delegated"}},"required":["tags"],"title":"createUserBody","additionalProperties":false}}}},"getOrCreateUserBody":{"description":"User data","content":{"application/json":{"schema":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Tags for the [User](#schema_user)"},"integrationName":{"type":"string","description":"Name of the integration to which the user creation will be delegated"}},"required":["tags"],"title":"getOrCreateUserBody","additionalProperties":false}}}},"updateUserBody":{"description":"User data","content":{"application/json":{"schema":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"Tags for the [User](#schema_user)"}},"required":["tags"],"title":"updateUserBody","additionalProperties":false}}}},"setStateBody":{"description":"State content","content":{"application/json":{"schema":{"type":"object","properties":{"payload":{"type":"object","additionalProperties":true,"nullable":true,"description":"Payload is the content of the state defined by your bot."},"expiry":{"type":"number","minimum":1,"description":"Expiry of the [State](#schema_state) in milliseconds. The state will expire if it is idle for the configured value. By default, a state doesn't expire."}},"required":["payload"],"title":"setStateBody","additionalProperties":false}}}},"patchStateBody":{"description":"State content","content":{"application/json":{"schema":{"type":"object","properties":{"payload":{"type":"object","additionalProperties":true,"description":"Payload is the content of the state defined by your bot."}},"required":["payload"],"title":"patchStateBody","additionalProperties":false}}}},"callActionBody":{"description":"Action payload","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Type of the action"},"input":{"type":"object","additionalProperties":true,"description":"Input of the action"}},"required":["type","input"],"title":"callActionBody","additionalProperties":false}}}},"configureIntegrationBody":{"description":"Configuration of the integration","content":{"application/json":{"schema":{"type":"object","properties":{"identifier":{"type":"string","description":"Unique identifier of the integration that was installed on the bot"}},"required":["identifier"],"title":"configureIntegrationBody","additionalProperties":false}}}},"createBotBody":{"description":"Bot metadata","content":{"application/json":{"schema":{"type":"object","properties":{"states":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["conversation","user","bot"],"description":"Type of the [State](#schema_state) (`conversation`, `user` or `bot`)"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the [State](#schema_state) in the `JSON schema` format. This `JSON schema` is going to be used for validating the state data."},"expiry":{"type":"number","minimum":1,"description":"Expiry of the [State](#schema_state) in milliseconds. The state will expire if it is idle for the configured value. By default, a state doesn't expire."}},"required":["type","schema"],"additionalProperties":false},"description":"A mapping of states to their definition"},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Event Definition","additionalProperties":false},"description":"Events definition"},"recurringEvents":{"type":"object","additionalProperties":{"type":"object","properties":{"schedule":{"type":"object","properties":{"cron":{"type":"string"}},"required":["cron"],"additionalProperties":false},"type":{"type":"string"},"payload":{"type":"object","additionalProperties":true}},"required":["schedule","type","payload"],"additionalProperties":false},"description":"Recurring events"},"configuration":{"type":"object","properties":{"data":{"type":"object","additionalProperties":true,"description":"Configuration data"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."}},"additionalProperties":false},"user":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"additionalProperties":false},"conversation":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"additionalProperties":false},"message":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"additionalProperties":false},"code":{"type":"string","description":"JavaScript code of the bot"},"name":{"type":"string","minLength":1,"description":"Optional name for the bot, if not provided will be auto-generated"},"medias":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string"},"name":{"type":"string"}},"required":["url","name"]},"description":"Media files associated with the [Bot](#schema_bot)"},"url":{"type":"string","description":"URL of the [Bot](#schema_bot); Only available for dev bots"},"dev":{"type":"boolean","description":"Indicates if the [Bot](#schema_bot) is a development bot; Development bots run locally and can install dev integrations"}},"title":"createBotBody","additionalProperties":false}}}},"updateBotBody":{"description":"Bot metadata","content":{"application/json":{"schema":{"type":"object","properties":{"url":{"type":"string","description":"URL of the [Bot](#schema_bot); Only available for dev bots"},"authentication":{"type":"string","enum":["iam"],"description":"Type of the [Bot](#schema_bot) authentication (`iam`)"},"configuration":{"type":"object","properties":{"data":{"type":"object","additionalProperties":true,"description":"Configuration data"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."}},"additionalProperties":false},"blocked":{"type":"boolean"},"user":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","nullable":true,"additionalProperties":false}}},"additionalProperties":false},"message":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","nullable":true,"additionalProperties":false}}},"additionalProperties":false},"conversation":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","nullable":true,"additionalProperties":false}}},"additionalProperties":false},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Event Definition","nullable":true,"additionalProperties":false}},"states":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["conversation","user","bot"],"description":"Type of the [State](#schema_state) (`conversation`, `user` or `bot`)"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the [State](#schema_state) in the `JSON schema` format. This `JSON schema` is going to be used for validating the state data."},"expiry":{"type":"number","minimum":1,"description":"Expiry of the [State](#schema_state) in milliseconds. The state will expire if it is idle for the configured value. By default, a state doesn't expire."}},"required":["type","schema"],"nullable":true,"additionalProperties":false}},"recurringEvents":{"type":"object","additionalProperties":{"type":"object","properties":{"schedule":{"type":"object","properties":{"cron":{"type":"string"}},"required":["cron"],"additionalProperties":false},"type":{"type":"string"},"payload":{"type":"object","additionalProperties":true}},"required":["schedule","type","payload"],"nullable":true,"additionalProperties":false}},"integrations":{"type":"object","additionalProperties":{"type":"object","properties":{"enabled":{"type":"boolean"},"configuration":{"type":"object","additionalProperties":true}},"required":["enabled","configuration"],"nullable":true,"additionalProperties":false}},"code":{"type":"string","description":"JavaScript code of the bot"},"name":{"type":"string","minLength":1,"description":"Optional name for the bot, if not provided will be auto-generated"},"medias":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string"},"name":{"type":"string"}},"required":["url","name"]},"description":"Media files associated with the [Bot](#schema_bot)"}},"title":"updateBotBody","additionalProperties":false}}}},"transferBotBody":{"description":"Bot transfer request","content":{"application/json":{"schema":{"type":"object","properties":{"targetWorkspaceId":{"type":"string","format":"uuid","description":"The ID of the workspace you want to transfer the bot to."}},"required":["targetWorkspaceId"],"title":"transferBotBody","additionalProperties":false}}}},"updateWorkspaceBody":{"description":"Workspace metadata","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","minLength":1,"maxLength":64},"accountType":{"type":"string","enum":["free","premium"]},"spendingLimit":{"type":"number","minimum":5,"maximum":1000}},"title":"updateWorkspaceBody","additionalProperties":false}}}},"createIntegrationBody":{"description":"Integration","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name of the [Integration](#schema_integration)"},"version":{"type":"string","description":"Version of the [Integration](#schema_integration)"},"configuration":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."}},"required":["schema"],"description":"Configuration definition","additionalProperties":false},"states":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["conversation","user","integration"],"description":"Type of the [State](#schema_state) (`conversation`, `user` or `integration`)"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the [State](#schema_state) in the `JSON schema` format. This `JSON schema` is going to be used for validating the state data."}},"required":["type","schema"],"description":"State definition","additionalProperties":false}},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Event Definition","additionalProperties":false}},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"input":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false},"output":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false}},"required":["input","output"],"description":"Action definition","additionalProperties":false}},"channels":{"type":"object","additionalProperties":{"type":"object","properties":{"messages":{"type":"object","additionalProperties":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Message definition","additionalProperties":false}},"conversation":{"type":"object","properties":{"creation":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Enable conversation creation"},"requiredTags":{"type":"array","items":{"type":"string"},"description":"The list of tags that are required to be specified when calling the API directly to create a conversation."}},"required":["enabled","requiredTags"],"description":"The conversation creation setting determines how to create a conversation through the API directly. The integration will have to implement the `createConversation` functionality to support this setting.","additionalProperties":false},"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"additionalProperties":false},"message":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"additionalProperties":false}},"required":["messages"],"additionalProperties":false}},"user":{"type":"object","properties":{"creation":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Enable user creation"},"requiredTags":{"type":"array","items":{"type":"string"},"description":"The list of tags that are required to be specified when calling the API directly to create a user."}},"required":["enabled","requiredTags"],"description":"The user creation setting determines how to create a user through the API directly. The integration will have to implement the `createUser` functionality to support this setting.","additionalProperties":false},"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"additionalProperties":false},"code":{"type":"string","description":"JavaScript code of the integration"},"url":{"type":"string","description":"URL of the integration; Only available for dev integrations"},"dev":{"type":"boolean","description":"Indicates if the integration is a development integration; Dev integrations run locally"},"icon":{"type":"string","description":"Base64 encoded svg of the integration icon. This icon is global to the integration each versions will be updated when this changes."},"readme":{"type":"string","description":"Base64 encoded markdown of the integration readme. The readme is specific to each integration versions."},"title":{"type":"string","minLength":1,"maxLength":64,"description":"Title of the integration. This is the name that will be displayed in the UI"},"description":{"type":"string","maxLength":256,"description":"Description of the integration. This is the description that will be displayed in the UI"}},"required":["name","version"],"title":"createIntegrationBody","additionalProperties":false}}}},"updateIntegrationBody":{"description":"Integration","content":{"application/json":{"schema":{"type":"object","properties":{"configuration":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."}},"required":["schema"],"description":"Configuration definition","additionalProperties":false},"channels":{"type":"object","additionalProperties":{"type":"object","properties":{"messages":{"type":"object","additionalProperties":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Message definition","nullable":true,"additionalProperties":false}},"conversation":{"type":"object","properties":{"creation":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Enable conversation creation"},"requiredTags":{"type":"array","items":{"type":"string"},"description":"The list of tags that are required to be specified when calling the API directly to create a conversation."}},"required":["enabled","requiredTags"],"description":"The conversation creation setting determines how to create a conversation through the API directly. The integration will have to implement the `createConversation` functionality to support this setting.","additionalProperties":false},"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","nullable":true,"additionalProperties":false}}},"additionalProperties":false},"message":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","nullable":true,"additionalProperties":false}}},"additionalProperties":false}},"additionalProperties":false}},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"input":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false},"output":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false}},"required":["input","output"],"description":"Action definition","nullable":true,"additionalProperties":false}},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Event Definition","nullable":true,"additionalProperties":false}},"states":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["conversation","user","integration"],"description":"Type of the [State](#schema_state) (`conversation`, `user` or `integration`)"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the [State](#schema_state) in the `JSON schema` format. This `JSON schema` is going to be used for validating the state data."}},"required":["type","schema"],"description":"State definition","nullable":true,"additionalProperties":false}},"user":{"type":"object","properties":{"creation":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Enable user creation"},"requiredTags":{"type":"array","items":{"type":"string"},"description":"The list of tags that are required to be specified when calling the API directly to create a user."}},"required":["enabled","requiredTags"],"description":"The user creation setting determines how to create a user through the API directly. The integration will have to implement the `createUser` functionality to support this setting.","additionalProperties":false},"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","description":"Title of the tag"},"description":{"type":"string","description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","nullable":true,"additionalProperties":false}}},"additionalProperties":false},"code":{"type":"string","description":"JavaScript code of the integration"},"icon":{"type":"string","description":"Base64 encoded svg of the integration icon. This icon is global to the integration each versions will be updated when this changes."},"readme":{"type":"string","description":"Base64 encoded markdown of the integration readme. The readme is specific to each integration versions."},"title":{"type":"string","minLength":1,"maxLength":64,"description":"Title of the integration. This is the name that will be displayed in the UI"},"description":{"type":"string","maxLength":256,"description":"Description of the integration. This is the description that will be displayed in the UI"},"url":{"type":"string","description":"URL of the integration; Only available for dev integrations"}},"title":"updateIntegrationBody","additionalProperties":false}}}},"createWorkspaceMemberBody":{"description":"Workspace member metadata","content":{"application/json":{"schema":{"type":"object","properties":{"email":{"type":"string","format":"email"},"role":{"type":"string","enum":["viewer","billing","developer","manager","administrator","owner"]}},"required":["email","role"],"title":"createWorkspaceMemberBody","additionalProperties":false}}}},"updateWorkspaceMemberBody":{"description":"Workspace member metadata","content":{"application/json":{"schema":{"type":"object","properties":{"role":{"type":"string","enum":["viewer","billing","developer","manager","administrator","owner"]}},"title":"updateWorkspaceMemberBody","additionalProperties":false}}}},"introspectBody":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"botId":{"type":"string"}},"required":["botId"],"title":"introspectBody","additionalProperties":false}}}},"createFileBody":{"description":"Create File","content":{"application/json":{"schema":{"type":"object","properties":{"botId":{"type":"string","format":"uuid","description":"ID of the bot the file will be used for"},"contents":{"type":"string","description":"Base64-encoded file contents"},"name":{"type":"string","description":"Optional arbitrary file name (e.g. my-image.jpg), will be used for display purposes only."},"accessType":{"type":"string","enum":["private","public"],"description":"Accepted values: private, public"}},"required":["botId","contents","name","accessType"],"title":"createFileBody","additionalProperties":false}}}}},"parameters":{}}}