{"openapi":"3.0.0","servers":[{"url":"https://api.botpress.cloud"}],"info":{"title":"Botpress API","description":"API for Botpress Cloud","version":"0.46.0"},"paths":{"/v1/chat/conversations":{"post":{"operationId":"createConversation","description":"Creates a new [Conversation](#schema_conversation). When creating a new [Conversation](#schema_conversation), the required tags must be provided. See the specific integration for more details.","parameters":[],"responses":{"201":{"$ref":"#/components/responses/createConversationResponse"},"default":{"$ref":"#/components/responses/createConversationResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createConversationBody"}},"get":{"operationId":"listConversations","description":"Retrieves a list of [Conversation](#schema_conversation) you’ve previously created. The conversations are returned in sorted order, with the most recent appearing first. The list can be filtered using [Tags](#tags).","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"sortField","in":"query","description":"Sort results by this field","schema":{"type":"string","enum":["createdAt","updatedAt"]}},{"name":"sortDirection","in":"query","description":"Sort results in this direction","schema":{"type":"string","enum":["asc","desc"]}},{"name":"tags","in":"query","description":"Filter by tags","schema":{"type":"object","additionalProperties":{"type":"string"}}},{"name":"participantIds","in":"query","description":"Filter by participant ids","schema":{"type":"array","items":{"type":"string"}}},{"name":"integrationName","in":"query","description":"Filter by integration name","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listConversationsResponse"},"default":{"$ref":"#/components/responses/listConversationsResponse"}}}},"/v1/chat/conversations/{id}":{"get":{"operationId":"getConversation","description":"Retrieves the [Conversation](#schema_conversation) object for a valid identifier.","parameters":[{"name":"id","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getConversationResponse"},"default":{"$ref":"#/components/responses/getConversationResponse"}}},"put":{"operationId":"updateConversation","description":"Update a [Conversation](#schema_conversation) object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.","parameters":[{"name":"id","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateConversationResponse"},"default":{"$ref":"#/components/responses/updateConversationResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateConversationBody"}},"delete":{"operationId":"deleteConversation","description":"Permanently deletes a [Conversation](#schema_conversation). It cannot be undone. Also immediately deletes corresponding [Messages](#schema_message).","parameters":[{"name":"id","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteConversationResponse"},"default":{"$ref":"#/components/responses/deleteConversationResponse"}}}},"/v1/chat/conversations/get-or-create":{"post":{"operationId":"getOrCreateConversation","description":"Retrieves the [Conversation](#schema_conversation) object for a valid identifier. If the conversation does not exist, it will be created.","parameters":[],"responses":{"200":{"$ref":"#/components/responses/getOrCreateConversationResponse"},"default":{"$ref":"#/components/responses/getOrCreateConversationResponse"}},"requestBody":{"$ref":"#/components/requestBodies/getOrCreateConversationBody"}}},"/v1/chat/conversations/{id}/participants":{"get":{"operationId":"listParticipants","description":"Retrieves a list of [Participant](#schema_participant) for a given [Conversation](#schema_conversation).","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"id","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listParticipantsResponse"},"default":{"$ref":"#/components/responses/listParticipantsResponse"}}},"post":{"operationId":"addParticipant","description":"Add a [Participant](#schema_participant) to a [Conversation](#schema_conversation).","parameters":[{"name":"id","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/addParticipantResponse"},"default":{"$ref":"#/components/responses/addParticipantResponse"}},"requestBody":{"$ref":"#/components/requestBodies/addParticipantBody"}}},"/v1/chat/conversations/{id}/participants/{userId}":{"get":{"operationId":"getParticipant","description":"Retrieves a [Participant](#schema_participant) from a [Conversation](#schema_conversation).","parameters":[{"name":"id","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getParticipantResponse"},"default":{"$ref":"#/components/responses/getParticipantResponse"}}},"delete":{"operationId":"removeParticipant","description":"Remove a [Participant](#schema_participant) from a [Conversation](#schema_conversation).","parameters":[{"name":"id","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/removeParticipantResponse"},"default":{"$ref":"#/components/responses/removeParticipantResponse"}}}},"/v1/chat/events":{"post":{"operationId":"createEvent","description":"Creates a new [Event](#schema_event). When creating a new [Event](#schema_event), the required tags must be provided. See the specific integration for more details.","parameters":[],"responses":{"201":{"$ref":"#/components/responses/createEventResponse"},"default":{"$ref":"#/components/responses/createEventResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createEventBody"}},"get":{"operationId":"listEvents","description":"Retrieves a list of [Event](#schema_event) you’ve previously created. The events are returned in sorted order, with the most recent appearing first.","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"type","in":"query","description":"Filter by event type","schema":{"type":"string"}},{"name":"conversationId","in":"query","description":"Filter by conversation id","schema":{"type":"string"}},{"name":"userId","in":"query","description":"Filter by user id","schema":{"type":"string"}},{"name":"messageId","in":"query","description":"Filter by message id","schema":{"type":"string"}},{"name":"status","in":"query","description":"Filter by status. Allowed values: pending, ignored, processed, failed.","schema":{"type":"string","enum":["pending","ignored","processed","failed","scheduled"]}}],"responses":{"200":{"$ref":"#/components/responses/listEventsResponse"},"default":{"$ref":"#/components/responses/listEventsResponse"}}}},"/v1/chat/events/{id}":{"get":{"operationId":"getEvent","description":"Retrieves the [Event](#schema_event) object for a valid identifiers.","parameters":[{"name":"id","in":"path","description":"Event id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getEventResponse"},"default":{"$ref":"#/components/responses/getEventResponse"}}}},"/v1/chat/messages":{"post":{"operationId":"createMessage","description":"Creates a new [Message](#schema_message). When creating a new [Message](#schema_message), the required tags must be provided. See the specific integration for more details.","parameters":[],"responses":{"201":{"$ref":"#/components/responses/createMessageResponse"},"default":{"$ref":"#/components/responses/createMessageResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createMessageBody"}},"get":{"operationId":"listMessages","description":"Retrieves a list of [Message](#schema_message) you’ve previously created. The messages are returned in sorted order, with the most recent appearing first. The list can be filtered using [Tags](/docs/developers/concepts/tags).","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"conversationId","in":"query","description":"Conversation id","schema":{"type":"string"}},{"name":"tags","in":"query","description":"Filter by tags","schema":{"type":"object","additionalProperties":{"type":"string"}}}],"responses":{"200":{"$ref":"#/components/responses/listMessagesResponse"},"default":{"$ref":"#/components/responses/listMessagesResponse"}}}},"/v1/chat/messages/get-or-create":{"post":{"operationId":"getOrCreateMessage","description":"Retrieves the [Message](#schema_message) object for a valid identifier. If the message does not exist, it will be created.","parameters":[],"responses":{"200":{"$ref":"#/components/responses/getOrCreateMessageResponse"},"default":{"$ref":"#/components/responses/getOrCreateMessageResponse"}},"requestBody":{"$ref":"#/components/requestBodies/getOrCreateMessageBody"}}},"/v1/chat/messages/{id}":{"get":{"operationId":"getMessage","description":"Retrieves the [Message](#schema_message) object for a valid identifier.","parameters":[{"name":"id","in":"path","description":"Id of the Message","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getMessageResponse"},"default":{"$ref":"#/components/responses/getMessageResponse"}}},"put":{"operationId":"updateMessage","description":"Update a message","parameters":[{"name":"id","in":"path","description":"Message id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateMessageResponse"},"default":{"$ref":"#/components/responses/updateMessageResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateMessageBody"}},"delete":{"operationId":"deleteMessage","description":"Permanently deletes a [Message](#schema_message). It cannot be undone.","parameters":[{"name":"id","in":"path","description":"Message id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteMessageResponse"},"default":{"$ref":"#/components/responses/deleteMessageResponse"}}}},"/v1/chat/users":{"post":{"operationId":"createUser","description":"Creates a new [User](#schema_user). When creating a new [User](#schema_user), the required tags must be provided. See the specific integration for more details.","parameters":[],"responses":{"201":{"$ref":"#/components/responses/createUserResponse"},"default":{"$ref":"#/components/responses/createUserResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createUserBody"}},"get":{"operationId":"listUsers","description":"Retrieves a list of [User](#schema_user) previously created. The users are returned in sorted order, with the most recent appearing first. The list can be filtered using [Tags](/docs/developers/concepts/tags).","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"conversationId","in":"query","description":"Filter by conversation id. This will return all users that have participated in the conversation.","schema":{"type":"string"}},{"name":"tags","in":"query","description":"Filter by tags","schema":{"type":"object","additionalProperties":{"type":"string"}}}],"responses":{"200":{"$ref":"#/components/responses/listUsersResponse"},"default":{"$ref":"#/components/responses/listUsersResponse"}}}},"/v1/chat/users/{id}":{"get":{"operationId":"getUser","description":"Retrieves the [User](#schema_user) object for a valid identifier.","parameters":[{"name":"id","in":"path","description":"User ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getUserResponse"},"default":{"$ref":"#/components/responses/getUserResponse"}}},"put":{"operationId":"updateUser","description":"Update a [User](#schema_user) object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.","parameters":[{"name":"id","in":"path","description":"User ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateUserResponse"},"default":{"$ref":"#/components/responses/updateUserResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateUserBody"}},"delete":{"operationId":"deleteUser","description":"Permanently deletes a [User](#schema_user). It cannot be undone.","parameters":[{"name":"id","in":"path","description":"User ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteUserResponse"},"default":{"$ref":"#/components/responses/deleteUserResponse"}}}},"/v1/chat/users/get-or-create":{"post":{"operationId":"getOrCreateUser","description":"Retrieves the [User](#schema_user) object for a valid identifier. If the user does not exist, it will be created.","parameters":[],"responses":{"200":{"$ref":"#/components/responses/getOrCreateUserResponse"},"default":{"$ref":"#/components/responses/getOrCreateUserResponse"}},"requestBody":{"$ref":"#/components/requestBodies/getOrCreateUserBody"}}},"/v1/chat/states/{type}/{id}/{name}/expiry":{"post":{"operationId":"setStateExpiry","description":"Updates the [State](#schema_state) expiry.","parameters":[{"name":"type","in":"path","description":"State type","required":true,"schema":{"type":"string","enum":["conversation","user","bot","integration","task","workflow"]}},{"name":"id","in":"path","description":"State id","required":true,"schema":{"type":"string"}},{"name":"name","in":"path","description":"State name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/setStateExpiryResponse"},"default":{"$ref":"#/components/responses/setStateExpiryResponse"}},"requestBody":{"$ref":"#/components/requestBodies/setStateExpiryBody"}}},"/v1/chat/states/{type}/{id}/{name}":{"get":{"operationId":"getState","description":"Retrieves the [State](#schema_state) object for a valid identifiers.","parameters":[{"name":"type","in":"path","description":"State type","required":true,"schema":{"type":"string","enum":["conversation","user","bot","integration","task","workflow"]}},{"name":"id","in":"path","description":"State id","required":true,"schema":{"type":"string"}},{"name":"name","in":"path","description":"State name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getStateResponse"},"default":{"$ref":"#/components/responses/getStateResponse"}}},"post":{"operationId":"setState","description":"Overrides the [State](#schema_state) object by setting the values of the parameters passed.","parameters":[{"name":"type","in":"path","description":"State type","required":true,"schema":{"type":"string","enum":["conversation","user","bot","integration","task","workflow"]}},{"name":"id","in":"path","description":"State id","required":true,"schema":{"type":"string"}},{"name":"name","in":"path","description":"State name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/setStateResponse"},"default":{"$ref":"#/components/responses/setStateResponse"}},"requestBody":{"$ref":"#/components/requestBodies/setStateBody"}},"patch":{"operationId":"patchState","description":"Updates the [State](#schema_state) object by setting the values of the parameters passed.","parameters":[{"name":"type","in":"path","description":"State type","required":true,"schema":{"type":"string","enum":["conversation","user","bot","integration","task","workflow"]}},{"name":"id","in":"path","description":"State id","required":true,"schema":{"type":"string"}},{"name":"name","in":"path","description":"State name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/patchStateResponse"},"default":{"$ref":"#/components/responses/patchStateResponse"}},"requestBody":{"$ref":"#/components/requestBodies/patchStateBody"}}},"/v1/chat/states/{type}/{id}/{name}/get-or-set":{"post":{"operationId":"getOrSetState","description":"Retrieves the [State](#schema_state) object for a valid identifiers. If the state does not exist, it creates a new state.","parameters":[{"name":"type","in":"path","description":"State type","required":true,"schema":{"type":"string","enum":["conversation","user","bot","integration","task","workflow"]}},{"name":"id","in":"path","description":"State id","required":true,"schema":{"type":"string"}},{"name":"name","in":"path","description":"State name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getOrSetStateResponse"},"default":{"$ref":"#/components/responses/getOrSetStateResponse"}},"requestBody":{"$ref":"#/components/requestBodies/getOrSetStateBody"}}},"/v1/chat/actions":{"post":{"operationId":"callAction","description":"Call an action","parameters":[],"responses":{"200":{"$ref":"#/components/responses/callActionResponse"},"default":{"$ref":"#/components/responses/callActionResponse"}},"requestBody":{"$ref":"#/components/requestBodies/callActionBody"}}},"/v1/chat/integrations/configure":{"post":{"operationId":"configureIntegration","description":"An integration can call this endpoint to configure itself","parameters":[],"responses":{"200":{"$ref":"#/components/responses/configureIntegrationResponse"},"default":{"$ref":"#/components/responses/configureIntegrationResponse"}},"requestBody":{"$ref":"#/components/requestBodies/configureIntegrationBody"}}},"/v1/chat/tasks/{id}":{"get":{"operationId":"getTask","description":"Retrieves the [Task](#schema_task) object for a valid identifier.","parameters":[{"name":"id","in":"path","description":"Task id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getTaskResponse"},"default":{"$ref":"#/components/responses/getTaskResponse"}}},"put":{"operationId":"updateTask","description":"Update a [Task](#schema_task) object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.","parameters":[{"name":"id","in":"path","description":"Task id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateTaskResponse"},"default":{"$ref":"#/components/responses/updateTaskResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateTaskBody"}},"delete":{"operationId":"deleteTask","description":"Permanently deletes a [Task](#schema_task). It cannot be undone.","parameters":[{"name":"id","in":"path","description":"Task id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteTaskResponse"},"default":{"$ref":"#/components/responses/deleteTaskResponse"}}}},"/v1/chat/tasks":{"post":{"operationId":"createTask","description":"Creates a new [Task](#schema_task). When creating a new [Task](#schema_task), the required tags must be provided. See the specific integration for more details.","parameters":[],"responses":{"201":{"$ref":"#/components/responses/createTaskResponse"},"default":{"$ref":"#/components/responses/createTaskResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createTaskBody"}},"get":{"operationId":"listTasks","description":"Retrieves a list of [Task](#schema_task) you've previously created. The tasks are returned in sorted order, with the most recent appearing first. The list can be filtered using [Tags](/docs/developers/concepts/tags).","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"tags","in":"query","description":"Filter by tags","schema":{"type":"object","additionalProperties":{"type":"string"}}},{"name":"conversationId","in":"query","description":"Conversation id","schema":{"type":"string"}},{"name":"userId","in":"query","description":"User id","schema":{"type":"string"}},{"name":"parentTaskId","in":"query","description":"Parent task id","schema":{"type":"string"}},{"name":"status","in":"query","description":"Status","schema":{"type":"array","items":{"type":"string","enum":["pending","in_progress","failed","completed","blocked","paused","timeout","cancelled"]}}},{"name":"type","in":"query","description":"Type","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listTasksResponse"},"default":{"$ref":"#/components/responses/listTasksResponse"}}}},"/v1/chat/workflows":{"post":{"operationId":"createWorkflow","description":"Creates a new [Workflow](#schema_workflow).","parameters":[],"responses":{"201":{"$ref":"#/components/responses/createWorkflowResponse"},"default":{"$ref":"#/components/responses/createWorkflowResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createWorkflowBody"}},"get":{"operationId":"listWorkflows","description":"Retrieves a list of [Workflow](#schema_workflow) you've previously created. The workflows are returned in sorted order, with the most recent appearing first. The list can be filtered using [Tags](/docs/developers/concepts/tags).","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"tags","in":"query","description":"Filter by tags","schema":{"type":"object","additionalProperties":{"type":"string"}}},{"name":"conversationId","in":"query","description":"Conversation id","schema":{"type":"string"}},{"name":"userId","in":"query","description":"User id","schema":{"type":"string"}},{"name":"parentWorkflowId","in":"query","description":"Parent workflow id","schema":{"type":"string"}},{"name":"statuses","in":"query","description":"Status","schema":{"type":"array","items":{"type":"string","enum":["pending","in_progress","failed","completed","listening","paused","timedout","cancelled"]}}},{"name":"name","in":"query","description":"Workflow name","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listWorkflowsResponse"},"default":{"$ref":"#/components/responses/listWorkflowsResponse"}}}},"/v1/chat/workflows/{id}":{"get":{"operationId":"getWorkflow","description":"Retrieves the [Workflow](#schema_workflow) object for a valid identifier.","parameters":[{"name":"id","in":"path","description":"Workflow id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getWorkflowResponse"},"default":{"$ref":"#/components/responses/getWorkflowResponse"}}},"put":{"operationId":"updateWorkflow","description":"Update a [Workflow](#schema_workflow) object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.","parameters":[{"name":"id","in":"path","description":"Workflow id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateWorkflowResponse"},"default":{"$ref":"#/components/responses/updateWorkflowResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateWorkflowBody"}},"delete":{"operationId":"deleteWorkflow","description":"Permanently deletes a [Workflow](#schema_workflow). It cannot be undone.","parameters":[{"name":"id","in":"path","description":"Workflow id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteWorkflowResponse"},"default":{"$ref":"#/components/responses/deleteWorkflowResponse"}}}},"/v1/chat/workflows/get-or-create":{"post":{"operationId":"getOrCreateWorkflow","description":"Get a workflow by tags or creates a new [Workflow](#schema_workflow) if it doesn't exists.","parameters":[],"responses":{"200":{"$ref":"#/components/responses/getOrCreateWorkflowResponse"},"default":{"$ref":"#/components/responses/getOrCreateWorkflowResponse"}},"requestBody":{"$ref":"#/components/requestBodies/getOrCreateWorkflowBody"}}},"/v1/chat/analytics":{"post":{"operationId":"trackAnalytics","description":"Add an event to the analytics","parameters":[],"responses":{"200":{"$ref":"#/components/responses/trackAnalyticsResponse"},"default":{"$ref":"#/components/responses/trackAnalyticsResponse"}},"requestBody":{"$ref":"#/components/requestBodies/trackAnalyticsBody"}}},"/v1/admin/helper/vrl":{"post":{"operationId":"runVrl","description":"Run a VRL script","parameters":[],"responses":{"200":{"$ref":"#/components/responses/runVrlResponse"},"default":{"$ref":"#/components/responses/runVrlResponse"}},"requestBody":{"$ref":"#/components/requestBodies/runVrlBody"}}},"/v1/admin/account/me":{"get":{"operationId":"getAccount","description":"Get details of the account authenticating with this endpoint.","parameters":[],"responses":{"200":{"$ref":"#/components/responses/getAccountResponse"},"default":{"$ref":"#/components/responses/getAccountResponse"}}},"put":{"operationId":"updateAccount","description":"Update details of the account associated with authenticated user","parameters":[],"responses":{"200":{"$ref":"#/components/responses/updateAccountResponse"},"default":{"$ref":"#/components/responses/updateAccountResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateAccountBody"}}},"/v1/admin/account/pats":{"get":{"operationId":"listPersonalAccessTokens","description":"List PATs (Personal Access Tokens) of account.","parameters":[],"responses":{"200":{"$ref":"#/components/responses/listPersonalAccessTokensResponse"},"default":{"$ref":"#/components/responses/listPersonalAccessTokensResponse"}}},"post":{"operationId":"createPersonalAccessToken","description":"Create a PAT","parameters":[],"responses":{"200":{"$ref":"#/components/responses/createPersonalAccessTokenResponse"},"default":{"$ref":"#/components/responses/createPersonalAccessTokenResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createPersonalAccessTokenBody"}}},"/v1/admin/account/pats/{id}":{"delete":{"operationId":"deletePersonalAccessToken","description":"Delete a PAT","parameters":[{"name":"id","in":"path","description":"ID of Personal Access Token","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deletePersonalAccessTokenResponse"},"default":{"$ref":"#/components/responses/deletePersonalAccessTokenResponse"}}}},"/v1/admin/account/preferences/{key}":{"post":{"operationId":"setAccountPreference","description":"Set a preference for the account","parameters":[{"name":"key","in":"path","description":"Preference key","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/setAccountPreferenceResponse"},"default":{"$ref":"#/components/responses/setAccountPreferenceResponse"}},"requestBody":{"$ref":"#/components/requestBodies/setAccountPreferenceBody"}},"get":{"operationId":"getAccountPreference","description":"Get a preference of the account","parameters":[{"name":"key","in":"path","description":"Preference key","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getAccountPreferenceResponse"},"default":{"$ref":"#/components/responses/getAccountPreferenceResponse"}}}},"/v1/admin/hub/integrations":{"get":{"operationId":"listPublicIntegrations","description":"List public integration","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"name","in":"query","description":"Integration Name","schema":{"type":"string"}},{"name":"version","in":"query","description":"Integration version. Either a semver version or tag \"latest\"","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listPublicIntegrationsResponse"},"default":{"$ref":"#/components/responses/listPublicIntegrationsResponse"}}}},"/v1/admin/hub/integrations/{id}":{"get":{"operationId":"getPublicIntegrationById","description":"Get public integration by Id","parameters":[{"name":"id","in":"path","description":"Integration ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getPublicIntegrationByIdResponse"},"default":{"$ref":"#/components/responses/getPublicIntegrationByIdResponse"}}}},"/v1/admin/hub/integrations/{name}/{version}":{"get":{"operationId":"getPublicIntegration","description":"Get public integration by name and version","parameters":[{"name":"name","in":"path","description":"Integration Name","required":true,"schema":{"type":"string"}},{"name":"version","in":"path","description":"Integration version. Either a semver version or tag \"latest\"","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getPublicIntegrationResponse"},"default":{"$ref":"#/components/responses/getPublicIntegrationResponse"}}}},"/v1/admin/bots":{"post":{"operationId":"createBot","description":"Create bot","parameters":[],"responses":{"200":{"$ref":"#/components/responses/createBotResponse"},"default":{"$ref":"#/components/responses/createBotResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createBotBody"}},"get":{"operationId":"listBots","description":"List bots","parameters":[{"name":"dev","in":"query","description":"If true, only dev bots are returned. Otherwise, only production bots are returned.","required":false,"schema":{"type":"boolean"}},{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"sortField","in":"query","description":"Sort results by this field","schema":{"type":"string","enum":["createdAt","updatedAt"]}},{"name":"sortDirection","in":"query","description":"Sort results in this direction","schema":{"type":"string","enum":["asc","desc"]}}],"responses":{"200":{"$ref":"#/components/responses/listBotsResponse"},"default":{"$ref":"#/components/responses/listBotsResponse"}}}},"/v1/admin/bots/{id}":{"put":{"operationId":"updateBot","description":"Update bot","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateBotResponse"},"default":{"$ref":"#/components/responses/updateBotResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateBotBody"}},"get":{"operationId":"getBot","description":"Get bot details","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getBotResponse"},"default":{"$ref":"#/components/responses/getBotResponse"}}},"delete":{"operationId":"deleteBot","description":"Delete bot","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteBotResponse"},"default":{"$ref":"#/components/responses/deleteBotResponse"}}}},"/v1/admin/bots/{id}/transfer":{"post":{"operationId":"transferBot","description":"Transfer bot to another workspace. You need to be a Manager member of the workspace the bot currently belongs to and have permission to create bots in the target workspace.","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/transferBotResponse"},"default":{"$ref":"#/components/responses/transferBotResponse"}},"requestBody":{"$ref":"#/components/requestBodies/transferBotBody"}}},"/v1/admin/bots/{id}/logs":{"get":{"operationId":"getBotLogs","description":"Get bot logs","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}},{"name":"timeStart","in":"query","description":"Beginning of the time range to get logs from","required":true,"schema":{"type":"string"}},{"name":"timeEnd","in":"query","description":"End of the time range to get logs from","required":true,"schema":{"type":"string"}},{"name":"nextToken","in":"query","description":"Token to get the next page of logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getBotLogsResponse"},"default":{"$ref":"#/components/responses/getBotLogsResponse"}}}},"/v1/admin/bots/{id}/webchat":{"get":{"operationId":"getBotWebchat","description":"Get the webchat code/URL for a bot","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}},{"name":"type","in":"query","description":"type of script to get","required":true,"schema":{"type":"string","enum":["preconfigured","configurable","fullscreen","sharableUrl"]}}],"responses":{"200":{"$ref":"#/components/responses/getBotWebchatResponse"},"default":{"$ref":"#/components/responses/getBotWebchatResponse"}}}},"/v1/admin/bots/{id}/analytics":{"get":{"operationId":"getBotAnalytics","description":"Get bot analytics","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}},{"name":"startDate","in":"query","description":"Start date/time (inclusive)","required":true,"schema":{"type":"string"}},{"name":"endDate","in":"query","description":"End date/time (exclusive)","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getBotAnalyticsResponse"},"default":{"$ref":"#/components/responses/getBotAnalyticsResponse"}}}},"/v1/admin/bots/{id}/issues/{issueId}":{"get":{"operationId":"getBotIssue","description":"Get Bot Issue","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}},{"name":"issueId","in":"path","description":"Issue ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getBotIssueResponse"},"default":{"$ref":"#/components/responses/getBotIssueResponse"}}},"delete":{"operationId":"deleteBotIssue","description":"Delete Bot Issue","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}},{"name":"issueId","in":"path","description":"Issue ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteBotIssueResponse"},"default":{"$ref":"#/components/responses/deleteBotIssueResponse"}}}},"/v1/admin/bots/{id}/issues":{"get":{"operationId":"listBotIssues","description":"List Bot Issues","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}},{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listBotIssuesResponse"},"default":{"$ref":"#/components/responses/listBotIssuesResponse"}}}},"/v1/admin/bots/{id}/issues/{issueId}/events":{"get":{"operationId":"listBotIssueEvents","description":"List Events for a Bot Issue","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}},{"name":"issueId","in":"path","description":"Issue ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listBotIssueEventsResponse"},"default":{"$ref":"#/components/responses/listBotIssueEventsResponse"}}}},"/v1/admin/bots/{id}/versions":{"get":{"operationId":"listBotVersions","description":"List Versions for a Bot","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listBotVersionsResponse"},"default":{"$ref":"#/components/responses/listBotVersionsResponse"}}},"post":{"operationId":"createBotVersion","description":"Create a new version for a bot","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/createBotVersionResponse"},"default":{"$ref":"#/components/responses/createBotVersionResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createBotVersionBody"}}},"/v1/admin/bots/{id}/versions/{versionId}":{"get":{"operationId":"getBotVersion","description":"Get a specific version of a bot","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}},{"name":"versionId","in":"path","description":"Version ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getBotVersionResponse"},"default":{"$ref":"#/components/responses/getBotVersionResponse"}}}},"/v1/admin/bots/{id}/versions/deploy":{"post":{"operationId":"deployBotVersion","description":"Deploys a version for a bot","parameters":[{"name":"id","in":"path","description":"Bot ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deployBotVersionResponse"},"default":{"$ref":"#/components/responses/deployBotVersionResponse"}},"requestBody":{"$ref":"#/components/requestBodies/deployBotVersionBody"}}},"/v1/admin/workspaces/{id}/billing/invoices":{"get":{"operationId":"listWorkspaceInvoices","description":"List invoices billed to workspace","parameters":[{"name":"id","in":"path","description":"Workspace ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listWorkspaceInvoicesResponse"},"default":{"$ref":"#/components/responses/listWorkspaceInvoicesResponse"}}}},"/v1/admin/workspaces/{id}/billing/upcoming-invoice":{"get":{"operationId":"getUpcomingInvoice","description":"Get upcoming invoice for workspace","parameters":[{"name":"id","in":"path","description":"Workspace ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getUpcomingInvoiceResponse"},"default":{"$ref":"#/components/responses/getUpcomingInvoiceResponse"}}}},"/v1/admin/workspaces/{id}/billing/invoices/charge-unpaid":{"post":{"operationId":"chargeWorkspaceUnpaidInvoices","description":"Charge unpaid invoices of a workspace.","parameters":[{"name":"id","in":"path","description":"Workspace ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/chargeWorkspaceUnpaidInvoicesResponse"},"default":{"$ref":"#/components/responses/chargeWorkspaceUnpaidInvoicesResponse"}},"requestBody":{"$ref":"#/components/requestBodies/chargeWorkspaceUnpaidInvoicesBody"}}},"/v1/admin/workspaces":{"post":{"operationId":"createWorkspace","description":"Create workspace","parameters":[],"responses":{"200":{"$ref":"#/components/responses/createWorkspaceResponse"},"default":{"$ref":"#/components/responses/createWorkspaceResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createWorkspaceBody"}},"get":{"operationId":"listWorkspaces","description":"List workspaces the user has access to","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listWorkspacesResponse"},"default":{"$ref":"#/components/responses/listWorkspacesResponse"}}}},"/v1/admin/workspaces/{id}/public":{"get":{"operationId":"getPublicWorkspace","description":"Get workspace public details","parameters":[{"name":"id","in":"path","description":"Workspace ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getPublicWorkspaceResponse"},"default":{"$ref":"#/components/responses/getPublicWorkspaceResponse"}}}},"/v1/admin/workspaces/{id}":{"get":{"operationId":"getWorkspace","description":"Get workspace details","parameters":[{"name":"id","in":"path","description":"Workspace ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getWorkspaceResponse"},"default":{"$ref":"#/components/responses/getWorkspaceResponse"}}},"put":{"operationId":"updateWorkspace","description":"Update workspace","parameters":[{"name":"id","in":"path","description":"Workspace ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateWorkspaceResponse"},"default":{"$ref":"#/components/responses/updateWorkspaceResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateWorkspaceBody"}},"delete":{"operationId":"deleteWorkspace","description":"Delete workspace","parameters":[{"name":"id","in":"path","description":"Workspace ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteWorkspaceResponse"},"default":{"$ref":"#/components/responses/deleteWorkspaceResponse"}}}},"/v1/admin/workspaces/{id}/usages":{"get":{"operationId":"listWorkspaceUsages","description":"List workspace usages","parameters":[{"name":"id","in":"path","description":"Workspace ID","required":true,"schema":{"type":"string"}},{"name":"type","in":"query","description":"Usage type","required":true,"schema":{"type":"string","enum":["invocation_timeout","invocation_calls","storage_count","bot_count","knowledgebase_vector_storage","workspace_ratelimit","table_row_count","workspace_member_count","integrations_owned_count","ai_spend","openai_spend","bing_search_spend","always_alive"]}},{"name":"period","in":"query","description":"Period to get","required":false,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listWorkspaceUsagesResponse"},"default":{"$ref":"#/components/responses/listWorkspaceUsagesResponse"}}}},"/v1/admin/workspaces/{id}/usages/by-bot":{"get":{"operationId":"breakDownWorkspaceUsageByBot","description":"Break down workspace usage by bot","parameters":[{"name":"id","in":"path","description":"Workspace ID","required":true,"schema":{"type":"string"}},{"name":"type","in":"query","description":"Usage type","required":true,"schema":{"type":"string","enum":["invocation_timeout","invocation_calls","storage_count","bot_count","knowledgebase_vector_storage","workspace_ratelimit","table_row_count","workspace_member_count","integrations_owned_count","ai_spend","openai_spend","bing_search_spend","always_alive"]}},{"name":"period","in":"query","description":"Period to get","required":false,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/breakDownWorkspaceUsageByBotResponse"},"default":{"$ref":"#/components/responses/breakDownWorkspaceUsageByBotResponse"}}}},"/v1/admin/workspaces/usages/quota-completion":{"get":{"operationId":"getAllWorkspaceQuotaCompletion","description":"For a user, gets a map of workspace IDs to their highest quota completion rate","parameters":[],"responses":{"200":{"$ref":"#/components/responses/getAllWorkspaceQuotaCompletionResponse"},"default":{"$ref":"#/components/responses/getAllWorkspaceQuotaCompletionResponse"}}}},"/v1/admin/workspaces/{id}/quota":{"get":{"operationId":"getWorkspaceQuota","description":"Get workspace quota","parameters":[{"name":"id","in":"path","description":"Workspace ID","required":true,"schema":{"type":"string"}},{"name":"type","in":"query","description":"Usage type","required":true,"schema":{"type":"string","enum":["invocation_timeout","invocation_calls","storage_count","bot_count","knowledgebase_vector_storage","workspace_ratelimit","table_row_count","workspace_member_count","integrations_owned_count","ai_spend","openai_spend","bing_search_spend","always_alive"]}},{"name":"period","in":"query","description":"Period to get","required":false,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getWorkspaceQuotaResponse"},"default":{"$ref":"#/components/responses/getWorkspaceQuotaResponse"}}}},"/v1/admin/workspaces/{id}/quotas":{"get":{"operationId":"listWorkspaceQuotas","description":"List workspace quotas","parameters":[{"name":"id","in":"path","description":"Workspace ID","required":true,"schema":{"type":"string"}},{"name":"period","in":"query","description":"Period to get","required":false,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listWorkspaceQuotasResponse"},"default":{"$ref":"#/components/responses/listWorkspaceQuotasResponse"}}}},"/v1/admin/workspaces/handle-availability":{"put":{"operationId":"checkHandleAvailability","description":"Check if a workspace handle is available","parameters":[],"responses":{"200":{"$ref":"#/components/responses/checkHandleAvailabilityResponse"},"default":{"$ref":"#/components/responses/checkHandleAvailabilityResponse"}},"requestBody":{"$ref":"#/components/requestBodies/checkHandleAvailabilityBody"}}},"/v1/admin/workspaces/public":{"get":{"operationId":"listPublicWorkspaces","description":"List public workspaces","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"workspaceIds","in":"query","description":"Ids of the workspaces to list","required":false,"schema":{"type":"array","items":{"type":"string"}}},{"name":"search","in":"query","description":"Search query","required":false,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listPublicWorkspacesResponse"},"default":{"$ref":"#/components/responses/listPublicWorkspacesResponse"}}}},"/v1/admin/workspaces/{id}/audit-records":{"get":{"operationId":"getAuditRecords","description":"Get the audit records of a workspace, sorted from most recent to oldest.","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"id","in":"path","description":"Workspace ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getAuditRecordsResponse"},"default":{"$ref":"#/components/responses/getAuditRecordsResponse"}}}},"/v1/admin/workspace-members":{"get":{"operationId":"listWorkspaceMembers","description":"Lists all the members in a workspace","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listWorkspaceMembersResponse"},"default":{"$ref":"#/components/responses/listWorkspaceMembersResponse"}}},"post":{"operationId":"createWorkspaceMember","description":"Add a member to the workspace","parameters":[],"responses":{"200":{"$ref":"#/components/responses/createWorkspaceMemberResponse"},"default":{"$ref":"#/components/responses/createWorkspaceMemberResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createWorkspaceMemberBody"}}},"/v1/admin/workspace-members/me":{"get":{"operationId":"getWorkspaceMember","description":"Get details of the account authenticating with this endpoint.","parameters":[],"responses":{"200":{"$ref":"#/components/responses/getWorkspaceMemberResponse"},"default":{"$ref":"#/components/responses/getWorkspaceMemberResponse"}}}},"/v1/admin/workspace-members/{id}":{"delete":{"operationId":"deleteWorkspaceMember","description":"Remove a member of a workspace","parameters":[{"name":"id","in":"path","description":"Workspace member ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteWorkspaceMemberResponse"},"default":{"$ref":"#/components/responses/deleteWorkspaceMemberResponse"}}},"put":{"operationId":"updateWorkspaceMember","description":"Update the member of a workspace","parameters":[{"name":"id","in":"path","description":"Workspace member ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateWorkspaceMemberResponse"},"default":{"$ref":"#/components/responses/updateWorkspaceMemberResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateWorkspaceMemberBody"}}},"/v1/admin/integrations/iaks":{"get":{"operationId":"listIntegrationApiKeys","description":"List IAKs (Integration Api Keys) of an integration","parameters":[{"name":"integrationId","in":"query","description":"ID of the integration","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listIntegrationApiKeysResponse"},"default":{"$ref":"#/components/responses/listIntegrationApiKeysResponse"}}},"post":{"operationId":"createIntegrationApiKey","description":"Create an IAK","parameters":[],"responses":{"200":{"$ref":"#/components/responses/createIntegrationApiKeyResponse"},"default":{"$ref":"#/components/responses/createIntegrationApiKeyResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createIntegrationApiKeyBody"}}},"/v1/admin/integrations/iaks/{id}":{"delete":{"operationId":"deleteIntegrationApiKey","description":"Delete an IAK","parameters":[{"name":"id","in":"path","description":"ID of Integration Api Key","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteIntegrationApiKeyResponse"},"default":{"$ref":"#/components/responses/deleteIntegrationApiKeyResponse"}}}},"/v1/admin/integrations":{"post":{"operationId":"createIntegration","description":"Create integration","parameters":[],"responses":{"200":{"$ref":"#/components/responses/createIntegrationResponse"},"default":{"$ref":"#/components/responses/createIntegrationResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createIntegrationBody"}},"get":{"operationId":"listIntegrations","description":"List integrations","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"name","in":"query","description":"Integration Name","schema":{"type":"string"}},{"name":"version","in":"query","description":"Integration version. Either a semver version or tag \"latest\"","schema":{"type":"string"}},{"name":"dev","in":"query","description":"If true, only dev integrations are returned. Otherwise, only production integrations are returned.","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"$ref":"#/components/responses/listIntegrationsResponse"},"default":{"$ref":"#/components/responses/listIntegrationsResponse"}}}},"/v1/admin/integrations/{id}":{"put":{"operationId":"updateIntegration","description":"Update integration","parameters":[{"name":"id","in":"path","description":"Integration ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateIntegrationResponse"},"default":{"$ref":"#/components/responses/updateIntegrationResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateIntegrationBody"}},"get":{"operationId":"getIntegration","description":"Get integration","parameters":[{"name":"id","in":"path","description":"Integration ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getIntegrationResponse"},"default":{"$ref":"#/components/responses/getIntegrationResponse"}}},"delete":{"operationId":"deleteIntegration","description":"Delete integration","parameters":[{"name":"id","in":"path","description":"Integration ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteIntegrationResponse"},"default":{"$ref":"#/components/responses/deleteIntegrationResponse"}}}},"/v1/admin/integrations/{id}/logs":{"get":{"operationId":"getIntegrationLogs","description":"Get integration logs","parameters":[{"name":"id","in":"path","description":"Integration ID","required":true,"schema":{"type":"string"}},{"name":"timeStart","in":"query","description":"Beginning of the time range to get logs from","required":true,"schema":{"type":"string"}},{"name":"timeEnd","in":"query","description":"End of the time range to get logs from","required":true,"schema":{"type":"string"}},{"name":"nextToken","in":"query","description":"Token to get the next page of logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getIntegrationLogsResponse"},"default":{"$ref":"#/components/responses/getIntegrationLogsResponse"}}}},"/v1/admin/integrations/{name}/{version}":{"get":{"operationId":"getIntegrationByName","description":"Get integration","parameters":[{"name":"name","in":"path","description":"Integration Name","required":true,"schema":{"type":"string"}},{"name":"version","in":"path","description":"Integration version. Either a semver version or tag \"latest\"","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getIntegrationByNameResponse"},"default":{"$ref":"#/components/responses/getIntegrationByNameResponse"}}}},"/v1/admin/integrations/request-verification":{"post":{"operationId":"requestIntegrationVerification","description":"Request Integration Verification","parameters":[],"responses":{"200":{"$ref":"#/components/responses/requestIntegrationVerificationResponse"},"default":{"$ref":"#/components/responses/requestIntegrationVerificationResponse"}},"requestBody":{"$ref":"#/components/requestBodies/requestIntegrationVerificationBody"}}},"/v1/admin/interfaces":{"post":{"operationId":"createInterface","description":"Create Interface","parameters":[],"responses":{"200":{"$ref":"#/components/responses/createInterfaceResponse"},"default":{"$ref":"#/components/responses/createInterfaceResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createInterfaceBody"}},"get":{"operationId":"listInterfaces","description":"List Interfaces","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listInterfacesResponse"},"default":{"$ref":"#/components/responses/listInterfacesResponse"}}}},"/v1/admin/interfaces/{id}":{"get":{"operationId":"getInterface","description":"Get Interface","parameters":[{"name":"id","in":"path","description":"Interface id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getInterfaceResponse"},"default":{"$ref":"#/components/responses/getInterfaceResponse"}}},"put":{"operationId":"updateInterface","description":"Update Interface","parameters":[{"name":"id","in":"path","description":"Interface id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateInterfaceResponse"},"default":{"$ref":"#/components/responses/updateInterfaceResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateInterfaceBody"}},"delete":{"operationId":"deleteInterface","description":"Delete Interface","parameters":[{"name":"id","in":"path","description":"Interface id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteInterfaceResponse"},"default":{"$ref":"#/components/responses/deleteInterfaceResponse"}}}},"/v1/admin/interfaces/{name}/{version}":{"get":{"operationId":"getInterfaceByName","description":"Get Interface by name and version","parameters":[{"name":"name","in":"path","description":"Interface name","required":true,"schema":{"type":"string"}},{"name":"version","in":"path","description":"Interface version","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getInterfaceByNameResponse"},"default":{"$ref":"#/components/responses/getInterfaceByNameResponse"}}}},"/v1/admin/usages/{id}":{"get":{"operationId":"getUsage","description":"Get usage","parameters":[{"name":"type","in":"query","description":"Usage type","required":true,"schema":{"type":"string","enum":["invocation_timeout","invocation_calls","storage_count","bot_count","knowledgebase_vector_storage","workspace_ratelimit","table_row_count","workspace_member_count","integrations_owned_count","ai_spend","openai_spend","bing_search_spend","always_alive"]}},{"name":"period","in":"query","description":"Period to get","required":false,"schema":{"type":"string"}},{"name":"id","in":"path","description":"ID of a bot or a workspace, depending on the \"type\" parameter","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getUsageResponse"},"default":{"$ref":"#/components/responses/getUsageResponse"}}}},"/v1/admin/usages/multiple":{"get":{"operationId":"getMultipleUsages","description":"Get multiple usages","parameters":[{"name":"types","in":"query","description":"Usage types to retrieve. All types have to belong to the same type of entity (e.g. workspace or bot).","required":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"ids","in":"query","description":"IDs of either workspaces or bots to retrieve usages for.","required":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"period","in":"query","description":"Period to get","required":false,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getMultipleUsagesResponse"},"default":{"$ref":"#/components/responses/getMultipleUsagesResponse"}}}},"/v1/admin/usages/{id}/history":{"get":{"operationId":"listUsageHistory","description":"Get usage history","parameters":[{"name":"type","in":"query","description":"Usage type","required":true,"schema":{"type":"string","enum":["invocation_timeout","invocation_calls","storage_count","bot_count","knowledgebase_vector_storage","workspace_ratelimit","table_row_count","workspace_member_count","integrations_owned_count","ai_spend","openai_spend","bing_search_spend","always_alive"]}},{"name":"id","in":"path","description":"ID of a bot or a workspace, depending on the \"type\" parameter","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listUsageHistoryResponse"},"default":{"$ref":"#/components/responses/listUsageHistoryResponse"}}}},"/v1/admin/usages/{id}/activity":{"get":{"operationId":"listUsageActivity","description":"List the usage activity for a given usage type and ID. The most recent activity is listed first.","parameters":[{"name":"type","in":"query","description":"Usage type","required":true,"schema":{"type":"string","enum":["invocation_timeout","invocation_calls","storage_count","bot_count","knowledgebase_vector_storage","workspace_ratelimit","table_row_count","workspace_member_count","integrations_owned_count","ai_spend","openai_spend","bing_search_spend","always_alive"]}},{"name":"id","in":"path","description":"ID of a bot or a workspace, depending on the \"type\" parameter","required":true,"schema":{"type":"string"}},{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listUsageActivityResponse"},"default":{"$ref":"#/components/responses/listUsageActivityResponse"}}}},"/v1/admin/quotas/ai-spend":{"put":{"operationId":"changeAISpendQuota","description":"Change AI Spend quota","parameters":[],"responses":{"200":{"$ref":"#/components/responses/changeAISpendQuotaResponse"},"default":{"$ref":"#/components/responses/changeAISpendQuotaResponse"}},"requestBody":{"$ref":"#/components/requestBodies/changeAISpendQuotaBody"}}},"/v1/admin/activities":{"get":{"operationId":"listActivities","description":"List activities of a task","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"taskId","in":"query","description":"ID of the task to list activities for","required":true,"schema":{"type":"string"}},{"name":"botId","in":"query","description":"ID of the bot to list activities for","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listActivitiesResponse"},"default":{"$ref":"#/components/responses/listActivitiesResponse"}}}},"/v1/admin/introspect":{"post":{"operationId":"introspect","description":"Introspect the API","parameters":[],"responses":{"200":{"$ref":"#/components/responses/introspectResponse"},"default":{"$ref":"#/components/responses/introspectResponse"}},"requestBody":{"$ref":"#/components/requestBodies/introspectBody"}}},"/v1/files":{"put":{"operationId":"upsertFile","description":"Creates or updates a file using the `key` parameter as unique identifier. Updating a file will erase the existing content of the file. Upload the file content by sending it in a PUT request to the `uploadUrl` returned in the response.","parameters":[],"responses":{"200":{"$ref":"#/components/responses/upsertFileResponse"},"default":{"$ref":"#/components/responses/upsertFileResponse"}},"requestBody":{"$ref":"#/components/requestBodies/upsertFileBody"}},"get":{"operationId":"listFiles","description":"List files for bot","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"tags","in":"query","description":"Filter files by tags. Tags should be passed as a URL-encoded JSON object of key-value pairs that must be present in the tags of a file. An array of multiple string values for the same key are treated as an OR condition. To exclude a value, express it as an object with a nested `not` key with the string or string-array value(s) to exclude.","schema":{}},{"name":"ids","in":"query","description":"Filter files by IDs.","schema":{"type":"array","items":{"type":"string"},"maxItems":50}}],"responses":{"200":{"$ref":"#/components/responses/listFilesResponse"},"default":{"$ref":"#/components/responses/listFilesResponse"}}}},"/v1/files/{id}":{"delete":{"operationId":"deleteFile","description":"Deletes a file.","parameters":[{"name":"id","in":"path","description":"File ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteFileResponse"},"default":{"$ref":"#/components/responses/deleteFileResponse"}}},"get":{"operationId":"getFile","description":"Get file","parameters":[{"name":"id","in":"path","description":"File ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getFileResponse"},"default":{"$ref":"#/components/responses/getFileResponse"}}},"put":{"operationId":"updateFileMetadata","description":"Update file metadata, without updating the file content.","parameters":[{"name":"id","in":"path","description":"File ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateFileMetadataResponse"},"default":{"$ref":"#/components/responses/updateFileMetadataResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateFileMetadataBody"}}},"/v1/files/search":{"get":{"operationId":"searchFiles","description":"Search files","parameters":[{"name":"tags","in":"query","description":"Filter files by tags. Tags should be passed as a URL-encoded JSON object of key-value pairs that must be present in the tags of a file. An array of multiple string values for the same key are treated as an OR condition. To exclude a value, express it as an object with a nested `not` key with the string or string-array value(s) to exclude.","schema":{}},{"name":"query","in":"query","description":"Query expressed in natural language to retrieve matching text passages within all indexed files in the bot using semantical search.","required":true,"schema":{"type":"string"}},{"name":"contextDepth","in":"query","description":"The number of neighbor passages to prepend and append as surrounding context to the content of each returned passage (default: 1, minimum: 0, maximum: 10).","schema":{"type":"integer"}},{"name":"limit","in":"query","description":"The maximum number of passages to return.","schema":{"type":"integer"}},{"name":"consolidate","in":"query","description":"Consolidate the results by merging matching passages from the same file into a single passage per file. The consolidated passage will include the matching passages ordered by their original position in the file (rather than by relevance score) and include hierarchical context such as the title/subtitle to which they belong.","schema":{"type":"boolean"}},{"name":"includeBreadcrumb","in":"query","description":"Prepend a breadcrumb to each passage, containing the title and subtitle(s) the passage belongs to in the file. This option is ignored when the `consolidate` option is set to `true`.","schema":{"type":"boolean"}}],"responses":{"200":{"$ref":"#/components/responses/searchFilesResponse"},"default":{"$ref":"#/components/responses/searchFilesResponse"}}}},"/v1/files/{fileId}/passages":{"get":{"operationId":"listFilePassages","description":"List passages for a file","parameters":[{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","schema":{"type":"string"}},{"name":"limit","in":"query","description":"The maximum number of passages to return per request (optional, default: 20, max: 200).","schema":{"type":"number"}},{"name":"fileId","in":"path","description":"File ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/listFilePassagesResponse"},"default":{"$ref":"#/components/responses/listFilePassagesResponse"}}}},"/v1/tables":{"get":{"operationId":"listTables","description":"Retrieves a list of all tables associated with your bot.","parameters":[{"name":"tags","in":"query","description":"Optional filters to narrow down the list by tags associated with tables.","schema":{"type":"object","additionalProperties":{"type":"string"}}}],"responses":{"200":{"$ref":"#/components/responses/listTablesResponse"},"default":{"$ref":"#/components/responses/listTablesResponse"}}},"post":{"operationId":"createTable","description":"Initiates the creation of a new table based on the provided schema, excluding system-managed fields like IDs and timestamps.","parameters":[],"responses":{"200":{"$ref":"#/components/responses/createTableResponse"},"default":{"$ref":"#/components/responses/createTableResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createTableBody"}}},"/v1/tables/{table}":{"get":{"operationId":"getTable","description":"Retrieves detailed information about a specific table, identified by its name or unique identifier.","parameters":[{"name":"table","in":"path","description":"The table's name or unique identifier for targeting specific table operations.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getTableResponse"},"default":{"$ref":"#/components/responses/getTableResponse"}}},"post":{"operationId":"getOrCreateTable","description":"Retrieves information about a specific table if it exists; otherwise, creates a new table based on the provided schema.","parameters":[{"name":"table","in":"path","description":"The table's name or unique identifier for targeting specific table operations.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/getOrCreateTableResponse"},"default":{"$ref":"#/components/responses/getOrCreateTableResponse"}},"requestBody":{"$ref":"#/components/requestBodies/getOrCreateTableBody"}},"put":{"operationId":"updateTable","description":"Updates the schema or the name of an existing table.","parameters":[{"name":"table","in":"path","description":"The table's name or unique identifier for targeting specific table operations.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateTableResponse"},"default":{"$ref":"#/components/responses/updateTableResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateTableBody"}},"delete":{"operationId":"deleteTable","description":"Permanently deletes a table and all its associated data from the system. Use with caution, as this action cannot be undone.","parameters":[{"name":"table","in":"path","description":"The table's name or unique identifier for targeting specific table operations.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteTableResponse"},"default":{"$ref":"#/components/responses/deleteTableResponse"}}}},"/v1/tables/{sourceTableId}/duplicate":{"post":{"operationId":"duplicateTable","description":"Duplicates the table schema & content","parameters":[{"name":"sourceTableId","in":"path","description":"The table's unique identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/duplicateTableResponse"},"default":{"$ref":"#/components/responses/duplicateTableResponse"}},"requestBody":{"$ref":"#/components/requestBodies/duplicateTableBody"}}},"/v1/tables/{table}/column":{"put":{"operationId":"renameTableColumn","description":"Renames an existing column within a table to better reflect its content or usage. The operation targets a specific table and requires the current and new column names.","parameters":[{"name":"table","in":"path","description":"The table's name or unique identifier for targeting specific table operations.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/renameTableColumnResponse"},"default":{"$ref":"#/components/responses/renameTableColumnResponse"}},"requestBody":{"$ref":"#/components/requestBodies/renameTableColumnBody"}}},"/v1/tables/{table}/row":{"get":{"operationId":"getTableRow","description":"Fetches a specific row from a table using the row's unique identifier.","parameters":[{"name":"table","in":"path","description":"The table's name or unique identifier for targeting specific table operations.","required":true,"schema":{"type":"string"}},{"name":"id","in":"query","description":"Identifier of the row within the table.","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/getTableRowResponse"},"default":{"$ref":"#/components/responses/getTableRowResponse"}}}},"/v1/tables/{table}/rows/find":{"post":{"operationId":"findTableRows","description":"Enables the search and filtering of rows within a table based on specific criteria. This operation supports complex queries for advanced data manipulation and retrieval.","parameters":[{"name":"table","in":"path","description":"The table's name or unique identifier for targeting specific table operations.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/findTableRowsResponse"},"default":{"$ref":"#/components/responses/findTableRowsResponse"}},"requestBody":{"$ref":"#/components/requestBodies/findTableRowsBody"}}},"/v1/tables/{table}/rows":{"post":{"operationId":"createTableRows","description":"Inserts one or multiple new rows into the specified table.","parameters":[{"name":"table","in":"path","description":"The table's name or unique identifier for targeting specific table operations.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/createTableRowsResponse"},"default":{"$ref":"#/components/responses/createTableRowsResponse"}},"requestBody":{"$ref":"#/components/requestBodies/createTableRowsBody"}},"put":{"operationId":"updateTableRows","description":"Updates specified rows in a table, allowing partial success with detailed feedback on errors.","parameters":[{"name":"table","in":"path","description":"The table's name or unique identifier for targeting specific table operations.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/updateTableRowsResponse"},"default":{"$ref":"#/components/responses/updateTableRowsResponse"}},"requestBody":{"$ref":"#/components/requestBodies/updateTableRowsBody"}}},"/v1/tables/{table}/rows/delete":{"post":{"operationId":"deleteTableRows","description":"Allows selective deletion of rows or complete clearance of a table.","parameters":[{"name":"table","in":"path","description":"The table's name or unique identifier for targeting specific table operations.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/deleteTableRowsResponse"},"default":{"$ref":"#/components/responses/deleteTableRowsResponse"}},"requestBody":{"$ref":"#/components/requestBodies/deleteTableRowsBody"}}},"/v1/tables/{table}/rows/upsert":{"post":{"operationId":"upsertTableRows","description":"Inserts or updates rows based on a key. If a row exists, it is updated; otherwise, a new row is created.","parameters":[{"name":"table","in":"path","description":"The table's name or unique identifier for targeting specific table operations.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/upsertTableRowsResponse"},"default":{"$ref":"#/components/responses/upsertTableRowsResponse"}},"requestBody":{"$ref":"#/components/requestBodies/upsertTableRowsBody"}}}},"components":{"schemas":{"Bot":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"Id of the [Bot](#schema_bot)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Bot](#schema_bot) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Bot](#schema_bot) in ISO 8601 format"},"signingSecret":{"type":"string","maxLength":2000,"description":"Signing secret of the [Bot](#schema_bot)"},"integrations":{"type":"object","additionalProperties":{"type":"object","properties":{"enabled":{"type":"boolean"},"name":{"type":"string","maxLength":200,"description":"Name of the [Integration](#schema_integration)"},"version":{"type":"string","maxLength":200,"description":"Version of the [Integration](#schema_integration)"},"webhookUrl":{"type":"string","maxLength":2000},"webhookId":{"type":"string","maxLength":200},"identifier":{"type":"string","maxLength":2000},"configurationType":{"type":"string","maxLength":200,"nullable":true},"configuration":{"type":"object","additionalProperties":true},"status":{"type":"string","enum":["registration_pending","registered","registration_failed","unregistration_pending","unregistered","unregistration_failed"]},"statusReason":{"type":"string","maxLength":2000,"nullable":true},"id":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [Integration](#schema_integration)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Integration](#schema_integration) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Integration](#schema_integration) in ISO 8601 format"},"title":{"type":"string","minLength":1,"maxLength":64,"description":"Title of the integration. This is the name that will be displayed in the UI"},"description":{"type":"string","maxLength":256,"description":"Description of the integration. This is the description that will be displayed in the UI"},"iconUrl":{"type":"string","description":"URL of the icon of the integration. This is the icon that will be displayed in the UI"},"public":{"type":"boolean","description":"Idicates if the integration is public. Public integrations are available to all and cannot be updated without creating a new version."},"verificationStatus":{"type":"string","enum":["unapproved","pending","approved","rejected"],"description":"Status of the integration version verification"}},"required":["enabled","name","version","webhookUrl","webhookId","configurationType","configuration","status","statusReason","id","createdAt","updatedAt","title","description","iconUrl","public","verificationStatus"],"additionalProperties":false},"description":"A mapping of integrations to their configuration"},"user":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"required":["tags"],"description":"User object configuration","additionalProperties":false},"conversation":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"required":["tags"],"description":"Conversation object configuration","additionalProperties":false},"message":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"required":["tags"],"description":"Message object configuration","additionalProperties":false},"states":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["conversation","user","bot","task"],"description":"Type of the [State](#schema_state) (`conversation`, `user`, `bot` or `task`)"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the [State](#schema_state) in the `JSON schema` format. This `JSON schema` is going to be used for validating the state data."},"expiry":{"type":"number","minimum":1,"description":"Expiry of the [State](#schema_state) in milliseconds. The state will expire if it is idle for the configured value. By default, a state doesn't expire."}},"required":["type","schema"],"additionalProperties":false},"description":"A mapping of states to their definition"},"configuration":{"type":"object","properties":{"data":{"type":"object","additionalProperties":true,"description":"Configuration data"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."}},"required":["data","schema"],"description":"Configuration of the bot","additionalProperties":false},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the event"},"description":{"type":"string","maxLength":256,"description":"Description of the event"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Event Definition","additionalProperties":false},"description":"Events definition"},"recurringEvents":{"type":"object","additionalProperties":{"type":"object","properties":{"schedule":{"type":"object","properties":{"cron":{"type":"string","maxLength":200}},"required":["cron"],"additionalProperties":false},"type":{"type":"string","maxLength":200},"payload":{"type":"object","additionalProperties":true},"failedAttempts":{"type":"number","description":"The number of times the recurring event failed to run. This counter resets once the recurring event runs successfully."},"lastFailureReason":{"type":"string","maxLength":2000,"description":"The reason why the recurring event failed to run in the last attempt.","nullable":true}},"required":["schedule","type","payload","failedAttempts","lastFailureReason"],"additionalProperties":false},"description":"Recurring events"},"subscriptions":{"type":"object","properties":{"events":{"type":"object","additionalProperties":{"type":"object","additionalProperties":false},"nullable":true,"description":"Events that the bot is currently subscribed on (ex: \"slack:reactionAdded\"). If null, the bot is subscribed to all events."}},"required":["events"],"description":"Subscriptions of the bot","additionalProperties":false},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the action"},"description":{"type":"string","maxLength":256,"description":"Description of the action"},"billable":{"type":"boolean"},"cacheable":{"type":"boolean"},"input":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false},"output":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false}},"required":["input","output"],"description":"Action definition","additionalProperties":false},"description":"Actions definition"},"name":{"type":"string","description":"Name of the [Bot](#schema_bot)"},"deployedAt":{"type":"string","format":"date-time","description":"Last deployment date of the [Bot](#schema_bot) in the ISO 8601 format"},"dev":{"type":"boolean","description":"Indicates if the [Bot](#schema_bot) is a development bot; Development bots run locally and can install dev integrations"},"createdBy":{"type":"string","description":"Id of the user that created the bot"},"alwaysAlive":{"type":"boolean","description":"Indicates if the [Bot](#schema_bot) should be in always alive mode"},"status":{"type":"string","enum":["active","deploying"],"description":"Status of the bot"},"medias":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string","description":"URL of the media file"},"name":{"type":"string","description":"Name of the media file"}},"required":["url","name"]},"description":"Media files associated with the [Bot](#schema_bot)"}},"required":["id","createdAt","updatedAt","signingSecret","integrations","user","conversation","message","states","configuration","events","recurringEvents","subscriptions","actions","name","dev","alwaysAlive","status","medias"],"additionalProperties":false},"Integration":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [Integration](#schema_integration)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Integration](#schema_integration) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Integration](#schema_integration) in ISO 8601 format"},"identifier":{"type":"object","properties":{"fallbackHandlerScript":{"type":"string","maxLength":2000,"description":"VRL Script of the [Integration](#schema_integration) to handle incoming requests for a request that doesn't have an identifier"},"extractScript":{"type":"string","maxLength":2000,"description":"VRL Script of the [Integration](#schema_integration) to extract the identifier from an incoming webhook often use for OAuth"}},"description":"Global identifier configuration of the [Integration](#schema_integration)","additionalProperties":false},"url":{"type":"string","maxLength":2000,"description":"URL of the [Integration](#schema_integration)"},"name":{"type":"string","maxLength":200,"description":"Name of the [Integration](#schema_integration)"},"version":{"type":"string","maxLength":200,"description":"Version of the [Integration](#schema_integration)"},"interfaces":{"type":"object","additionalProperties":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the interface"},"name":{"type":"string","maxLength":200,"description":"Name of the interface"},"entities":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}},"channels":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}}},"required":["id","name","entities","actions","events","channels"],"additionalProperties":false}},"configuration":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the configuration"},"description":{"type":"string","maxLength":256,"description":"Description of the configuration"},"identifier":{"type":"object","properties":{"linkTemplateScript":{"type":"string","maxLength":2000},"required":{"type":"boolean"}},"required":["required"],"description":"Identifier configuration of the [Integration](#schema_integration)","additionalProperties":false},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."}},"required":["identifier","schema"],"description":"Configuration definition","additionalProperties":false},"configurations":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the configuration"},"description":{"type":"string","maxLength":256,"description":"Description of the configuration"},"identifier":{"type":"object","properties":{"linkTemplateScript":{"type":"string","maxLength":2000},"required":{"type":"boolean"}},"required":["required"],"description":"Identifier configuration of the [Integration](#schema_integration)","additionalProperties":false},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."}},"required":["identifier","schema"],"description":"Configuration definition","additionalProperties":false}},"channels":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the channel"},"description":{"type":"string","maxLength":256,"description":"Description of the channel"},"messages":{"type":"object","additionalProperties":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Message definition","additionalProperties":false}},"conversation":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}},"creation":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Enable conversation creation"},"requiredTags":{"type":"array","items":{"type":"string"},"description":"The list of tags that are required to be specified when calling the API directly to create a conversation."}},"required":["enabled","requiredTags"],"description":"The conversation creation setting determines how to create a conversation through the API directly. The integration will have to implement the `createConversation` functionality to support this setting.","additionalProperties":false}},"required":["tags","creation"],"description":"Conversation object configuration","additionalProperties":false},"message":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"required":["tags"],"description":"Message object configuration","additionalProperties":false}},"required":["messages","conversation","message"],"description":"Channel definition","additionalProperties":false}},"states":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["conversation","user","integration"],"description":"Type of the [State](#schema_state) (`conversation`, `user` or `integration`)"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the [State](#schema_state) in the `JSON schema` format. This `JSON schema` is going to be used for validating the state data."}},"required":["type","schema"],"description":"State definition","additionalProperties":false}},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the event"},"description":{"type":"string","maxLength":256,"description":"Description of the event"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Event Definition","additionalProperties":false}},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the action"},"description":{"type":"string","maxLength":256,"description":"Description of the action"},"billable":{"type":"boolean"},"cacheable":{"type":"boolean"},"input":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false},"output":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false}},"required":["input","output"],"description":"Action definition","additionalProperties":false}},"user":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}},"creation":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Enable user creation"},"requiredTags":{"type":"array","items":{"type":"string"},"description":"The list of tags that are required to be specified when calling the API directly to create a user."}},"required":["enabled","requiredTags"],"description":"The user creation setting determines how to create a user through the API directly. The integration will have to implement the `createUser` functionality to support this setting.","additionalProperties":false}},"required":["tags","creation"],"description":"User object configuration","additionalProperties":false},"entities":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the entity"},"description":{"type":"string","maxLength":256,"description":"Description of the entity"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Entity definition","additionalProperties":false}},"dev":{"type":"boolean","description":"Indicates if the integration is a development integration; Dev integrations run locally"},"title":{"type":"string","minLength":1,"maxLength":64,"description":"Title of the integration. This is the name that will be displayed in the UI"},"description":{"type":"string","maxLength":256,"description":"Description of the integration. This is the description that will be displayed in the UI"},"iconUrl":{"type":"string","description":"URL of the icon of the integration. This is the icon that will be displayed in the UI"},"readmeUrl":{"type":"string","description":"URL of the readme of the integration. This is the readme that will be displayed in the UI"},"public":{"type":"boolean","description":"Idicates if the integration is public. Public integrations are available to all and cannot be updated without creating a new version."},"verificationStatus":{"type":"string","enum":["unapproved","pending","approved","rejected"],"description":"Status of the integration version verification"},"secrets":{"type":"array","items":{"type":"string"},"description":"Secrets are integration-wide values available in the code via environment variables formatted with a SECRET_ prefix followed by your secret name. A secret name must respect SCREAMING_SNAKE casing."}},"required":["id","createdAt","updatedAt","identifier","url","name","version","interfaces","configuration","configurations","channels","states","events","actions","user","entities","dev","title","description","iconUrl","readmeUrl","public","verificationStatus","secrets"],"additionalProperties":false},"Interface":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [Interface](#schema_interface)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Interface](#schema_interface) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Interface](#schema_interface) in ISO 8601 format"},"name":{"type":"string","maxLength":200,"description":"Name of the [Interface](#schema_interface)"},"version":{"type":"string","maxLength":200,"description":"Version of the [Interface](#schema_interface)"},"entities":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the entity"},"description":{"type":"string","maxLength":256,"description":"Description of the entity"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Entity definition","additionalProperties":false}},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the event"},"description":{"type":"string","maxLength":256,"description":"Description of the event"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Event Definition","additionalProperties":false}},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the action"},"description":{"type":"string","maxLength":256,"description":"Description of the action"},"billable":{"type":"boolean"},"cacheable":{"type":"boolean"},"input":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false},"output":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false}},"required":["input","output"],"description":"Action definition","additionalProperties":false}},"channels":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the channel"},"description":{"type":"string","maxLength":256,"description":"Description of the channel"},"messages":{"type":"object","additionalProperties":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Message definition","additionalProperties":false}}},"required":["messages"],"additionalProperties":false}},"nameTemplate":{"type":"object","properties":{"script":{"type":"string","maxLength":2000},"language":{"type":"string","maxLength":200}},"required":["script","language"],"description":"Template string optionaly used at build time by integrations implementing this interface to pick a name for actions and events.","additionalProperties":false}},"required":["id","createdAt","updatedAt","name","version","entities","events","actions","channels"],"additionalProperties":false},"Workspace":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"ownerId":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"},"botCount":{"type":"number"},"billingVersion":{"type":"string","enum":["v1","v2"]},"plan":{"type":"string","enum":["community","team","enterprise"]},"blocked":{"type":"boolean"},"spendingLimit":{"type":"number"},"about":{"default":"","type":"string"},"profilePicture":{"default":"","type":"string"},"contactEmail":{"default":"","type":"string"},"website":{"default":"","type":"string"},"socialAccounts":{"default":[],"type":"array","items":{"type":"string"}},"isPublic":{"type":"boolean"},"handle":{"default":"","type":"string"}},"required":["id","name","ownerId","createdAt","updatedAt","botCount","billingVersion","plan","blocked","spendingLimit"],"additionalProperties":false},"WorkspaceMember":{"type":"object","properties":{"id":{"type":"string"},"userId":{"type":"string","format":"uuid"},"email":{"type":"string"},"createdAt":{"type":"string"},"role":{"type":"string","enum":["viewer","billing","developer","manager","administrator","owner"]},"profilePicture":{"type":"string"},"displayName":{"type":"string","maxLength":100}},"required":["id","email","createdAt","role"],"additionalProperties":false},"Account":{"type":"object","properties":{"id":{"type":"string"},"email":{"type":"string"},"displayName":{"type":"string","maxLength":100},"emailVerified":{"type":"boolean"},"profilePicture":{"type":"string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Account](#schema_account) in ISO 8601 format"}},"required":["id","email","emailVerified","createdAt"],"additionalProperties":false},"Usage":{"type":"object","properties":{"id":{"type":"string","description":"Id of the usage that it is linked to. It can either be a workspace id or a bot id"},"period":{"type":"string","description":"Period of the quota that it is applied to"},"value":{"type":"number","description":"Value of the current usage"},"quota":{"type":"number","description":"Quota of the current usage"},"type":{"type":"string","enum":["invocation_timeout","invocation_calls","storage_count","bot_count","knowledgebase_vector_storage","workspace_ratelimit","table_row_count","workspace_member_count","integrations_owned_count","ai_spend","openai_spend","bing_search_spend","always_alive"],"description":"Usage type that can be used"}},"required":["id","period","value","quota","type"],"additionalProperties":false},"Issue":{"type":"object","properties":{"id":{"type":"string"},"code":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"lastSeenAt":{"type":"string","format":"date-time"},"title":{"type":"string"},"description":{"type":"string"},"groupedData":{"type":"object","additionalProperties":{"type":"object","properties":{"raw":{"type":"string"},"pretty":{"type":"string"}},"required":["raw"],"additionalProperties":false}},"eventsCount":{"type":"number"},"category":{"type":"string","enum":["user_code","limits","configuration","other"]},"resolutionLink":{"type":"string","nullable":true}},"required":["id","code","createdAt","lastSeenAt","title","description","groupedData","eventsCount","category","resolutionLink"],"additionalProperties":false},"IssueEvent":{"type":"object","properties":{"id":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"data":{"type":"object","additionalProperties":{"type":"object","properties":{"raw":{"type":"string"},"pretty":{"type":"string"}},"required":["raw"],"additionalProperties":false}}},"required":["id","createdAt","data"],"additionalProperties":false},"Activity":{"type":"object","properties":{"id":{"type":"string"},"description":{"type":"string"},"taskId":{"type":"string"},"category":{"type":"string","enum":["unknown","capture","bot_message","user_message","agent_message","event","action","task_status","subtask_status","exception"]},"data":{"type":"object","additionalProperties":true},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the activity in ISO 8601 format"}},"required":["id","description","taskId","category","data","createdAt"],"additionalProperties":false},"Version":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"}},"required":["id","name"],"additionalProperties":false},"User":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"Id of the [User](#schema_user)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"},"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"Set of [Tags](/docs/developers/concepts/tags) that you can attach to a [User](#schema_user). The set of [Tags](/docs/developers/concepts/tags) available on a [User](#schema_user) is restricted by the list of [Tags](/docs/developers/concepts/tags) defined previously by the [Bot](#schema_bot). Individual keys can be unset by posting an empty value to them."},"name":{"type":"string","maxLength":200,"description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","maxLength":40000,"description":"Picture URL of the [User](#schema_user)"}},"required":["id","createdAt","updatedAt","tags"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false},"Conversation":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"Id of the [Conversation](#schema_conversation)"},"currentTaskId":{"type":"string","minLength":28,"maxLength":36,"description":"Id of the current [Task](#schema_task)"},"currentWorkflowId":{"type":"string","minLength":28,"maxLength":36,"description":"Id of the current [Workflow](#schema_workflow)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Conversation](#schema_conversation) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Conversation](#schema_conversation) in ISO 8601 format"},"channel":{"type":"string","description":"Name of the channel where the [Conversation](#schema_conversation) is happening"},"integration":{"type":"string","description":"Name of the integration that created the [Conversation](#schema_conversation)"},"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"Set of [Tags](/docs/developers/concepts/tags) that you can attach to a [Conversation](#schema_conversation). The set of [Tags](/docs/developers/concepts/tags) available on a [Conversation](#schema_conversation) is restricted by the list of [Tags](/docs/developers/concepts/tags) defined previously by the [Bot](#schema_bot). Individual keys can be unset by posting an empty value to them."}},"required":["id","createdAt","updatedAt","channel","integration","tags"],"description":"The [Conversation](#schema_conversation) object represents an exchange of messages between one or more users. A [Conversation](#schema_conversation) is always linked to an integration's channels. For example, a Slack channel represents a conversation.","additionalProperties":false},"Event":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"Id of the [Event](#schema_event)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Event](#schema_event) in ISO 8601 format"},"type":{"type":"string","maxLength":200,"description":"Type of the [Event](#schema_event)."},"payload":{"type":"object","additionalProperties":true,"description":"Payload is the content of the event defined by the integration installed on your bot or one of the default events created by our api."},"conversationId":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [Conversation](#schema_conversation) to link the event to."},"userId":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [User](#schema_user) to link the event to."},"messageId":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [Message](#schema_message) to link the event to."},"status":{"type":"string","enum":["pending","processed","ignored","failed","scheduled"]},"failureReason":{"type":"string","maxLength":2000,"nullable":true,"description":"Reason why the event failed to be processed"}},"required":["id","createdAt","type","payload","status","failureReason"],"description":"The event object represents an action or an occurrence.","additionalProperties":false},"Message":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"Id of the [Message](#schema_message)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Message](#schema_message) in ISO 8601 format"},"type":{"type":"string","maxLength":200,"description":"Type of the [Message](#schema_message) represents the resource type that the message is related to"},"payload":{"type":"object","additionalProperties":true,"description":"Payload is the content type of the message. Accepted payload options: Text, Image, Choice, Dropdown, Card, Carousel, File, Audio, Video, Location"},"direction":{"type":"string","enum":["incoming","outgoing"],"description":"Direction of the message (`incoming` or `outgoing`)."},"userId":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [User](#schema_user)"},"conversationId":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [Conversation](#schema_conversation)"},"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"Set of [Tags](/docs/developers/concepts/tags) that you can attach to a [Conversation](#schema_conversation). The set of [Tags](/docs/developers/concepts/tags) available on a [Conversation](#schema_conversation) is restricted by the list of [Tags](/docs/developers/concepts/tags) defined previously by the [Bot](#schema_bot). Individual keys can be unset by posting an empty value to them."}},"required":["id","createdAt","type","payload","direction","userId","conversationId","tags"],"description":"The Message object represents a message in a [Conversation](#schema_conversation) for a specific [User](#schema_user).","additionalProperties":false},"State":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"Id of the [State](#schema_state)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [State](#schema_state) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [State](#schema_state) in ISO 8601 format"},"botId":{"type":"string","minLength":28,"maxLength":36,"description":"Id of the [Bot](#schema_bot)"},"conversationId":{"type":"string","minLength":28,"maxLength":36,"description":"Id of the [Conversation](#schema_conversation)"},"userId":{"type":"string","minLength":28,"maxLength":36,"description":"Id of the [User](#schema_user)"},"name":{"type":"string","maxLength":200,"description":"Name of the [State](#schema_state) which is declared inside the bot definition"},"type":{"type":"string","enum":["conversation","user","bot","task","integration","workflow"],"description":"Type of the [State](#schema_state) represents the resource type (`conversation`, `user`, `bot`, `task`, `integration` or `workflow`) that the state is related to"},"payload":{"type":"object","additionalProperties":true,"description":"Payload is the content of the state defined by your bot."}},"required":["id","createdAt","updatedAt","botId","name","type","payload"],"description":"The state object represents the current payload. A state is always linked to either a bot, a conversation or a user.","additionalProperties":false},"Task":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"Id of the [Task](#schema_task)"},"title":{"type":"string","maxLength":64,"description":"Title describing the task"},"description":{"type":"string","maxLength":256,"description":"All the notes related to the execution of the current task"},"type":{"type":"string","description":"Type of the task"},"data":{"type":"object","additionalProperties":true,"description":"Content related to the task"},"status":{"type":"string","enum":["pending","in_progress","failed","completed","blocked","paused","timeout","cancelled"],"description":"Status of the task"},"parentTaskId":{"type":"string","minLength":28,"maxLength":36,"description":"Parent task id is the parent task that created this task"},"conversationId":{"type":"string","minLength":28,"maxLength":36,"description":"Conversation id related to this task"},"userId":{"type":"string","minLength":28,"maxLength":36,"description":"Specific user related to this task"},"timeoutAt":{"type":"string","format":"date-time","description":"The timeout date where the task should be failed in the ISO 8601 format"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the task in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the task in ISO 8601 format"},"failureReason":{"type":"string","maxLength":2000,"description":"If the task fails this is the reason behind it"},"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"Set of [Tags](/docs/developers/concepts/tags) that you can attach to a [Task](#schema_task). Individual keys can be unset by posting an empty value to them."}},"required":["id","title","description","type","data","status","timeoutAt","createdAt","updatedAt","tags"],"description":"Task definition","additionalProperties":false},"Workflow":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"Id of the [Workflow](#schema_workflow)"},"name":{"type":"string","maxLength":200,"description":"Name of the workflow"},"status":{"type":"string","enum":["pending","in_progress","failed","completed","listening","paused","timedout","cancelled"],"description":"Status of the [Workflow](#schema_workflow)"},"input":{"type":"object","additionalProperties":true,"description":"Input provided to the [Workflow](#schema_workflow)"},"output":{"type":"object","additionalProperties":true,"description":"Data returned by the [Workflow](#schema_workflow) output"},"parentWorkflowId":{"type":"string","minLength":28,"maxLength":36,"description":"Parent [Workflow](#schema_workflow) id is the parent [Workflow](#schema_workflow) that created this [Workflow](#schema_workflow)"},"conversationId":{"type":"string","minLength":28,"maxLength":36,"description":"Conversation id related to this [Workflow](#schema_workflow)"},"userId":{"type":"string","minLength":28,"maxLength":36,"description":"User id related to this [Workflow](#schema_workflow)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Workflow](#schema_workflow) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Workflow](#schema_workflow) in ISO 8601 format"},"completedAt":{"type":"string","format":"date-time","description":"The date when the [Workflow](#schema_workflow) completed in ISO 8601 format"},"failureReason":{"type":"string","maxLength":2000,"description":"If the [Workflow](#schema_workflow) fails this is the reason behind it"},"timeoutAt":{"type":"string","format":"date-time","description":"The timeout date when the [Workflow](#schema_workflow) will fail in the ISO 8601 format"},"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"Set of [Tags](/docs/developers/concepts/tags) that you can attach to a [Workflow](#schema_workflow). Individual keys can be unset by posting an empty value to them."}},"required":["id","name","status","input","output","createdAt","updatedAt","timeoutAt","tags"],"description":"Workflow definition","additionalProperties":false},"Table":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the table"},"name":{"description":"Required. This name is used to identify your table.","type":"string","minLength":1},"factor":{"default":1,"type":"number","minimum":1,"maximum":30,"description":"The 'factor' multiplies the row's data storage limit by 4KB and its quota count, but can only be set at table creation and not modified later. For instance, a factor of 2 increases storage to 8KB but counts as 2 rows in your quota. The default factor is 1."},"frozen":{"type":"boolean","description":"A table designated as \"frozen\" is immutable in terms of its name and schema structure; modifications to its schema or a renaming operation are not permitted. The only action that can be taken on such a table is deletion. The schema established at the time of creation is locked in as the final structure. To implement any changes, the table must be duplicated with the desired alterations."},"schema":{"type":"object","properties":{"$schema":{"type":"string"},"properties":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["string","number","boolean","object","array","null"]},"format":{"type":"string","enum":["date-time"]},"description":{"type":"string"},"pattern":{"type":"string","description":"String properties must match this pattern"},"enum":{"type":"array","items":{"type":"string"},"description":"String properties must be one of these values"},"items":{"type":"object","properties":{"type":{"type":"string","enum":["string","number","boolean","object","array","null"]}},"required":["type"],"additionalProperties":true,"description":"Defines the shape of items in an array"},"nullable":{"default":true,"type":"boolean"},"properties":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["string","number","boolean","object","array","null"]}},"required":["type"],"additionalProperties":true}},"x-zui":{"type":"object","properties":{"index":{"type":"integer"},"id":{"type":"string","description":"[deprecated] ID of the column."},"searchable":{"type":"boolean","description":"Indicates if the column is vectorized and searchable."},"hidden":{"type":"boolean","description":"Indicates if the field is hidden in the UI"},"order":{"type":"number","description":"Order of the column in the UI"},"width":{"type":"number","description":"Width of the column in the UI"},"schemaId":{"type":"string","description":"ID of the schema"},"computed":{"type":"object","properties":{"action":{"type":"string","enum":["ai","code","workflow"]},"dependencies":{"default":[],"type":"array","items":{"type":"string"}},"prompt":{"type":"string","description":"Prompt when action is \"ai\""},"code":{"type":"string","description":"Code to execute when action is \"code\""},"model":{"default":"gpt-4o","type":"string","maxLength":80,"description":"Model to use when action is \"ai\""},"workflowId":{"type":"string","maxLength":20,"description":"ID of Workflow to execute when action is \"workflow\""},"enabled":{"type":"boolean"}},"required":["action"],"additionalProperties":false},"typings":{"type":"string","description":"TypeScript typings for the column. Recommended if the type is \"object\", ex: \"\\{ foo: string; bar: number \\}\""}},"required":["index"],"additionalProperties":false}},"required":["type","x-zui"],"additionalProperties":false},"description":"List of keys/columns in the table."},"additionalProperties":{"type":"boolean","enum":[true],"description":"Additional properties can be provided, but they will be ignored if no column matches."},"required":{"type":"array","items":{"type":"string"},"description":"Array of required properties."},"type":{"type":"string","enum":["object"]}},"required":["$schema","properties","additionalProperties","type"],"additionalProperties":false},"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"Optional tags to help organize your tables. These should be passed here as an object representing key/value pairs."},"isComputeEnabled":{"type":"boolean","description":"Indicates if the table is enabled for computation."},"createdAt":{"type":"string","format":"date-time","description":"Timestamp of table creation."},"updatedAt":{"type":"string","format":"date-time","description":"Timestamp of the last table update."}},"required":["id","name","schema"],"additionalProperties":false},"Column":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the column."},"name":{"type":"string","minLength":1,"maxLength":30,"description":"Name of the column, must be within length limits."},"description":{"type":"string","description":"Optional descriptive text about the column."},"searchable":{"type":"boolean","description":"Indicates if the column is vectorized and searchable."},"type":{"type":"string","enum":["string","number","boolean","date","object"],"description":"Specifies the data type of the column. Use \"object\" for complex data structures."},"typings":{"type":"string","description":"TypeScript typings for the column. Recommended if the type is \"object\", ex: \"\\{ foo: string; bar: number \\}\""},"computed":{"type":"object","properties":{"action":{"type":"string","enum":["ai","code","workflow"]},"dependencies":{"default":[],"type":"array","items":{"type":"string"}},"prompt":{"type":"string","description":"Prompt when action is \"ai\""},"code":{"type":"string","description":"Code to execute when action is \"code\""},"model":{"default":"gpt-4o","type":"string","maxLength":80,"description":"Model to use when action is \"ai\""},"workflowId":{"type":"string","maxLength":20,"description":"ID of Workflow to execute when action is \"workflow\""},"enabled":{"type":"boolean"}},"required":["action"],"additionalProperties":false},"schema":{"type":"object","additionalProperties":true}},"required":["name","type"],"additionalProperties":false},"Row":{"type":"object","properties":{"id":{"type":"number","description":"Unique identifier for the row."},"createdAt":{"type":"string","format":"date-time","description":"Timestamp of row creation."},"updatedAt":{"type":"string","format":"date-time","description":"Timestamp of the last row update."},"computed":{"type":"object","additionalProperties":{"type":"object","properties":{"status":{"type":"string"},"error":{"type":"string"},"updatedBy":{"type":"string"},"updatedAt":{"type":"string"}},"required":["status"],"additionalProperties":false}},"stale":{"type":"array","items":{"type":"string"},"description":"[Read-only] List of stale values that are waiting to be recomputed."},"similarity":{"type":"number","description":"Optional numeric value indicating similarity, when using findTableRows."}},"required":["id","computed"],"additionalProperties":true},"File":{"type":"object","properties":{"id":{"type":"string","description":"File ID"},"botId":{"type":"string","description":"The ID of the bot the file belongs to"},"key":{"type":"string","description":"Unique key for the file. Must be unique across the bot (and the integration, when applicable)."},"url":{"type":"string","description":"URL to retrieve the file content. This URL will be ready to use once the file is uploaded.\n\nIf the file has a `public_content` policy, this will contain the permanent public URL to retrieve the file, otherwise this will contain a temporary pre-signed URL to download the file which should be used shortly after retrieving and should not be stored long-term as the URL will expire after a short timeframe."},"size":{"type":"number","description":"File size in bytes. Non-null if file upload status is \"COMPLETE\".","nullable":true},"contentType":{"type":"string","description":"MIME type of the file's content"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":1000},"description":"The tags of the file as an object of key/value pairs"},"createdAt":{"type":"string","description":"File creation timestamp in ISO 8601 format"},"updatedAt":{"type":"string","description":"File last update timestamp in ISO 8601 format"},"accessPolicies":{"type":"array","items":{"type":"string","enum":["integrations","public_content"]},"description":"Access policies configured for the file."},"index":{"type":"boolean","description":"Whether the file was requested to be indexed for search or not."},"status":{"type":"string","enum":["upload_pending","upload_failed","upload_completed","indexing_pending","indexing_failed","indexing_completed"],"description":"Status of the file. If the status is `upload_pending`, the file content has not been uploaded yet. The status will be set to `upload_completed` once the file content has been uploaded successfully.\n\nIf the upload failed for any reason (e.g. exceeding the storage quota or the maximum file size limit) the status will be set to `upload_failed` and the reason for the failure will be available in the `failedStatusReason` field of the file.\n\nHowever, if the file has been uploaded and the `index` attribute was set to `true` on the file, the status will immediately transition to the `indexing_pending` status (the `upload_completed` status step will be skipped).\n\nOnce the indexing is completed and the file is ready to be used for searching its status will be set to `indexing_completed`. If the indexing failed the status will be set to `indexing_failed` and the reason for the failure will be available in the `failedStatusReason` field."},"failedStatusReason":{"type":"string","description":"If the file status is `upload_failed` or `indexing_failed` this will contain the reason of the failure."},"expiresAt":{"type":"string","description":"File expiry timestamp in ISO 8601 format"}},"required":["id","botId","key","url","size","contentType","tags","createdAt","updatedAt","accessPolicies","index","status"],"additionalProperties":false}},"responses":{"createConversationResponse":{"description":"Returns a [Conversation](#schema_conversation) object if creation succeeds. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"conversation":{"$ref":"#/components/schemas/Conversation"}},"required":["conversation"],"title":"createConversationResponse","additionalProperties":false}}}},"getConversationResponse":{"description":"Returns a [Conversation](#schema_conversation) object if a valid identifier was provided. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"conversation":{"$ref":"#/components/schemas/Conversation"}},"required":["conversation"],"title":"getConversationResponse","additionalProperties":false}}}},"listConversationsResponse":{"description":"Returns a list of [Conversation](#schema_conversation) objects","content":{"application/json":{"schema":{"type":"object","properties":{"conversations":{"type":"array","items":{"$ref":"#/components/schemas/Conversation"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["conversations","meta"],"title":"listConversationsResponse","additionalProperties":false}}}},"getOrCreateConversationResponse":{"description":"Returns a [Conversation](#schema_conversation) object if a valid identifier was provided. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"conversation":{"$ref":"#/components/schemas/Conversation"}},"required":["conversation"],"title":"getOrCreateConversationResponse","additionalProperties":false}}}},"updateConversationResponse":{"description":"Returns an updated [Conversation](#schema_conversation) object if a valid identifier was provided. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"conversation":{"$ref":"#/components/schemas/Conversation"}},"required":["conversation"],"title":"updateConversationResponse","additionalProperties":false}}}},"deleteConversationResponse":{"description":"Returns the [Conversation](#schema_conversation) object that was deleted","content":{"application/json":{"schema":{"type":"object","title":"deleteConversationResponse","additionalProperties":false}}}},"listParticipantsResponse":{"description":"Returns a list of [Participant](#schema_participant) objects","content":{"application/json":{"schema":{"type":"object","properties":{"participants":{"type":"array","items":{"$ref":"#/components/schemas/User"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["participants","meta"],"title":"listParticipantsResponse","additionalProperties":false}}}},"addParticipantResponse":{"description":"Returns the [Participant](#schema_participant) object","content":{"application/json":{"schema":{"type":"object","properties":{"participant":{"$ref":"#/components/schemas/User"}},"required":["participant"],"title":"addParticipantResponse","additionalProperties":false}}}},"getParticipantResponse":{"description":"Returns the [Participant](#schema_participant) object","content":{"application/json":{"schema":{"type":"object","properties":{"participant":{"$ref":"#/components/schemas/User"}},"required":["participant"],"title":"getParticipantResponse","additionalProperties":false}}}},"removeParticipantResponse":{"description":"Returns an empty object","content":{"application/json":{"schema":{"type":"object","title":"removeParticipantResponse","additionalProperties":false}}}},"createEventResponse":{"description":"Returns a [Event](#schema_event) object if creation succeeds. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"event":{"$ref":"#/components/schemas/Event"}},"required":["event"],"title":"createEventResponse","additionalProperties":false}}}},"getEventResponse":{"description":"Returns the [Event](#schema_event) object if a valid identifiers were provided. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"event":{"$ref":"#/components/schemas/Event"}},"required":["event"],"title":"getEventResponse","additionalProperties":false}}}},"listEventsResponse":{"description":"Returns a list of [Event](#schema_event) objects","content":{"application/json":{"schema":{"type":"object","properties":{"events":{"type":"array","items":{"$ref":"#/components/schemas/Event"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["events","meta"],"title":"listEventsResponse","additionalProperties":false}}}},"createMessageResponse":{"description":"Returns a [Message](#schema_message) object if creation succeeds.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"$ref":"#/components/schemas/Message"}},"required":["message"],"title":"createMessageResponse","additionalProperties":false}}}},"getOrCreateMessageResponse":{"description":"Returns a [Message](#schema_message) object if a valid identifier was provided. Returns an [Error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"$ref":"#/components/schemas/Message"}},"required":["message"],"title":"getOrCreateMessageResponse","additionalProperties":false}}}},"getMessageResponse":{"description":"Returns a [Message](#schema_message) object if a valid identifier was provided. Returns an [Error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"$ref":"#/components/schemas/Message"}},"required":["message"],"title":"getMessageResponse","additionalProperties":false}}}},"updateMessageResponse":{"description":"Message information","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"$ref":"#/components/schemas/Message"}},"required":["message"],"title":"updateMessageResponse","additionalProperties":false}}}},"listMessagesResponse":{"description":"Returns a list of [Message](#schema_message) objects.","content":{"application/json":{"schema":{"type":"object","properties":{"messages":{"type":"array","items":{"$ref":"#/components/schemas/Message"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["messages","meta"],"title":"listMessagesResponse","additionalProperties":false}}}},"deleteMessageResponse":{"description":"Returns the [Message](#schema_message) object that was deleted","content":{"application/json":{"schema":{"type":"object","title":"deleteMessageResponse","additionalProperties":false}}}},"createUserResponse":{"description":"Returns a [User](#schema_user) object if creation succeeds. Returns an [Error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"$ref":"#/components/schemas/User"}},"required":["user"],"title":"createUserResponse","additionalProperties":false}}}},"getUserResponse":{"description":"Returns a [User](#schema_user) object if a valid identifier was provided. Returns an [Error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"$ref":"#/components/schemas/User"}},"required":["user"],"title":"getUserResponse","additionalProperties":false}}}},"listUsersResponse":{"description":"Returns a list of [User](#schema_user) objects","content":{"application/json":{"schema":{"type":"object","properties":{"users":{"type":"array","items":{"$ref":"#/components/schemas/User"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["users","meta"],"title":"listUsersResponse","additionalProperties":false}}}},"getOrCreateUserResponse":{"description":"Returns a [User](#schema_user) object if a valid identifier was provided. Returns an [Error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"$ref":"#/components/schemas/User"}},"required":["user"],"title":"getOrCreateUserResponse","additionalProperties":false}}}},"updateUserResponse":{"description":"Returns an updated [User](#schema_user) object if a valid identifier was provided. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"$ref":"#/components/schemas/User"}},"required":["user"],"title":"updateUserResponse","additionalProperties":false}}}},"deleteUserResponse":{"description":"Returns the [User](#schema_user) object that was deleted","content":{"application/json":{"schema":{"type":"object","title":"deleteUserResponse","additionalProperties":false}}}},"setStateExpiryResponse":{"description":"Returns the updated [State](#schema_state) object if a valid identifier was provided. Returns an [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"state":{"$ref":"#/components/schemas/State"}},"required":["state"],"title":"setStateExpiryResponse","additionalProperties":false}}}},"getStateResponse":{"description":"Returns the [State](#schema_state) object if a valid identifiers were provided. Returns [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"state":{"$ref":"#/components/schemas/State"},"meta":{"type":"object","properties":{"cached":{"type":"boolean"}},"required":["cached"],"additionalProperties":false}},"required":["state","meta"],"title":"getStateResponse","additionalProperties":false}}}},"setStateResponse":{"description":"Returns the updated [State](#schema_state) object if a valid identifier was provided. Returns an [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"state":{"$ref":"#/components/schemas/State"}},"required":["state"],"title":"setStateResponse","additionalProperties":false}}}},"getOrSetStateResponse":{"description":"Returns the [State](#schema_state) object if a valid identifiers were provided. Returns [an error](#errors) otherwise.","content":{"application/json":{"schema":{"type":"object","properties":{"state":{"$ref":"#/components/schemas/State"},"meta":{"type":"object","properties":{"cached":{"type":"boolean"}},"required":["cached"],"additionalProperties":false}},"required":["state","meta"],"title":"getOrSetStateResponse","additionalProperties":false}}}},"patchStateResponse":{"description":"Returns the updated [State](#schema_state) object if a valid identifier was provided. Returns an [an error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"state":{"$ref":"#/components/schemas/State"}},"required":["state"],"title":"patchStateResponse","additionalProperties":false}}}},"callActionResponse":{"description":"Action payload","content":{"application/json":{"schema":{"type":"object","properties":{"output":{"type":"object","additionalProperties":true,"description":"Input of the action"},"meta":{"type":"object","properties":{"cached":{"type":"boolean"}},"required":["cached"],"additionalProperties":false}},"required":["output","meta"],"title":"callActionResponse","additionalProperties":false}}}},"configureIntegrationResponse":{"description":"Configuration of the integration","content":{"application/json":{"schema":{"type":"object","title":"configureIntegrationResponse","additionalProperties":false}}}},"getTaskResponse":{"description":"Returns a [Task](#schema_task) object if a valid identifier was provided. Returns an [Error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"task":{"$ref":"#/components/schemas/Task"}},"required":["task"],"title":"getTaskResponse","additionalProperties":false}}}},"createTaskResponse":{"description":"Returns a [Task](#schema_task) object if creation succeeds. Returns an [Error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"task":{"$ref":"#/components/schemas/Task"}},"required":["task"],"title":"createTaskResponse","additionalProperties":false}}}},"updateTaskResponse":{"description":"Returns an updated [Task](#schema_task) object if a valid identifier was provided. Returns an [Error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"task":{"$ref":"#/components/schemas/Task"}},"required":["task"],"title":"updateTaskResponse","additionalProperties":false}}}},"deleteTaskResponse":{"description":"Returns the [Task](#schema_task) object that was deleted","content":{"application/json":{"schema":{"type":"object","title":"deleteTaskResponse","additionalProperties":false}}}},"listTasksResponse":{"description":"Returns a list of [Task](#schema_task) objects","content":{"application/json":{"schema":{"type":"object","properties":{"tasks":{"type":"array","items":{"$ref":"#/components/schemas/Task"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["tasks","meta"],"title":"listTasksResponse","additionalProperties":false}}}},"createWorkflowResponse":{"description":"Returns a [Workflow](#schema_workflow) object if creation succeeds. Returns an [Error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"workflow":{"$ref":"#/components/schemas/Workflow"}},"required":["workflow"],"title":"createWorkflowResponse","additionalProperties":false}}}},"getWorkflowResponse":{"description":"Returns a [Workflow](#schema_workflow) object if a valid identifier was provided. Returns an [Error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"workflow":{"$ref":"#/components/schemas/Workflow"}},"required":["workflow"],"title":"getWorkflowResponse","additionalProperties":false}}}},"updateWorkflowResponse":{"description":"Returns an updated [Workflow](#schema_workflow) object if a valid identifier was provided. Returns an [Error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"workflow":{"$ref":"#/components/schemas/Workflow"}},"required":["workflow"],"title":"updateWorkflowResponse","additionalProperties":false}}}},"deleteWorkflowResponse":{"description":"Returns the [Workflow](#schema_workflow) object that was deleted","content":{"application/json":{"schema":{"type":"object","title":"deleteWorkflowResponse","additionalProperties":false}}}},"listWorkflowsResponse":{"description":"Returns a list of [Workflow](#schema_workflow) objects","content":{"application/json":{"schema":{"type":"object","properties":{"workflows":{"type":"array","items":{"$ref":"#/components/schemas/Workflow"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["workflows","meta"],"title":"listWorkflowsResponse","additionalProperties":false}}}},"getOrCreateWorkflowResponse":{"description":"Returns a [Workflow](#schema_workflow) object if creation succeeds. Returns an [Error](#errors) otherwise","content":{"application/json":{"schema":{"type":"object","properties":{"workflow":{"$ref":"#/components/schemas/Workflow"}},"required":["workflow"],"title":"getOrCreateWorkflowResponse","additionalProperties":false}}}},"trackAnalyticsResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"trackAnalyticsResponse","additionalProperties":false}}}},"runVrlResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"object","additionalProperties":true},"result":{"nullable":true}},"required":["data"],"title":"runVrlResponse","additionalProperties":false}}}},"getAccountResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"account":{"type":"object","properties":{"id":{"type":"string"},"email":{"type":"string"},"displayName":{"type":"string","maxLength":100},"emailVerified":{"type":"boolean"},"profilePicture":{"type":"string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Account](#schema_account) in ISO 8601 format"}},"required":["id","email","emailVerified","createdAt"],"additionalProperties":false}},"required":["account"],"title":"getAccountResponse","additionalProperties":false}}}},"updateAccountResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"account":{"type":"object","properties":{"id":{"type":"string"},"email":{"type":"string"},"displayName":{"type":"string","maxLength":100},"emailVerified":{"type":"boolean"},"profilePicture":{"type":"string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Account](#schema_account) in ISO 8601 format"}},"required":["id","email","emailVerified","createdAt"],"additionalProperties":false}},"required":["account"],"title":"updateAccountResponse","additionalProperties":false}}}},"listPersonalAccessTokensResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"pats":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"note":{"type":"string"}},"required":["id","createdAt","note"]}}},"required":["pats"],"title":"listPersonalAccessTokensResponse","additionalProperties":false}}}},"createPersonalAccessTokenResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"pat":{"type":"object","properties":{"id":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"note":{"type":"string"},"value":{"type":"string","description":"The PAT value. This will only be returned here when created and cannot be retrieved later."}},"required":["id","createdAt","note","value"],"additionalProperties":false}},"required":["pat"],"title":"createPersonalAccessTokenResponse","additionalProperties":false}}}},"deletePersonalAccessTokenResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"deletePersonalAccessTokenResponse","additionalProperties":false}}}},"setAccountPreferenceResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"setAccountPreferenceResponse","additionalProperties":false}}}},"getAccountPreferenceResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"value":{"nullable":true}},"title":"getAccountPreferenceResponse","additionalProperties":false}}}},"listPublicIntegrationsResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"integrations":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [Integration](#schema_integration)"},"name":{"type":"string","maxLength":200,"description":"Name of the [Integration](#schema_integration)"},"version":{"type":"string","maxLength":200,"description":"Version of the [Integration](#schema_integration)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Integration](#schema_integration) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Integration](#schema_integration) in ISO 8601 format"},"title":{"type":"string","minLength":1,"maxLength":64,"description":"Title of the integration. This is the name that will be displayed in the UI"},"description":{"type":"string","maxLength":256,"description":"Description of the integration. This is the description that will be displayed in the UI"},"iconUrl":{"type":"string","description":"URL of the icon of the integration. This is the icon that will be displayed in the UI"},"public":{"type":"boolean","description":"Idicates if the integration is public. Public integrations are available to all and cannot be updated without creating a new version."},"verificationStatus":{"type":"string","enum":["unapproved","pending","approved","rejected"],"description":"Status of the integration version verification"},"ownerWorkspace":{"type":"object","properties":{"id":{"type":"string"},"handle":{"type":"string","nullable":true},"name":{"type":"string"}},"required":["id","handle","name"]},"meta":{"type":"object","properties":{"installs":{"type":"number"},"views":{"type":"number"}},"required":["installs","views"]}},"required":["id","name","version","createdAt","updatedAt","title","description","iconUrl","public","verificationStatus","ownerWorkspace","meta"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["integrations","meta"],"title":"listPublicIntegrationsResponse","additionalProperties":false}}}},"getPublicIntegrationByIdResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"integration":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [Integration](#schema_integration)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Integration](#schema_integration) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Integration](#schema_integration) in ISO 8601 format"},"identifier":{"type":"object","properties":{"fallbackHandlerScript":{"type":"string","maxLength":2000,"description":"VRL Script of the [Integration](#schema_integration) to handle incoming requests for a request that doesn't have an identifier"},"extractScript":{"type":"string","maxLength":2000,"description":"VRL Script of the [Integration](#schema_integration) to extract the identifier from an incoming webhook often use for OAuth"}},"description":"Global identifier configuration of the [Integration](#schema_integration)","additionalProperties":false},"url":{"type":"string","maxLength":2000,"description":"URL of the [Integration](#schema_integration)"},"name":{"type":"string","maxLength":200,"description":"Name of the [Integration](#schema_integration)"},"version":{"type":"string","maxLength":200,"description":"Version of the [Integration](#schema_integration)"},"interfaces":{"type":"object","additionalProperties":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the interface"},"name":{"type":"string","maxLength":200,"description":"Name of the interface"},"entities":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}},"channels":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}}},"required":["id","name","entities","actions","events","channels"],"additionalProperties":false}},"configuration":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the configuration"},"description":{"type":"string","maxLength":256,"description":"Description of the configuration"},"identifier":{"type":"object","properties":{"linkTemplateScript":{"type":"string","maxLength":2000},"required":{"type":"boolean"}},"required":["required"],"description":"Identifier configuration of the [Integration](#schema_integration)","additionalProperties":false},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."}},"required":["identifier","schema"],"description":"Configuration definition","additionalProperties":false},"configurations":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the configuration"},"description":{"type":"string","maxLength":256,"description":"Description of the configuration"},"identifier":{"type":"object","properties":{"linkTemplateScript":{"type":"string","maxLength":2000},"required":{"type":"boolean"}},"required":["required"],"description":"Identifier configuration of the [Integration](#schema_integration)","additionalProperties":false},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."}},"required":["identifier","schema"],"description":"Configuration definition","additionalProperties":false}},"channels":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the channel"},"description":{"type":"string","maxLength":256,"description":"Description of the channel"},"messages":{"type":"object","additionalProperties":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Message definition","additionalProperties":false}},"conversation":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}},"creation":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Enable conversation creation"},"requiredTags":{"type":"array","items":{"type":"string"},"description":"The list of tags that are required to be specified when calling the API directly to create a conversation."}},"required":["enabled","requiredTags"],"description":"The conversation creation setting determines how to create a conversation through the API directly. The integration will have to implement the `createConversation` functionality to support this setting.","additionalProperties":false}},"required":["tags","creation"],"description":"Conversation object configuration","additionalProperties":false},"message":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"required":["tags"],"description":"Message object configuration","additionalProperties":false}},"required":["messages","conversation","message"],"description":"Channel definition","additionalProperties":false}},"states":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["conversation","user","integration"],"description":"Type of the [State](#schema_state) (`conversation`, `user` or `integration`)"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the [State](#schema_state) in the `JSON schema` format. This `JSON schema` is going to be used for validating the state data."}},"required":["type","schema"],"description":"State definition","additionalProperties":false}},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the event"},"description":{"type":"string","maxLength":256,"description":"Description of the event"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Event Definition","additionalProperties":false}},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the action"},"description":{"type":"string","maxLength":256,"description":"Description of the action"},"billable":{"type":"boolean"},"cacheable":{"type":"boolean"},"input":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false},"output":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false}},"required":["input","output"],"description":"Action definition","additionalProperties":false}},"user":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}},"creation":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Enable user creation"},"requiredTags":{"type":"array","items":{"type":"string"},"description":"The list of tags that are required to be specified when calling the API directly to create a user."}},"required":["enabled","requiredTags"],"description":"The user creation setting determines how to create a user through the API directly. The integration will have to implement the `createUser` functionality to support this setting.","additionalProperties":false}},"required":["tags","creation"],"description":"User object configuration","additionalProperties":false},"entities":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the entity"},"description":{"type":"string","maxLength":256,"description":"Description of the entity"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Entity definition","additionalProperties":false}},"dev":{"type":"boolean","description":"Indicates if the integration is a development integration; Dev integrations run locally"},"title":{"type":"string","minLength":1,"maxLength":64,"description":"Title of the integration. This is the name that will be displayed in the UI"},"description":{"type":"string","maxLength":256,"description":"Description of the integration. This is the description that will be displayed in the UI"},"iconUrl":{"type":"string","description":"URL of the icon of the integration. This is the icon that will be displayed in the UI"},"readmeUrl":{"type":"string","description":"URL of the readme of the integration. This is the readme that will be displayed in the UI"},"public":{"type":"boolean","description":"Idicates if the integration is public. Public integrations are available to all and cannot be updated without creating a new version."},"verificationStatus":{"type":"string","enum":["unapproved","pending","approved","rejected"],"description":"Status of the integration version verification"},"secrets":{"type":"array","items":{"type":"string"},"description":"Secrets are integration-wide values available in the code via environment variables formatted with a SECRET_ prefix followed by your secret name. A secret name must respect SCREAMING_SNAKE casing."},"ownerWorkspace":{"type":"object","properties":{"id":{"type":"string"},"handle":{"type":"string","nullable":true},"name":{"type":"string"}},"required":["id","handle","name"],"additionalProperties":false},"meta":{"type":"object","properties":{"installs":{"type":"number"},"views":{"type":"number"}},"required":["installs","views"],"additionalProperties":false}},"required":["id","createdAt","updatedAt","identifier","url","name","version","interfaces","configuration","configurations","channels","states","events","actions","user","entities","dev","title","description","iconUrl","readmeUrl","public","verificationStatus","secrets","ownerWorkspace","meta"],"additionalProperties":false}},"required":["integration"],"title":"getPublicIntegrationByIdResponse","additionalProperties":false}}}},"getPublicIntegrationResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"integration":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [Integration](#schema_integration)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Integration](#schema_integration) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Integration](#schema_integration) in ISO 8601 format"},"identifier":{"type":"object","properties":{"fallbackHandlerScript":{"type":"string","maxLength":2000,"description":"VRL Script of the [Integration](#schema_integration) to handle incoming requests for a request that doesn't have an identifier"},"extractScript":{"type":"string","maxLength":2000,"description":"VRL Script of the [Integration](#schema_integration) to extract the identifier from an incoming webhook often use for OAuth"}},"description":"Global identifier configuration of the [Integration](#schema_integration)","additionalProperties":false},"url":{"type":"string","maxLength":2000,"description":"URL of the [Integration](#schema_integration)"},"name":{"type":"string","maxLength":200,"description":"Name of the [Integration](#schema_integration)"},"version":{"type":"string","maxLength":200,"description":"Version of the [Integration](#schema_integration)"},"interfaces":{"type":"object","additionalProperties":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the interface"},"name":{"type":"string","maxLength":200,"description":"Name of the interface"},"entities":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}},"channels":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}}},"required":["id","name","entities","actions","events","channels"],"additionalProperties":false}},"configuration":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the configuration"},"description":{"type":"string","maxLength":256,"description":"Description of the configuration"},"identifier":{"type":"object","properties":{"linkTemplateScript":{"type":"string","maxLength":2000},"required":{"type":"boolean"}},"required":["required"],"description":"Identifier configuration of the [Integration](#schema_integration)","additionalProperties":false},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."}},"required":["identifier","schema"],"description":"Configuration definition","additionalProperties":false},"configurations":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the configuration"},"description":{"type":"string","maxLength":256,"description":"Description of the configuration"},"identifier":{"type":"object","properties":{"linkTemplateScript":{"type":"string","maxLength":2000},"required":{"type":"boolean"}},"required":["required"],"description":"Identifier configuration of the [Integration](#schema_integration)","additionalProperties":false},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."}},"required":["identifier","schema"],"description":"Configuration definition","additionalProperties":false}},"channels":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the channel"},"description":{"type":"string","maxLength":256,"description":"Description of the channel"},"messages":{"type":"object","additionalProperties":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Message definition","additionalProperties":false}},"conversation":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}},"creation":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Enable conversation creation"},"requiredTags":{"type":"array","items":{"type":"string"},"description":"The list of tags that are required to be specified when calling the API directly to create a conversation."}},"required":["enabled","requiredTags"],"description":"The conversation creation setting determines how to create a conversation through the API directly. The integration will have to implement the `createConversation` functionality to support this setting.","additionalProperties":false}},"required":["tags","creation"],"description":"Conversation object configuration","additionalProperties":false},"message":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"required":["tags"],"description":"Message object configuration","additionalProperties":false}},"required":["messages","conversation","message"],"description":"Channel definition","additionalProperties":false}},"states":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["conversation","user","integration"],"description":"Type of the [State](#schema_state) (`conversation`, `user` or `integration`)"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the [State](#schema_state) in the `JSON schema` format. This `JSON schema` is going to be used for validating the state data."}},"required":["type","schema"],"description":"State definition","additionalProperties":false}},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the event"},"description":{"type":"string","maxLength":256,"description":"Description of the event"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Event Definition","additionalProperties":false}},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the action"},"description":{"type":"string","maxLength":256,"description":"Description of the action"},"billable":{"type":"boolean"},"cacheable":{"type":"boolean"},"input":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false},"output":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false}},"required":["input","output"],"description":"Action definition","additionalProperties":false}},"user":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}},"creation":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Enable user creation"},"requiredTags":{"type":"array","items":{"type":"string"},"description":"The list of tags that are required to be specified when calling the API directly to create a user."}},"required":["enabled","requiredTags"],"description":"The user creation setting determines how to create a user through the API directly. The integration will have to implement the `createUser` functionality to support this setting.","additionalProperties":false}},"required":["tags","creation"],"description":"User object configuration","additionalProperties":false},"entities":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the entity"},"description":{"type":"string","maxLength":256,"description":"Description of the entity"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Entity definition","additionalProperties":false}},"dev":{"type":"boolean","description":"Indicates if the integration is a development integration; Dev integrations run locally"},"title":{"type":"string","minLength":1,"maxLength":64,"description":"Title of the integration. This is the name that will be displayed in the UI"},"description":{"type":"string","maxLength":256,"description":"Description of the integration. This is the description that will be displayed in the UI"},"iconUrl":{"type":"string","description":"URL of the icon of the integration. This is the icon that will be displayed in the UI"},"readmeUrl":{"type":"string","description":"URL of the readme of the integration. This is the readme that will be displayed in the UI"},"public":{"type":"boolean","description":"Idicates if the integration is public. Public integrations are available to all and cannot be updated without creating a new version."},"verificationStatus":{"type":"string","enum":["unapproved","pending","approved","rejected"],"description":"Status of the integration version verification"},"secrets":{"type":"array","items":{"type":"string"},"description":"Secrets are integration-wide values available in the code via environment variables formatted with a SECRET_ prefix followed by your secret name. A secret name must respect SCREAMING_SNAKE casing."},"ownerWorkspace":{"type":"object","properties":{"id":{"type":"string"},"handle":{"type":"string","nullable":true},"name":{"type":"string"}},"required":["id","handle","name"],"additionalProperties":false},"meta":{"type":"object","properties":{"installs":{"type":"number"},"views":{"type":"number"}},"required":["installs","views"],"additionalProperties":false}},"required":["id","createdAt","updatedAt","identifier","url","name","version","interfaces","configuration","configurations","channels","states","events","actions","user","entities","dev","title","description","iconUrl","readmeUrl","public","verificationStatus","secrets","ownerWorkspace","meta"],"additionalProperties":false}},"required":["integration"],"title":"getPublicIntegrationResponse","additionalProperties":false}}}},"createBotResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"bot":{"$ref":"#/components/schemas/Bot"}},"required":["bot"],"title":"createBotResponse","additionalProperties":false}}}},"updateBotResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"bot":{"$ref":"#/components/schemas/Bot"}},"required":["bot"],"title":"updateBotResponse","additionalProperties":false}}}},"transferBotResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"transferBotResponse","additionalProperties":false}}}},"listBotsResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"bots":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"Id of the [Bot](#schema_bot)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Bot](#schema_bot) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Bot](#schema_bot) in ISO 8601 format"},"name":{"type":"string"},"deployedAt":{"type":"string","format":"date-time"}},"required":["id","createdAt","updatedAt","name"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["bots","meta"],"title":"listBotsResponse","additionalProperties":false}}}},"getBotResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"bot":{"$ref":"#/components/schemas/Bot"}},"required":["bot"],"title":"getBotResponse","additionalProperties":false}}}},"deleteBotResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"deleteBotResponse","additionalProperties":false}}}},"getBotLogsResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"logs":{"type":"array","items":{"type":"object","properties":{"timestamp":{"type":"string"},"level":{"type":"string"},"message":{"type":"string"}},"required":["timestamp","level","message"]}},"nextToken":{"type":"string"}},"required":["logs"],"title":"getBotLogsResponse","additionalProperties":false}}}},"getBotWebchatResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string"}},"required":["code"],"title":"getBotWebchatResponse","additionalProperties":false}}}},"getBotAnalyticsResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"records":{"type":"array","items":{"type":"object","properties":{"startDateTimeUtc":{"type":"string","description":"ISO 8601 date string of the beginning (inclusive) of the period"},"endDateTimeUtc":{"type":"string","description":"ISO 8601 date string of the end (exclusive) of the period"},"returningUsers":{"type":"integer"},"newUsers":{"type":"integer"},"sessions":{"type":"integer"},"messages":{"type":"integer","description":"Deprecated. Use `userMessages` instead."},"userMessages":{"type":"integer"},"botMessages":{"type":"integer"},"events":{"type":"integer"},"eventTypes":{"type":"object","additionalProperties":{"type":"number"}},"customEvents":{"type":"object","additionalProperties":{"type":"number"}},"llm":{"type":"object","properties":{"calls":{"type":"integer"},"errors":{"type":"integer"},"inputTokens":{"type":"integer"},"outputTokens":{"type":"integer"},"latency":{"type":"object","properties":{"mean":{"type":"number"},"sd":{"type":"number"},"min":{"type":"number"},"max":{"type":"number"}},"required":["mean","sd","min","max"],"description":"The time it took for the LLM to complete its response. Values are expressed in milliseconds"},"tokensPerSecond":{"type":"object","properties":{"mean":{"type":"number"},"sd":{"type":"number"},"min":{"type":"number"},"max":{"type":"number"}},"required":["mean","sd","min","max"],"description":"LLM response generation speed expressed in output tokens per second."},"cost":{"type":"object","properties":{"sum":{"type":"number"},"mean":{"type":"number"},"sd":{"type":"number"},"min":{"type":"number"},"max":{"type":"number"}},"required":["sum","mean","sd","min","max"],"description":"Values are expressed in U.S. dollars"}},"required":["calls","errors","inputTokens","outputTokens","latency","tokensPerSecond","cost"]}},"required":["startDateTimeUtc","endDateTimeUtc","returningUsers","newUsers","sessions","messages","userMessages","botMessages","events","eventTypes","customEvents","llm"]}}},"required":["records"],"title":"getBotAnalyticsResponse","additionalProperties":false}}}},"getBotIssueResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"issue":{"type":"object","properties":{"id":{"type":"string"},"code":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"lastSeenAt":{"type":"string","format":"date-time"},"title":{"type":"string"},"description":{"type":"string"},"groupedData":{"type":"object","additionalProperties":{"type":"object","properties":{"raw":{"type":"string"},"pretty":{"type":"string"}},"required":["raw"],"additionalProperties":false}},"eventsCount":{"type":"number"},"category":{"type":"string","enum":["user_code","limits","configuration","other"]},"resolutionLink":{"type":"string","nullable":true}},"required":["id","code","createdAt","lastSeenAt","title","description","groupedData","eventsCount","category","resolutionLink"],"additionalProperties":false}},"required":["issue"],"title":"getBotIssueResponse","additionalProperties":false}}}},"listBotIssuesResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"issues":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"code":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"lastSeenAt":{"type":"string","format":"date-time"},"title":{"type":"string"},"description":{"type":"string"},"groupedData":{"type":"object","additionalProperties":{"type":"object","properties":{"raw":{"type":"string"},"pretty":{"type":"string"}},"required":["raw"]}},"eventsCount":{"type":"number"},"category":{"type":"string","enum":["user_code","limits","configuration","other"]},"resolutionLink":{"type":"string","nullable":true}},"required":["id","code","createdAt","lastSeenAt","title","description","groupedData","eventsCount","category","resolutionLink"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["issues","meta"],"title":"listBotIssuesResponse","additionalProperties":false}}}},"deleteBotIssueResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"deleteBotIssueResponse","additionalProperties":false}}}},"listBotIssueEventsResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"issueEvents":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"data":{"type":"object","additionalProperties":{"type":"object","properties":{"raw":{"type":"string"},"pretty":{"type":"string"}},"required":["raw"]}}},"required":["id","createdAt","data"]}}},"required":["issueEvents"],"title":"listBotIssueEventsResponse","additionalProperties":false}}}},"listBotVersionsResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"versions":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"}},"required":["id","name"]}}},"required":["versions"],"title":"listBotVersionsResponse","additionalProperties":false}}}},"getBotVersionResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"url":{"type":"string","format":"uri"}},"required":["url"],"title":"getBotVersionResponse","additionalProperties":false}}}},"createBotVersionResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"version":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"}},"required":["id","name"],"additionalProperties":false}},"required":["version"],"title":"createBotVersionResponse","additionalProperties":false}}}},"deployBotVersionResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"deployBotVersionResponse","additionalProperties":false}}}},"listWorkspaceInvoicesResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"invoices":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"period":{"type":"object","properties":{"month":{"type":"number"},"year":{"type":"number"}},"required":["month","year"]},"date":{"type":"string","format":"date-time","description":"Date on which the invoice was generated."},"amount":{"type":"number","description":"Total amount to pay of the invoice."},"currency":{"type":"string","maxLength":3,"description":"Currency of the invoice amount."},"paymentStatus":{"type":"string","enum":["deleted","draft","open","paid","uncollectible","void"],"nullable":true},"dueDate":{"type":"string","description":"Date on which the invoice is due."},"paymentAttemptCount":{"type":"number","description":"Number of times payment has been unsuccessfully attempted on the invoice.","nullable":true},"nextPaymentAttemptDate":{"type":"string","format":"date-time","description":"Date on which the next payment attempt will be made.","nullable":true},"pdfUrl":{"type":"string","format":"uri","description":"URL to download the PDF file of the invoice."}},"required":["id","period","date","amount","currency","paymentStatus","paymentAttemptCount","nextPaymentAttemptDate","pdfUrl"]}}},"required":["invoices"],"title":"listWorkspaceInvoicesResponse","additionalProperties":false}}}},"getUpcomingInvoiceResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"number","description":"Total amount to pay of the invoice."}},"required":["total"],"title":"getUpcomingInvoiceResponse","additionalProperties":false}}}},"chargeWorkspaceUnpaidInvoicesResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"chargedInvoices":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"amount":{"type":"number"}},"required":["id","amount"]},"description":"Invoices that were successfully charged by this request."},"failedInvoices":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"amount":{"type":"number"},"failedReason":{"type":"string"}},"required":["id","amount","failedReason"]},"description":"Invoices that failed to be charged by this request."}},"required":["chargedInvoices","failedInvoices"],"title":"chargeWorkspaceUnpaidInvoicesResponse","additionalProperties":false}}}},"createWorkspaceResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"ownerId":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"},"botCount":{"type":"number"},"billingVersion":{"type":"string","enum":["v1","v2"]},"plan":{"type":"string","enum":["community","team","enterprise"]},"blocked":{"type":"boolean"},"spendingLimit":{"type":"number"},"about":{"default":"","type":"string"},"profilePicture":{"default":"","type":"string"},"contactEmail":{"default":"","type":"string"},"website":{"default":"","type":"string"},"socialAccounts":{"default":[],"type":"array","items":{"type":"string"}},"isPublic":{"type":"boolean"},"handle":{"default":"","type":"string"}},"required":["id","name","ownerId","createdAt","updatedAt","botCount","billingVersion","plan","blocked","spendingLimit"],"title":"createWorkspaceResponse","additionalProperties":false}}}},"getPublicWorkspaceResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"},"about":{"default":"","type":"string"},"profilePicture":{"default":"","type":"string"},"contactEmail":{"default":"","type":"string"},"website":{"default":"","type":"string"},"socialAccounts":{"default":[],"type":"array","items":{"type":"string"}},"handle":{"default":"","type":"string"}},"required":["id","name","createdAt","updatedAt"],"title":"getPublicWorkspaceResponse","additionalProperties":false}}}},"getWorkspaceResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"ownerId":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"},"botCount":{"type":"number"},"billingVersion":{"type":"string","enum":["v1","v2"]},"plan":{"type":"string","enum":["community","team","enterprise"]},"blocked":{"type":"boolean"},"spendingLimit":{"type":"number"},"about":{"default":"","type":"string"},"profilePicture":{"default":"","type":"string"},"contactEmail":{"default":"","type":"string"},"website":{"default":"","type":"string"},"socialAccounts":{"default":[],"type":"array","items":{"type":"string"}},"isPublic":{"type":"boolean"},"handle":{"default":"","type":"string"}},"required":["id","name","ownerId","createdAt","updatedAt","botCount","billingVersion","plan","blocked","spendingLimit"],"title":"getWorkspaceResponse","additionalProperties":false}}}},"listWorkspaceUsagesResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"usages":{"type":"array","items":{"$ref":"#/components/schemas/Usage"}}},"required":["usages"],"title":"listWorkspaceUsagesResponse","additionalProperties":false}}}},"breakDownWorkspaceUsageByBotResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"botId":{"type":"string"},"value":{"type":"number"}},"required":["botId","value"]}}},"required":["data"],"title":"breakDownWorkspaceUsageByBotResponse","additionalProperties":false}}}},"getAllWorkspaceQuotaCompletionResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["invocation_timeout","invocation_calls","storage_count","bot_count","knowledgebase_vector_storage","workspace_ratelimit","table_row_count","workspace_member_count","integrations_owned_count","ai_spend","openai_spend","bing_search_spend","always_alive"]},"completion":{"type":"number"}},"required":["type","completion"],"additionalProperties":false},"title":"getAllWorkspaceQuotaCompletionResponse"}}}},"getWorkspaceQuotaResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"quota":{"type":"object","properties":{"period":{"type":"string","description":"Period of the quota that it is applied to"},"value":{"type":"number","description":"Value of the quota that is used"},"type":{"type":"string","enum":["invocation_timeout","invocation_calls","storage_count","bot_count","knowledgebase_vector_storage","workspace_ratelimit","table_row_count","workspace_member_count","integrations_owned_count","ai_spend","openai_spend","bing_search_spend","always_alive"],"description":"Usage type that can be used"}},"required":["period","value","type"],"additionalProperties":false}},"required":["quota"],"title":"getWorkspaceQuotaResponse","additionalProperties":false}}}},"listWorkspaceQuotasResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"quotas":{"type":"array","items":{"type":"object","properties":{"period":{"type":"string","description":"Period of the quota that it is applied to"},"value":{"type":"number","description":"Value of the quota that is used"},"type":{"type":"string","enum":["invocation_timeout","invocation_calls","storage_count","bot_count","knowledgebase_vector_storage","workspace_ratelimit","table_row_count","workspace_member_count","integrations_owned_count","ai_spend","openai_spend","bing_search_spend","always_alive"],"description":"Usage type that can be used"}},"required":["period","value","type"]}}},"required":["quotas"],"title":"listWorkspaceQuotasResponse","additionalProperties":false}}}},"updateWorkspaceResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"ownerId":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"},"botCount":{"type":"number"},"billingVersion":{"type":"string","enum":["v1","v2"]},"plan":{"type":"string","enum":["community","team","enterprise"]},"blocked":{"type":"boolean"},"spendingLimit":{"type":"number"},"about":{"default":"","type":"string"},"profilePicture":{"default":"","type":"string"},"contactEmail":{"default":"","type":"string"},"website":{"default":"","type":"string"},"socialAccounts":{"default":[],"type":"array","items":{"type":"string"}},"isPublic":{"type":"boolean"},"handle":{"default":"","type":"string"}},"required":["id","name","ownerId","createdAt","updatedAt","botCount","billingVersion","plan","blocked","spendingLimit"],"title":"updateWorkspaceResponse","additionalProperties":false}}}},"checkHandleAvailabilityResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"available":{"type":"boolean"},"suggestions":{"type":"array","items":{"type":"string"}},"usedBy":{"type":"string"}},"required":["available","suggestions"],"title":"checkHandleAvailabilityResponse","additionalProperties":false}}}},"listWorkspacesResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"workspaces":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"ownerId":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"},"botCount":{"type":"number"},"billingVersion":{"type":"string","enum":["v1","v2"]},"plan":{"type":"string","enum":["community","team","enterprise"]},"blocked":{"type":"boolean"},"spendingLimit":{"type":"number"},"about":{"default":"","type":"string"},"profilePicture":{"default":"","type":"string"},"contactEmail":{"default":"","type":"string"},"website":{"default":"","type":"string"},"socialAccounts":{"default":[],"type":"array","items":{"type":"string"}},"isPublic":{"type":"boolean"},"handle":{"default":"","type":"string"}},"required":["id","name","ownerId","createdAt","updatedAt","botCount","billingVersion","plan","blocked","spendingLimit"],"title":"updateWorkspaceResponse"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["workspaces","meta"],"title":"listWorkspacesResponse","additionalProperties":false}}}},"listPublicWorkspacesResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"workspaces":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"},"about":{"default":"","type":"string"},"profilePicture":{"default":"","type":"string"},"contactEmail":{"default":"","type":"string"},"website":{"default":"","type":"string"},"socialAccounts":{"default":[],"type":"array","items":{"type":"string"}},"handle":{"default":"","type":"string"}},"required":["id","name","createdAt","updatedAt"],"title":"getPublicWorkspaceResponse"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["workspaces","meta"],"title":"listPublicWorkspacesResponse","additionalProperties":false}}}},"deleteWorkspaceResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"deleteWorkspaceResponse","additionalProperties":false}}}},"getAuditRecordsResponse":{"description":"List of audit records","content":{"application/json":{"schema":{"type":"object","properties":{"records":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"recordedAt":{"type":"string","format":"date-time"},"userId":{"type":"string","format":"uuid","nullable":true},"userEmail":{"type":"string","nullable":true},"resourceId":{"type":"string","nullable":true},"resourceName":{"type":"string","nullable":true},"value":{"type":"string","nullable":true},"action":{"type":"string","enum":["UNKNOWN","ADD_WORKSPACE_MEMBER","REMOVE_WORKSPACE_MEMBER","UPDATE_WORKSPACE_MEMBER","CLOSE_WORKSPACE","CREATE_BOT","CREATE_WORKSPACE","DELETE_BOT","DEPLOY_BOT","TRANSFER_BOT","DOWNLOAD_BOT_ARCHIVE","UPDATE_BOT","UPDATE_BOT_CHANNEL","UPDATE_BOT_CONFIG","UPDATE_PAYMENT_METHOD","UPDATE_WORKSPACE","SET_SPENDING_LIMIT","SET_AI_SPENDING_LIMIT","UPDATE_WORKSPACE_BILLING_READONLY"]}},"required":["id","recordedAt","userId","resourceId","action"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["records","meta"],"title":"getAuditRecordsResponse","additionalProperties":false}}}},"listWorkspaceMembersResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"members":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"userId":{"type":"string","format":"uuid"},"email":{"type":"string"},"createdAt":{"type":"string"},"role":{"type":"string","enum":["viewer","billing","developer","manager","administrator","owner"]},"profilePicture":{"type":"string"},"displayName":{"type":"string","maxLength":100}},"required":["id","email","createdAt","role"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["members","meta"],"title":"listWorkspaceMembersResponse","additionalProperties":false}}}},"getWorkspaceMemberResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string"},"userId":{"type":"string","format":"uuid"},"email":{"type":"string"},"createdAt":{"type":"string"},"role":{"type":"string","enum":["viewer","billing","developer","manager","administrator","owner"]},"profilePicture":{"type":"string"},"displayName":{"type":"string","maxLength":100}},"required":["id","email","createdAt","role"],"title":"getWorkspaceMemberResponse","additionalProperties":false}}}},"deleteWorkspaceMemberResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"deleteWorkspaceMemberResponse","additionalProperties":false}}}},"createWorkspaceMemberResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string"},"userId":{"type":"string","format":"uuid"},"email":{"type":"string"},"createdAt":{"type":"string"},"role":{"type":"string","enum":["viewer","billing","developer","manager","administrator","owner"]},"profilePicture":{"type":"string"},"displayName":{"type":"string","maxLength":100}},"required":["id","email","createdAt","role"],"title":"createWorkspaceMemberResponse","additionalProperties":false}}}},"updateWorkspaceMemberResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string"},"userId":{"type":"string","format":"uuid"},"email":{"type":"string"},"createdAt":{"type":"string"},"role":{"type":"string","enum":["viewer","billing","developer","manager","administrator","owner"]},"profilePicture":{"type":"string"},"displayName":{"type":"string","maxLength":100}},"required":["id","email","createdAt","role"],"title":"updateWorkspaceMemberResponse","additionalProperties":false}}}},"listIntegrationApiKeysResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"iaks":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"note":{"type":"string"}},"required":["id","createdAt","note"]}}},"required":["iaks"],"title":"listIntegrationApiKeysResponse","additionalProperties":false}}}},"createIntegrationApiKeyResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"note":{"type":"string"},"value":{"type":"string","description":"The IAK value. This will only be returned here when created and cannot be retrieved later."}},"required":["id","createdAt","note","value"],"title":"createIntegrationApiKeyResponse","additionalProperties":false}}}},"deleteIntegrationApiKeyResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"deleteIntegrationApiKeyResponse","additionalProperties":false}}}},"createIntegrationResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"integration":{"$ref":"#/components/schemas/Integration"}},"required":["integration"],"title":"createIntegrationResponse","additionalProperties":false}}}},"updateIntegrationResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"integration":{"$ref":"#/components/schemas/Integration"}},"required":["integration"],"title":"updateIntegrationResponse","additionalProperties":false}}}},"listIntegrationsResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"integrations":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [Integration](#schema_integration)"},"name":{"type":"string","maxLength":200,"description":"Name of the [Integration](#schema_integration)"},"version":{"type":"string","maxLength":200,"description":"Version of the [Integration](#schema_integration)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Integration](#schema_integration) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Integration](#schema_integration) in ISO 8601 format"},"title":{"type":"string","minLength":1,"maxLength":64,"description":"Title of the integration. This is the name that will be displayed in the UI"},"description":{"type":"string","maxLength":256,"description":"Description of the integration. This is the description that will be displayed in the UI"},"iconUrl":{"type":"string","description":"URL of the icon of the integration. This is the icon that will be displayed in the UI"},"public":{"type":"boolean","description":"Idicates if the integration is public. Public integrations are available to all and cannot be updated without creating a new version."},"verificationStatus":{"type":"string","enum":["unapproved","pending","approved","rejected"],"description":"Status of the integration version verification"}},"required":["id","name","version","createdAt","updatedAt","title","description","iconUrl","public","verificationStatus"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["integrations","meta"],"title":"listIntegrationsResponse","additionalProperties":false}}}},"getIntegrationResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"integration":{"$ref":"#/components/schemas/Integration"}},"required":["integration"],"title":"getIntegrationResponse","additionalProperties":false}}}},"getIntegrationLogsResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"logs":{"type":"array","items":{"type":"object","properties":{"timestamp":{"type":"string"},"level":{"type":"string"},"message":{"type":"string"}},"required":["timestamp","level","message"]}},"nextToken":{"type":"string"}},"required":["logs"],"title":"getIntegrationLogsResponse","additionalProperties":false}}}},"getIntegrationByNameResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"integration":{"$ref":"#/components/schemas/Integration"}},"required":["integration"],"title":"getIntegrationByNameResponse","additionalProperties":false}}}},"deleteIntegrationResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"deleteIntegrationResponse","additionalProperties":false}}}},"requestIntegrationVerificationResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"requestIntegrationVerificationResponse","additionalProperties":false}}}},"createInterfaceResponse":{"description":"Get an interface","content":{"application/json":{"schema":{"type":"object","properties":{"interface":{"$ref":"#/components/schemas/Interface"}},"required":["interface"],"title":"createInterfaceResponse","additionalProperties":false}}}},"getInterfaceResponse":{"description":"Get an interface","content":{"application/json":{"schema":{"type":"object","properties":{"interface":{"$ref":"#/components/schemas/Interface"}},"required":["interface"],"title":"getInterfaceResponse","additionalProperties":false}}}},"getInterfaceByNameResponse":{"description":"Get an interface","content":{"application/json":{"schema":{"type":"object","properties":{"interface":{"$ref":"#/components/schemas/Interface"}},"required":["interface"],"title":"getInterfaceByNameResponse","additionalProperties":false}}}},"updateInterfaceResponse":{"description":"Update an interface","content":{"application/json":{"schema":{"type":"object","properties":{"interface":{"$ref":"#/components/schemas/Interface"}},"required":["interface"],"title":"updateInterfaceResponse","additionalProperties":false}}}},"deleteInterfaceResponse":{"description":"Delete an interface","content":{"application/json":{"schema":{"type":"object","title":"deleteInterfaceResponse","additionalProperties":false}}}},"listInterfacesResponse":{"description":"List interfaces","content":{"application/json":{"schema":{"type":"object","properties":{"interfaces":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [Interface](#schema_interface)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Interface](#schema_interface) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Interface](#schema_interface) in ISO 8601 format"},"name":{"type":"string","maxLength":200,"description":"Name of the [Interface](#schema_interface)"},"version":{"type":"string","maxLength":200,"description":"Version of the [Interface](#schema_interface)"}},"required":["id","createdAt","updatedAt","name","version"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["interfaces","meta"],"title":"listInterfacesResponse","additionalProperties":false}}}},"getUsageResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"usage":{"$ref":"#/components/schemas/Usage"}},"required":["usage"],"title":"getUsageResponse","additionalProperties":false}}}},"getMultipleUsagesResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"usages":{"type":"array","items":{"$ref":"#/components/schemas/Usage"}}},"required":["usages"],"title":"getMultipleUsagesResponse","additionalProperties":false}}}},"listUsageHistoryResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"usages":{"type":"array","items":{"$ref":"#/components/schemas/Usage"}}},"required":["usages"],"title":"listUsageHistoryResponse","additionalProperties":false}}}},"listUsageActivityResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"timestamp":{"type":"string"},"value":{"type":"number"},"period":{"type":"string"},"metadata":{"type":"object","additionalProperties":{"nullable":true}}},"required":["timestamp","value","period","metadata"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string"}},"additionalProperties":false}},"required":["data","meta"],"title":"listUsageActivityResponse","additionalProperties":false}}}},"changeAISpendQuotaResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"changeAISpendQuotaResponse","additionalProperties":false}}}},"listActivitiesResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"activities":{"type":"array","items":{"$ref":"#/components/schemas/Activity"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["activities","meta"],"title":"listActivitiesResponse","additionalProperties":false}}}},"introspectResponse":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"workspaceId":{"type":"string"},"botId":{"type":"string"},"userId":{"type":"string"}},"required":["workspaceId","botId","userId"],"title":"introspectResponse","additionalProperties":false}}}},"upsertFileResponse":{"description":"The created or updated file","content":{"application/json":{"schema":{"type":"object","properties":{"file":{"type":"object","properties":{"id":{"type":"string","description":"File ID"},"botId":{"type":"string","description":"The ID of the bot the file belongs to"},"key":{"type":"string","description":"Unique key for the file. Must be unique across the bot (and the integration, when applicable)."},"url":{"type":"string","description":"URL to retrieve the file content. This URL will be ready to use once the file is uploaded.\n\nIf the file has a `public_content` policy, this will contain the permanent public URL to retrieve the file, otherwise this will contain a temporary pre-signed URL to download the file which should be used shortly after retrieving and should not be stored long-term as the URL will expire after a short timeframe."},"size":{"type":"number","description":"File size in bytes. Non-null if file upload status is \"COMPLETE\".","nullable":true},"contentType":{"type":"string","description":"MIME type of the file's content"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":1000},"description":"The tags of the file as an object of key/value pairs"},"createdAt":{"type":"string","description":"File creation timestamp in ISO 8601 format"},"updatedAt":{"type":"string","description":"File last update timestamp in ISO 8601 format"},"accessPolicies":{"type":"array","items":{"type":"string","enum":["integrations","public_content"]},"description":"Access policies configured for the file."},"index":{"type":"boolean","description":"Whether the file was requested to be indexed for search or not."},"status":{"type":"string","enum":["upload_pending","upload_failed","upload_completed","indexing_pending","indexing_failed","indexing_completed"],"description":"Status of the file. If the status is `upload_pending`, the file content has not been uploaded yet. The status will be set to `upload_completed` once the file content has been uploaded successfully.\n\nIf the upload failed for any reason (e.g. exceeding the storage quota or the maximum file size limit) the status will be set to `upload_failed` and the reason for the failure will be available in the `failedStatusReason` field of the file.\n\nHowever, if the file has been uploaded and the `index` attribute was set to `true` on the file, the status will immediately transition to the `indexing_pending` status (the `upload_completed` status step will be skipped).\n\nOnce the indexing is completed and the file is ready to be used for searching its status will be set to `indexing_completed`. If the indexing failed the status will be set to `indexing_failed` and the reason for the failure will be available in the `failedStatusReason` field."},"failedStatusReason":{"type":"string","description":"If the file status is `upload_failed` or `indexing_failed` this will contain the reason of the failure."},"expiresAt":{"type":"string","description":"File expiry timestamp in ISO 8601 format"},"uploadUrl":{"type":"string","description":"URL to upload the file content. File content needs to be sent to this URL via a PUT request."}},"required":["id","botId","key","url","size","contentType","tags","createdAt","updatedAt","accessPolicies","index","status","uploadUrl"],"additionalProperties":false}},"required":["file"],"title":"upsertFileResponse","additionalProperties":false}}}},"deleteFileResponse":{"description":"Empty response.","content":{"application/json":{"schema":{"type":"object","title":"deleteFileResponse","additionalProperties":false}}}},"listFilesResponse":{"description":"Returns the list of files related to the bot.","content":{"application/json":{"schema":{"type":"object","properties":{"files":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"File ID"},"botId":{"type":"string","description":"The ID of the bot the file belongs to"},"key":{"type":"string","description":"Unique key for the file. Must be unique across the bot (and the integration, when applicable)."},"url":{"type":"string","description":"URL to retrieve the file content. This URL will be ready to use once the file is uploaded.\n\nIf the file has a `public_content` policy, this will contain the permanent public URL to retrieve the file, otherwise this will contain a temporary pre-signed URL to download the file which should be used shortly after retrieving and should not be stored long-term as the URL will expire after a short timeframe."},"size":{"type":"number","description":"File size in bytes. Non-null if file upload status is \"COMPLETE\".","nullable":true},"contentType":{"type":"string","description":"MIME type of the file's content"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":1000},"description":"The tags of the file as an object of key/value pairs"},"createdAt":{"type":"string","description":"File creation timestamp in ISO 8601 format"},"updatedAt":{"type":"string","description":"File last update timestamp in ISO 8601 format"},"accessPolicies":{"type":"array","items":{"type":"string","enum":["integrations","public_content"]},"description":"Access policies configured for the file."},"index":{"type":"boolean","description":"Whether the file was requested to be indexed for search or not."},"status":{"type":"string","enum":["upload_pending","upload_failed","upload_completed","indexing_pending","indexing_failed","indexing_completed"],"description":"Status of the file. If the status is `upload_pending`, the file content has not been uploaded yet. The status will be set to `upload_completed` once the file content has been uploaded successfully.\n\nIf the upload failed for any reason (e.g. exceeding the storage quota or the maximum file size limit) the status will be set to `upload_failed` and the reason for the failure will be available in the `failedStatusReason` field of the file.\n\nHowever, if the file has been uploaded and the `index` attribute was set to `true` on the file, the status will immediately transition to the `indexing_pending` status (the `upload_completed` status step will be skipped).\n\nOnce the indexing is completed and the file is ready to be used for searching its status will be set to `indexing_completed`. If the indexing failed the status will be set to `indexing_failed` and the reason for the failure will be available in the `failedStatusReason` field."},"failedStatusReason":{"type":"string","description":"If the file status is `upload_failed` or `indexing_failed` this will contain the reason of the failure."},"expiresAt":{"type":"string","description":"File expiry timestamp in ISO 8601 format"}},"required":["id","botId","key","url","size","contentType","tags","createdAt","updatedAt","accessPolicies","index","status"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["files","meta"],"title":"listFilesResponse","additionalProperties":false}}}},"getFileResponse":{"description":"An object containing the file metadata and URL","content":{"application/json":{"schema":{"type":"object","properties":{"file":{"type":"object","properties":{"id":{"type":"string","description":"File ID"},"botId":{"type":"string","description":"The ID of the bot the file belongs to"},"key":{"type":"string","description":"Unique key for the file. Must be unique across the bot (and the integration, when applicable)."},"url":{"type":"string","description":"URL to retrieve the file content. This URL will be ready to use once the file is uploaded.\n\nIf the file has a `public_content` policy, this will contain the permanent public URL to retrieve the file, otherwise this will contain a temporary pre-signed URL to download the file which should be used shortly after retrieving and should not be stored long-term as the URL will expire after a short timeframe."},"size":{"type":"number","description":"File size in bytes. Non-null if file upload status is \"COMPLETE\".","nullable":true},"contentType":{"type":"string","description":"MIME type of the file's content"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":1000},"description":"The tags of the file as an object of key/value pairs"},"createdAt":{"type":"string","description":"File creation timestamp in ISO 8601 format"},"updatedAt":{"type":"string","description":"File last update timestamp in ISO 8601 format"},"accessPolicies":{"type":"array","items":{"type":"string","enum":["integrations","public_content"]},"description":"Access policies configured for the file."},"index":{"type":"boolean","description":"Whether the file was requested to be indexed for search or not."},"status":{"type":"string","enum":["upload_pending","upload_failed","upload_completed","indexing_pending","indexing_failed","indexing_completed"],"description":"Status of the file. If the status is `upload_pending`, the file content has not been uploaded yet. The status will be set to `upload_completed` once the file content has been uploaded successfully.\n\nIf the upload failed for any reason (e.g. exceeding the storage quota or the maximum file size limit) the status will be set to `upload_failed` and the reason for the failure will be available in the `failedStatusReason` field of the file.\n\nHowever, if the file has been uploaded and the `index` attribute was set to `true` on the file, the status will immediately transition to the `indexing_pending` status (the `upload_completed` status step will be skipped).\n\nOnce the indexing is completed and the file is ready to be used for searching its status will be set to `indexing_completed`. If the indexing failed the status will be set to `indexing_failed` and the reason for the failure will be available in the `failedStatusReason` field."},"failedStatusReason":{"type":"string","description":"If the file status is `upload_failed` or `indexing_failed` this will contain the reason of the failure."},"expiresAt":{"type":"string","description":"File expiry timestamp in ISO 8601 format"}},"required":["id","botId","key","url","size","contentType","tags","createdAt","updatedAt","accessPolicies","index","status"],"additionalProperties":false}},"required":["file"],"title":"getFileResponse","additionalProperties":false}}}},"updateFileMetadataResponse":{"description":"An object containing the updated file metadata.","content":{"application/json":{"schema":{"type":"object","properties":{"file":{"type":"object","properties":{"id":{"type":"string","description":"File ID"},"botId":{"type":"string","description":"The ID of the bot the file belongs to"},"key":{"type":"string","description":"Unique key for the file. Must be unique across the bot (and the integration, when applicable)."},"url":{"type":"string","description":"URL to retrieve the file content. This URL will be ready to use once the file is uploaded.\n\nIf the file has a `public_content` policy, this will contain the permanent public URL to retrieve the file, otherwise this will contain a temporary pre-signed URL to download the file which should be used shortly after retrieving and should not be stored long-term as the URL will expire after a short timeframe."},"size":{"type":"number","description":"File size in bytes. Non-null if file upload status is \"COMPLETE\".","nullable":true},"contentType":{"type":"string","description":"MIME type of the file's content"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":1000},"description":"The tags of the file as an object of key/value pairs"},"createdAt":{"type":"string","description":"File creation timestamp in ISO 8601 format"},"updatedAt":{"type":"string","description":"File last update timestamp in ISO 8601 format"},"accessPolicies":{"type":"array","items":{"type":"string","enum":["integrations","public_content"]},"description":"Access policies configured for the file."},"index":{"type":"boolean","description":"Whether the file was requested to be indexed for search or not."},"status":{"type":"string","enum":["upload_pending","upload_failed","upload_completed","indexing_pending","indexing_failed","indexing_completed"],"description":"Status of the file. If the status is `upload_pending`, the file content has not been uploaded yet. The status will be set to `upload_completed` once the file content has been uploaded successfully.\n\nIf the upload failed for any reason (e.g. exceeding the storage quota or the maximum file size limit) the status will be set to `upload_failed` and the reason for the failure will be available in the `failedStatusReason` field of the file.\n\nHowever, if the file has been uploaded and the `index` attribute was set to `true` on the file, the status will immediately transition to the `indexing_pending` status (the `upload_completed` status step will be skipped).\n\nOnce the indexing is completed and the file is ready to be used for searching its status will be set to `indexing_completed`. If the indexing failed the status will be set to `indexing_failed` and the reason for the failure will be available in the `failedStatusReason` field."},"failedStatusReason":{"type":"string","description":"If the file status is `upload_failed` or `indexing_failed` this will contain the reason of the failure."},"expiresAt":{"type":"string","description":"File expiry timestamp in ISO 8601 format"}},"required":["id","botId","key","url","size","contentType","tags","createdAt","updatedAt","accessPolicies","index","status"],"additionalProperties":false}},"required":["file"],"title":"updateFileMetadataResponse","additionalProperties":false}}}},"searchFilesResponse":{"description":"Returns the text passages within all indexed files that matched the query.","content":{"application/json":{"schema":{"type":"object","properties":{"passages":{"type":"array","items":{"type":"object","properties":{"content":{"type":"string","description":"The content of the matching passage in the file including surrounding context, if any."},"score":{"type":"number","description":"The score indicating the similarity of the passage to the query. A higher score indicates higher similarity."},"meta":{"type":"object","properties":{"type":{"type":"string","enum":["chunk","summary","consolidated"],"description":"The type of passage"},"subtype":{"type":"string","enum":["title","subtitle","paragraph","list","blockquote","table","code"],"description":"The subtype of passage, if available."},"pageNumber":{"type":"integer","description":"Page number the passage is located on. Only applicable if the passage was extracted from a PDF file."},"position":{"type":"integer","description":"Position number of the passage in the file relative to the other passages, if available. Can be used to know the order of passages within a file."}},"description":"The passage metadata."},"file":{"type":"object","properties":{"id":{"type":"string","description":"File ID"},"key":{"type":"string","description":"Unique key for the file. Must be unique across the bot (and the integration, when applicable)."},"contentType":{"type":"string","description":"MIME type of the file's content"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":1000},"description":"The tags of the file as an object of key-value pairs."},"createdAt":{"type":"string","description":"File creation timestamp in ISO 8601 format"},"updatedAt":{"type":"string","description":"File last update timestamp in ISO 8601 format"}},"required":["id","key","contentType","tags","createdAt","updatedAt"]}},"required":["content","score","meta","file"]}}},"required":["passages"],"title":"searchFilesResponse","additionalProperties":false}}}},"listFilePassagesResponse":{"description":"Returns the list of passages extracted from a file.","content":{"application/json":{"schema":{"type":"object","properties":{"passages":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Passage ID"},"content":{"type":"string","description":"The content of the passage."},"meta":{"type":"object","properties":{"type":{"type":"string","enum":["chunk","summary","consolidated"],"description":"The type of passage"},"subtype":{"type":"string","enum":["title","subtitle","paragraph","list","blockquote","table","code"],"description":"The subtype of passage, if available."},"pageNumber":{"type":"integer","description":"Page number the passage is located on. Only applicable if the passage was extracted from a PDF file."},"position":{"type":"integer","description":"Position number of the passage in the file relative to the other passages, if available. Can be used to know the order of passages within a file."}},"description":"The passage metadata."}},"required":["id","content","meta"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["passages","meta"],"title":"listFilePassagesResponse","additionalProperties":false}}}},"listTablesResponse":{"description":"Returns a list of tables.","content":{"application/json":{"schema":{"type":"object","properties":{"tables":{"type":"array","items":{"$ref":"#/components/schemas/Table"}}},"required":["tables"],"title":"listTablesResponse","additionalProperties":false}}}},"getTableResponse":{"description":"Details of the requested table, including row count and indexing status.","content":{"application/json":{"schema":{"type":"object","properties":{"table":{"$ref":"#/components/schemas/Table"},"rows":{"type":"number","description":"The total number of rows present in the table."},"stale":{"type":"number","description":"The number of stale rows that are waiting to be processed"},"indexing":{"type":"number","description":"The number of rows that are waiting to be indexed (for search)"}},"required":["table","rows","stale","indexing"],"title":"getTableResponse","additionalProperties":false}}}},"getOrCreateTableResponse":{"description":"The retrieved or created table object.","content":{"application/json":{"schema":{"type":"object","properties":{"table":{"$ref":"#/components/schemas/Table"},"created":{"type":"boolean","description":"Flag indicating if the table was newly created."},"rows":{"type":"number","description":"The total number of rows present in the table."},"stale":{"type":"number","description":"The number of stale rows that are waiting to be processed"},"indexing":{"type":"number","description":"The number of rows that are waiting to be indexed (for search)"}},"required":["table","created","rows","stale","indexing"],"title":"getOrCreateTableResponse","additionalProperties":false}}}},"createTableResponse":{"description":"The created table object.","content":{"application/json":{"schema":{"type":"object","properties":{"table":{"$ref":"#/components/schemas/Table"}},"required":["table"],"title":"createTableResponse","additionalProperties":false}}}},"duplicateTableResponse":{"description":"The created table object.","content":{"application/json":{"schema":{"type":"object","properties":{"table":{"$ref":"#/components/schemas/Table"},"rows":{"type":"number","description":"The total number of rows present in the table."}},"required":["table","rows"],"title":"duplicateTableResponse","additionalProperties":false}}}},"updateTableResponse":{"description":"The updated table","content":{"application/json":{"schema":{"type":"object","properties":{"table":{"$ref":"#/components/schemas/Table"},"staleColumns":{"type":"array","items":{"type":"string"},"description":"List of columns that have become stale following the modification."}},"required":["table"],"title":"updateTableResponse","additionalProperties":false}}}},"renameTableColumnResponse":{"description":"Confirmation of the column rename operation, including the updated table schema.","content":{"application/json":{"schema":{"type":"object","properties":{"table":{"$ref":"#/components/schemas/Table"}},"required":["table"],"title":"renameTableColumnResponse","additionalProperties":false}}}},"deleteTableResponse":{"description":"Confirmation that the table has been deleted.","content":{"application/json":{"schema":{"type":"object","title":"deleteTableResponse","additionalProperties":false}}}},"getTableRowResponse":{"description":"The requested row object.","content":{"application/json":{"schema":{"type":"object","properties":{"row":{"$ref":"#/components/schemas/Row"}},"required":["row"],"title":"getTableRowResponse","additionalProperties":false}}}},"findTableRowsResponse":{"description":"A collection of rows that match the search criteria, along with metadata such as total count and pagination details.","content":{"application/json":{"schema":{"type":"object","properties":{"rows":{"type":"array","items":{"$ref":"#/components/schemas/Row"}},"hasMore":{"type":"boolean","description":"Flag indicating if there are more rows to fetch."},"offset":{"type":"integer"},"limit":{"type":"integer"},"warnings":{"type":"array","items":{"type":"string"},"description":"Alerts for minor issues that don't block the operation but suggest possible improvements."}},"required":["rows","hasMore","offset","limit"],"title":"findTableRowsResponse","additionalProperties":false}}}},"createTableRowsResponse":{"description":"A summary of the insertion operation, including any warnings or errors encountered, and the inserted row data.","content":{"application/json":{"schema":{"type":"object","properties":{"rows":{"type":"array","items":{"$ref":"#/components/schemas/Row"}},"warnings":{"type":"array","items":{"type":"string"},"description":"Alerts for minor issues that don't block the operation but suggest possible improvements."},"errors":{"type":"array","items":{"type":"string"},"description":"Critical issues in specific elements that prevent their successful processing, allowing partial operation success."}},"required":["rows"],"title":"createTableRowsResponse","additionalProperties":false}}}},"deleteTableRowsResponse":{"description":"Confirms the number of rows successfully deleted.","content":{"application/json":{"schema":{"type":"object","properties":{"deletedRows":{"type":"number"}},"required":["deletedRows"],"title":"deleteTableRowsResponse","additionalProperties":false}}}},"updateTableRowsResponse":{"description":"Returns updated rows, including warnings for minor issues and errors for failed updates.","content":{"application/json":{"schema":{"type":"object","properties":{"rows":{"type":"array","items":{"$ref":"#/components/schemas/Row"}},"warnings":{"type":"array","items":{"type":"string"},"description":"Alerts for minor issues that don't block the operation but suggest possible improvements."},"errors":{"type":"array","items":{"type":"string"},"description":"Critical issues in specific elements that prevent their successful processing, allowing partial operation success."}},"required":["rows"],"title":"updateTableRowsResponse","additionalProperties":false}}}},"upsertTableRowsResponse":{"description":"Summary of insertions and updates, including any warnings or errors.","content":{"application/json":{"schema":{"type":"object","properties":{"inserted":{"type":"array","items":{"$ref":"#/components/schemas/Row"}},"updated":{"type":"array","items":{"$ref":"#/components/schemas/Row"}},"warnings":{"type":"array","items":{"type":"string"},"description":"Alerts for minor issues that don't block the operation but suggest possible improvements."},"errors":{"type":"array","items":{"type":"string"},"description":"Critical issues in specific elements that prevent their successful processing, allowing partial operation success."}},"required":["inserted","updated"],"title":"upsertTableRowsResponse","additionalProperties":false}}}}},"requestBodies":{"createConversationBody":{"description":"Conversation data","content":{"application/json":{"schema":{"type":"object","properties":{"channel":{"type":"string","maxLength":200,"description":"Channel name"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Tags for the [Conversation](#schema_conversation)"},"integrationName":{"type":"string","maxLength":200,"description":"[DEPRECATED] To create a conversation from within a bot, call an action of the integration instead.","deprecated":true}},"required":["channel","tags"],"title":"createConversationBody","additionalProperties":false}}}},"getOrCreateConversationBody":{"description":"Conversation data","content":{"application/json":{"schema":{"type":"object","properties":{"channel":{"type":"string","maxLength":200,"description":"Channel name"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Tags for the [Conversation](#schema_conversation)"},"integrationName":{"type":"string","maxLength":200,"description":"[DEPRECATED] To create a conversation from within a bot, call an action of the integration instead.","deprecated":true}},"required":["channel","tags"],"title":"getOrCreateConversationBody","additionalProperties":false}}}},"updateConversationBody":{"description":"Conversation data","content":{"application/json":{"schema":{"type":"object","properties":{"currentTaskId":{"type":"string"},"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"Tags for the [Conversation](#schema_conversation)"}},"title":"updateConversationBody","additionalProperties":false}}}},"addParticipantBody":{"description":"Participant data","content":{"application/json":{"schema":{"type":"object","properties":{"userId":{"type":"string","minLength":28,"maxLength":36,"description":"User id"}},"required":["userId"],"title":"addParticipantBody","additionalProperties":false}}}},"createEventBody":{"description":"Event data","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","maxLength":200,"description":"Type of the [Event](#schema_event)."},"payload":{"type":"object","additionalProperties":true,"description":"Payload is the content of the event defined by the integration installed on your bot or one of the default events created by our API."},"schedule":{"type":"object","properties":{"dateTime":{"type":"string","maxLength":28,"minLength":24,"description":"When the [Event](#schema_event) will be sent, in the ISO 8601 format"},"delay":{"type":"number","description":"Delay in milliseconds before sending the [Event](#schema_event)"}},"description":"Schedule the Event to be sent at a specific time. Either dateTime or delay must be provided.","additionalProperties":false},"conversationId":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [Conversation](#schema_conversation) to link the event to."},"userId":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [User](#schema_user) to link the event to."},"messageId":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [Message](#schema_message) to link the event to."}},"required":["type","payload"],"title":"createEventBody","additionalProperties":false}}}},"createMessageBody":{"description":"Message data","content":{"application/json":{"schema":{"type":"object","properties":{"payload":{"type":"object","additionalProperties":true,"description":"Payload is the content type of the message. Accepted payload options: Text, Image, Choice, Dropdown, Card, Carousel, File, Audio, Video, Location"},"userId":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [User](#schema_user)"},"conversationId":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [Conversation](#schema_conversation)"},"type":{"type":"string","maxLength":200,"description":"Type of the [Message](#schema_message) represents the resource type that the message is related to"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Set of [Tags](/docs/developers/concepts/tags) that you can attach to a [Message](#schema_message). The set of [Tags](/docs/developers/concepts/tags) available on a [Message](#schema_message) is restricted by the list of [Tags](/docs/developers/concepts/tags) defined previously by the [Bot](#schema_bot). Individual keys can be unset by posting an empty value to them."},"schedule":{"type":"object","properties":{"dateTime":{"type":"string","maxLength":28,"minLength":24,"description":"When the [Message](#schema_message) will be sent, in the ISO 8601 format"},"delay":{"type":"number","description":"Delay in milliseconds before sending the [Message](#schema_message)"}},"description":"Schedule the Message to be sent at a specific time. Either dateTime or delay must be provided.","additionalProperties":false}},"required":["payload","userId","conversationId","type","tags"],"title":"createMessageBody","additionalProperties":false}}}},"getOrCreateMessageBody":{"description":"Message data","content":{"application/json":{"schema":{"type":"object","properties":{"payload":{"type":"object","additionalProperties":true,"description":"Payload is the content type of the message. Accepted payload options: Text, Image, Choice, Dropdown, Card, Carousel, File, Audio, Video, Location"},"userId":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [User](#schema_user)"},"conversationId":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the [Conversation](#schema_conversation)"},"type":{"type":"string","maxLength":200,"description":"Type of the [Message](#schema_message) represents the resource type that the message is related to"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Set of [Tags](/docs/developers/concepts/tags) that you can attach to a [Message](#schema_message). The set of [Tags](/docs/developers/concepts/tags) available on a [Message](#schema_message) is restricted by the list of [Tags](/docs/developers/concepts/tags) defined previously by the [Bot](#schema_bot). Individual keys can be unset by posting an empty value to them."},"schedule":{"type":"object","properties":{"dateTime":{"type":"string","maxLength":28,"minLength":24,"description":"When the [Message](#schema_message) will be sent, in the ISO 8601 format"},"delay":{"type":"number","description":"Delay in milliseconds before sending the [Message](#schema_message)"}},"description":"Schedule the Message to be sent at a specific time. Either dateTime or delay must be provided.","additionalProperties":false}},"required":["payload","userId","conversationId","type","tags"],"title":"getOrCreateMessageBody","additionalProperties":false}}}},"updateMessageBody":{"description":"Message data","content":{"application/json":{"schema":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"Set of [Tags](/docs/developers/concepts/tags) that you can attach to a [Conversation](#schema_conversation). The set of [Tags](/docs/developers/concepts/tags) available on a [Conversation](#schema_conversation) is restricted by the list of [Tags](/docs/developers/concepts/tags) defined previously by the [Bot](#schema_bot). Individual keys can be unset by posting an empty value to them."}},"required":["tags"],"title":"updateMessageBody","additionalProperties":false}}}},"createUserBody":{"description":"User data","content":{"application/json":{"schema":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Tags for the [User](#schema_user)"},"integrationName":{"type":"string","maxLength":200,"description":"[DEPRECATED] To create a [User](#schema_user) from within a bot, call an action of the integration instead.","deprecated":true},"name":{"type":"string","maxLength":200,"description":"Name of the user"},"pictureUrl":{"type":"string","maxLength":40000,"description":"URI of the user picture"}},"required":["tags"],"title":"createUserBody","additionalProperties":false}}}},"getOrCreateUserBody":{"description":"User data","content":{"application/json":{"schema":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Tags for the [User](#schema_user)"},"integrationName":{"type":"string","maxLength":200,"description":"[DEPRECATED] To create a [User](#schema_user) from within a bot, call an action of the integration instead.","deprecated":true},"name":{"type":"string","maxLength":200,"description":"Name of the user"},"pictureUrl":{"type":"string","maxLength":40000,"description":"URI of the user picture"}},"required":["tags"],"title":"getOrCreateUserBody","additionalProperties":false}}}},"updateUserBody":{"description":"User data","content":{"application/json":{"schema":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Tags for the [User](#schema_user)"},"name":{"type":"string","maxLength":200,"description":"Name of the user"},"pictureUrl":{"type":"string","maxLength":40000,"nullable":true,"description":"URI of the user picture"}},"title":"updateUserBody","additionalProperties":false}}}},"setStateExpiryBody":{"description":"State expiry","content":{"application/json":{"schema":{"type":"object","properties":{"expiry":{"type":"number","minimum":1,"maximum":2592000000,"nullable":true,"description":"Expiry of the [State](#schema_state) in milliseconds. The state will expire if it is idle for the configured value. By default, a state doesn't expire."}},"required":["expiry"],"title":"setStateExpiryBody","additionalProperties":false}}}},"setStateBody":{"description":"State content","content":{"application/json":{"schema":{"type":"object","properties":{"payload":{"type":"object","additionalProperties":true,"nullable":true,"description":"Payload is the content of the state defined by your bot."},"expiry":{"type":"number","minimum":1,"maximum":2592000000,"nullable":true,"description":"Expiry of the [State](#schema_state) in milliseconds. The state will expire if it is idle for the configured value. By default, a state doesn't expire."}},"required":["payload"],"title":"setStateBody","additionalProperties":false}}}},"getOrSetStateBody":{"description":"State content","content":{"application/json":{"schema":{"type":"object","properties":{"payload":{"type":"object","additionalProperties":true,"description":"Payload is the content of the state defined by your bot."},"expiry":{"type":"number","minimum":1,"maximum":2592000000,"nullable":true,"description":"Expiry of the [State](#schema_state) in milliseconds. The state will expire if it is idle for the configured value. By default, a state doesn't expire."}},"required":["payload"],"title":"getOrSetStateBody","additionalProperties":false}}}},"patchStateBody":{"description":"State content","content":{"application/json":{"schema":{"type":"object","properties":{"payload":{"type":"object","additionalProperties":true,"description":"Payload is the content of the state defined by your bot."}},"required":["payload"],"title":"patchStateBody","additionalProperties":false}}}},"callActionBody":{"description":"Action payload","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","maxLength":200,"description":"Type of the action"},"input":{"type":"object","additionalProperties":true,"description":"Input of the action"}},"required":["type","input"],"title":"callActionBody","additionalProperties":false}}}},"configureIntegrationBody":{"description":"Configuration of the integration","content":{"application/json":{"schema":{"type":"object","properties":{"identifier":{"type":"string","maxLength":200,"description":"Unique identifier of the integration that was installed on the bot"}},"required":["identifier"],"title":"configureIntegrationBody","additionalProperties":false}}}},"createTaskBody":{"description":"Task data","content":{"application/json":{"schema":{"type":"object","properties":{"title":{"type":"string","maxLength":2000,"description":"Title describing the task"},"description":{"type":"string","maxLength":20000,"description":"All the notes related to the execution of the current task"},"type":{"type":"string","maxLength":200,"description":"Type of the task"},"data":{"type":"object","additionalProperties":true,"description":"Content related to the task"},"parentTaskId":{"type":"string","description":"Parent task id is the parent task that created this task"},"conversationId":{"type":"string","description":"Conversation id related to this task"},"userId":{"type":"string","description":"Specific user related to this task"},"timeoutAt":{"type":"string","format":"date-time","description":"The timeout date where the task should be failed in the ISO 8601 format"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Tags for the [Task](#schema_task)"}},"required":["type","conversationId"],"title":"createTaskBody","additionalProperties":false}}}},"updateTaskBody":{"description":"Task data","content":{"application/json":{"schema":{"type":"object","properties":{"title":{"type":"string","description":"Title describing the task"},"description":{"type":"string","description":"All the notes related to the execution of the current task"},"data":{"type":"object","additionalProperties":true,"description":"Content related to the task"},"timeoutAt":{"type":"string","format":"date-time","description":"The timeout date where the task should be failed in the ISO 8601 format"},"status":{"type":"string","enum":["pending","in_progress","failed","completed","blocked","paused","timeout","cancelled"],"description":"Status of the task"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Tags for the [Task](#schema_task)"}},"title":"updateTaskBody","additionalProperties":false}}}},"createWorkflowBody":{"description":"Workflow data","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name of the workflow"},"input":{"type":"object","additionalProperties":true,"description":"Content related to the workflow"},"parentWorkflowId":{"type":"string","description":"Parent workflow id is the parent workflow that created this workflow"},"conversationId":{"type":"string","description":"Conversation id related to this workflow"},"userId":{"type":"string","description":"Specific user related to this workflow"},"timeoutAt":{"type":"string","format":"date-time","description":"The timeout date where the workflow should be failed in the ISO 8601 format"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Tags for the [Workflow](#schema_workflow)"},"status":{"type":"string","enum":["pending","in_progress"]},"eventId":{"type":"string","description":"Event id must be specified if the workflow is created with the status in_progress"}},"required":["name","status"],"title":"createWorkflowBody","additionalProperties":false}}}},"updateWorkflowBody":{"description":"Workflow data","content":{"application/json":{"schema":{"type":"object","properties":{"output":{"type":"object","additionalProperties":true,"description":"Content related to the workflow"},"timeoutAt":{"type":"string","format":"date-time","description":"The timeout date where the workflow should be failed in the ISO 8601 format"},"status":{"type":"string","enum":["completed","cancelled","listening","paused","failed","in_progress"],"description":"Status of the workflow"},"failureReason":{"type":"string","description":"Reason why the workflow failed"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Tags for the [Workflow](#schema_workflow)"},"userId":{"type":"string","description":"Specific user related to this workflow"},"eventId":{"type":"string","description":"Event id must be specified if the workflow is updated with the status in_progress"}},"title":"updateWorkflowBody","additionalProperties":false}}}},"getOrCreateWorkflowBody":{"description":"Workflow data","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name of the workflow"},"input":{"type":"object","additionalProperties":true,"description":"Content related to the workflow"},"parentWorkflowId":{"type":"string","description":"Parent workflow id is the parent workflow that created this workflow"},"conversationId":{"type":"string","description":"Conversation id related to this workflow"},"userId":{"type":"string","description":"Specific user related to this workflow"},"timeoutAt":{"type":"string","format":"date-time","description":"The timeout date where the workflow should be failed in the ISO 8601 format"},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":500},"description":"Tags for the [Workflow](#schema_workflow)"},"status":{"type":"string","enum":["pending","in_progress"]},"eventId":{"type":"string","description":"Event id must be specified if the workflow is created with the status in_progress"}},"required":["name","status"],"title":"getOrCreateWorkflowBody","additionalProperties":false}}}},"trackAnalyticsBody":{"description":"Add an event to the analytics","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","minLength":1,"maxLength":200},"count":{"type":"integer","minimum":1}},"required":["name","count"],"title":"trackAnalyticsBody","additionalProperties":false}}}},"runVrlBody":{"description":"VRL script","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"object","additionalProperties":true},"script":{"type":"string"}},"required":["data","script"],"title":"runVrlBody","additionalProperties":false}}}},"updateAccountBody":{"description":"Account Data","content":{"application/json":{"schema":{"type":"object","properties":{"displayName":{"type":"string","maxLength":100},"profilePicture":{"type":"string"},"refresh":{"type":"boolean"}},"title":"updateAccountBody","additionalProperties":false}}}},"createPersonalAccessTokenBody":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"note":{"type":"string","description":"Note to identify the PAT"}},"required":["note"],"title":"createPersonalAccessTokenBody","additionalProperties":false}}}},"setAccountPreferenceBody":{"description":"Preference value","content":{"application/json":{"schema":{"type":"object","properties":{"value":{}},"title":"setAccountPreferenceBody","additionalProperties":false}}}},"createBotBody":{"description":"Bot metadata","content":{"application/json":{"schema":{"type":"object","properties":{"states":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["conversation","user","bot","task"],"description":"Type of the [State](#schema_state) (`conversation`, `user`, `bot` or `task`)"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the [State](#schema_state) in the `JSON schema` format. This `JSON schema` is going to be used for validating the state data."},"expiry":{"type":"number","minimum":1,"description":"Expiry of the [State](#schema_state) in milliseconds. The state will expire if it is idle for the configured value. By default, a state doesn't expire."}},"required":["type","schema"],"additionalProperties":false},"description":"A mapping of states to their definition"},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the event"},"description":{"type":"string","maxLength":256,"description":"Description of the event"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Event Definition","additionalProperties":false},"description":"Events definition"},"recurringEvents":{"type":"object","additionalProperties":{"type":"object","properties":{"schedule":{"type":"object","properties":{"cron":{"type":"string","maxLength":200}},"required":["cron"],"additionalProperties":false},"type":{"type":"string","maxLength":200},"payload":{"type":"object","additionalProperties":true}},"required":["schedule","type","payload"],"additionalProperties":false}},"subscriptions":{"type":"object","properties":{"events":{"type":"object","additionalProperties":{"type":"object","additionalProperties":false},"nullable":true,"description":"Events that the bot is currently subscribed on (ex: \"slack:reactionAdded\"). If null, the bot is subscribed to all events."}},"required":["events"],"description":"Subscriptions of the bot","additionalProperties":false},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the action"},"description":{"type":"string","maxLength":256,"description":"Description of the action"},"billable":{"type":"boolean"},"cacheable":{"type":"boolean"},"input":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false},"output":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false}},"required":["input","output"],"description":"Action definition","additionalProperties":false},"description":"Actions definition"},"configuration":{"type":"object","properties":{"data":{"type":"object","additionalProperties":true,"description":"Configuration data"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."}},"additionalProperties":false},"user":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"additionalProperties":false},"conversation":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"additionalProperties":false},"message":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"additionalProperties":false},"code":{"type":"string","description":"JavaScript code of the bot"},"name":{"type":"string","minLength":1,"description":"Optional name for the bot, if not provided will be auto-generated"},"medias":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string"},"name":{"type":"string"}},"required":["url","name"]},"description":"Media files associated with the [Bot](#schema_bot)"},"url":{"type":"string","description":"URL of the [Bot](#schema_bot); Only available for dev bots"},"dev":{"type":"boolean","description":"Indicates if the [Bot](#schema_bot) is a development bot; Development bots run locally and can install dev integrations"}},"title":"createBotBody","additionalProperties":false}}}},"updateBotBody":{"description":"Bot metadata","content":{"application/json":{"schema":{"type":"object","properties":{"url":{"type":"string","description":"URL of the [Bot](#schema_bot); Only available for dev bots"},"authentication":{"type":"string","enum":["iam"],"description":"Type of the [Bot](#schema_bot) authentication (`iam`)"},"configuration":{"type":"object","properties":{"data":{"type":"object","additionalProperties":true,"description":"Configuration data"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."}},"additionalProperties":false},"blocked":{"type":"boolean"},"alwaysAlive":{"type":"boolean","description":"Indicates if the [Bot](#schema_bot) should be in always alive mode"},"user":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","nullable":true,"additionalProperties":false}}},"additionalProperties":false},"message":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","nullable":true,"additionalProperties":false}}},"additionalProperties":false},"conversation":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","nullable":true,"additionalProperties":false}}},"additionalProperties":false},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the event"},"description":{"type":"string","maxLength":256,"description":"Description of the event"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Event Definition","nullable":true,"additionalProperties":false}},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the action"},"description":{"type":"string","maxLength":256,"description":"Description of the action"},"billable":{"type":"boolean"},"cacheable":{"type":"boolean"},"input":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false},"output":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false}},"required":["input","output"],"description":"Action definition","nullable":true,"additionalProperties":false}},"states":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["conversation","user","bot","task"],"description":"Type of the [State](#schema_state) (`conversation`, `user`, `bot` or `task`)"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the [State](#schema_state) in the `JSON schema` format. This `JSON schema` is going to be used for validating the state data."},"expiry":{"type":"number","minimum":1,"description":"Expiry of the [State](#schema_state) in milliseconds. The state will expire if it is idle for the configured value. By default, a state doesn't expire."}},"required":["type","schema"],"nullable":true,"additionalProperties":false}},"recurringEvents":{"type":"object","additionalProperties":{"type":"object","properties":{"schedule":{"type":"object","properties":{"cron":{"type":"string","maxLength":200}},"required":["cron"],"additionalProperties":false},"type":{"type":"string","maxLength":200},"payload":{"type":"object","additionalProperties":true}},"required":["schedule","type","payload"],"nullable":true,"additionalProperties":false}},"integrations":{"type":"object","additionalProperties":{"type":"object","properties":{"enabled":{"type":"boolean"},"configurationType":{"type":"string","nullable":true,"description":"Integration's configuration type. Set to default if null."},"configuration":{"type":"object","additionalProperties":true}},"nullable":true,"additionalProperties":false}},"subscriptions":{"type":"object","properties":{"events":{"type":"object","additionalProperties":{"type":"object","nullable":true,"additionalProperties":false},"nullable":true}},"required":["events"],"additionalProperties":false},"code":{"type":"string","description":"JavaScript code of the bot"},"name":{"type":"string","minLength":1,"description":"Optional name for the bot, if not provided will be auto-generated"},"medias":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string"},"name":{"type":"string"}},"required":["url","name"]},"description":"Media files associated with the [Bot](#schema_bot)"}},"title":"updateBotBody","additionalProperties":false}}}},"transferBotBody":{"description":"Bot transfer request","content":{"application/json":{"schema":{"type":"object","properties":{"targetWorkspaceId":{"type":"string","minLength":28,"description":"The ID of the workspace you want to transfer the bot to."}},"required":["targetWorkspaceId"],"title":"transferBotBody","additionalProperties":false}}}},"createBotVersionBody":{"description":"Version metadata","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"}},"required":["name"],"title":"createBotVersionBody","additionalProperties":false}}}},"deployBotVersionBody":{"description":"Version metadata","content":{"application/json":{"schema":{"type":"object","properties":{"versionId":{"type":"string"}},"required":["versionId"],"title":"deployBotVersionBody","additionalProperties":false}}}},"chargeWorkspaceUnpaidInvoicesBody":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"invoiceIds":{"type":"array","items":{"type":"string"},"minItems":1}},"title":"chargeWorkspaceUnpaidInvoicesBody","additionalProperties":false}}}},"createWorkspaceBody":{"description":"Workspace metadata","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"}},"required":["name"],"title":"createWorkspaceBody","additionalProperties":false}}}},"updateWorkspaceBody":{"description":"Workspace metadata","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","minLength":1,"maxLength":64},"spendingLimit":{"type":"number","minimum":5,"maximum":1000},"about":{"type":"string"},"profilePicture":{"type":"string"},"contactEmail":{"type":"string"},"website":{"type":"string"},"socialAccounts":{"type":"array","items":{"type":"string"},"maxItems":5},"isPublic":{"type":"boolean"},"handle":{"type":"string","minLength":1,"maxLength":64,"pattern":"^[0-9a-z][a-z0-9-_]+[0-9a-z]$"}},"additionalProperties":false,"title":"updateWorkspaceBody"}}}},"checkHandleAvailabilityBody":{"description":"Workspace handle availability","content":{"application/json":{"schema":{"type":"object","properties":{"handle":{"type":"string","minLength":1,"maxLength":50,"pattern":"^[a-z0-9-_]+$"}},"required":["handle"],"title":"checkHandleAvailabilityBody","additionalProperties":false}}}},"createWorkspaceMemberBody":{"description":"Workspace member metadata","content":{"application/json":{"schema":{"type":"object","properties":{"email":{"type":"string","format":"email"},"role":{"type":"string","enum":["viewer","billing","developer","manager","administrator","owner"]}},"required":["email","role"],"title":"createWorkspaceMemberBody","additionalProperties":false}}}},"updateWorkspaceMemberBody":{"description":"Workspace member metadata","content":{"application/json":{"schema":{"type":"object","properties":{"role":{"type":"string","enum":["viewer","billing","developer","manager","administrator","owner"]}},"title":"updateWorkspaceMemberBody","additionalProperties":false}}}},"createIntegrationApiKeyBody":{"description":"IAK metadata","content":{"application/json":{"schema":{"type":"object","properties":{"integrationId":{"type":"string"},"note":{"type":"string"}},"required":["integrationId"],"title":"createIntegrationApiKeyBody","additionalProperties":false}}}},"createIntegrationBody":{"description":"Integration","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","maxLength":200,"description":"Name of the [Integration](#schema_integration)"},"version":{"type":"string","maxLength":200,"description":"Version of the [Integration](#schema_integration)"},"configuration":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the configuration"},"description":{"type":"string","maxLength":256,"description":"Description of the configuration"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."},"identifier":{"type":"object","properties":{"required":{"type":"boolean"},"linkTemplateScript":{"type":"string","maxLength":2000}},"additionalProperties":false}},"description":"Default configuration definition of the integration","additionalProperties":false},"configurations":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the configuration"},"description":{"type":"string","maxLength":256,"description":"Description of the configuration"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."},"identifier":{"type":"object","properties":{"required":{"type":"boolean"},"linkTemplateScript":{"type":"string","maxLength":2000}},"additionalProperties":false}},"additionalProperties":false},"description":"Additional configuration definitions of the integration"},"states":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["conversation","user","integration"],"description":"Type of the [State](#schema_state) (`conversation`, `user` or `integration`)"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the [State](#schema_state) in the `JSON schema` format. This `JSON schema` is going to be used for validating the state data."}},"required":["type","schema"],"description":"State definition","additionalProperties":false}},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the event"},"description":{"type":"string","maxLength":256,"description":"Description of the event"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Event Definition","additionalProperties":false}},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the action"},"description":{"type":"string","maxLength":256,"description":"Description of the action"},"billable":{"type":"boolean"},"cacheable":{"type":"boolean"},"input":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false},"output":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false}},"required":["input","output"],"description":"Action definition","additionalProperties":false}},"entities":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the entity"},"description":{"type":"string","maxLength":256,"description":"Description of the entity"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Entity definition","additionalProperties":false}},"identifier":{"type":"object","properties":{"fallbackHandlerScript":{"type":"string","maxLength":2000},"extractScript":{"type":"string","maxLength":2000}},"additionalProperties":false},"channels":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the channel"},"description":{"type":"string","maxLength":256,"description":"Description of the channel"},"messages":{"type":"object","additionalProperties":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Message definition","additionalProperties":false}},"conversation":{"type":"object","properties":{"creation":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Enable conversation creation"},"requiredTags":{"type":"array","items":{"type":"string"},"description":"The list of tags that are required to be specified when calling the API directly to create a conversation."}},"required":["enabled","requiredTags"],"description":"The conversation creation setting determines how to create a conversation through the API directly. The integration will have to implement the `createConversation` functionality to support this setting.","additionalProperties":false},"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"additionalProperties":false},"message":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"additionalProperties":false}},"required":["messages"],"additionalProperties":false}},"user":{"type":"object","properties":{"creation":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Enable user creation"},"requiredTags":{"type":"array","items":{"type":"string"},"description":"The list of tags that are required to be specified when calling the API directly to create a user."}},"required":["enabled","requiredTags"],"description":"The user creation setting determines how to create a user through the API directly. The integration will have to implement the `createUser` functionality to support this setting.","additionalProperties":false},"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","additionalProperties":false}}},"additionalProperties":false},"interfaces":{"type":"object","additionalProperties":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the interface"},"entities":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}},"channels":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}}},"required":["id"],"additionalProperties":false}},"secrets":{"type":"object","additionalProperties":{"type":"string"},"description":"Secrets are integration-wide values available in the code via environment variables formatted with a SECRET_ prefix followed by your secret name. A secret name must respect SCREAMING_SNAKE casing."},"code":{"type":"string","description":"JavaScript code of the integration"},"url":{"type":"string","description":"URL of the integration"},"dev":{"type":"boolean","description":"Indicates if the integration is a development integration; Dev integrations run locally"},"icon":{"type":"string","description":"Base64 encoded svg of the integration icon. This icon is global to the integration each versions will be updated when this changes."},"readme":{"type":"string","description":"Base64 encoded markdown of the integration readme. The readme is specific to each integration versions."},"title":{"type":"string","minLength":1,"maxLength":64,"description":"Title of the integration. This is the name that will be displayed in the UI"},"description":{"type":"string","maxLength":256,"description":"Description of the integration. This is the description that will be displayed in the UI"},"public":{"type":"boolean","description":"Idicates if the integration is public. Public integrations are available to all and cannot be updated without creating a new version."}},"required":["name","version"],"title":"createIntegrationBody","additionalProperties":false}}}},"updateIntegrationBody":{"description":"Integration","content":{"application/json":{"schema":{"type":"object","properties":{"configuration":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the configuration"},"description":{"type":"string","maxLength":256,"description":"Description of the configuration"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."},"identifier":{"type":"object","properties":{"linkTemplateScript":{"type":"string","maxLength":2000,"nullable":true},"required":{"type":"boolean"}},"additionalProperties":false}},"description":"Default configuration definition of the integration","additionalProperties":false},"configurations":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the configuration"},"description":{"type":"string","maxLength":256,"description":"Description of the configuration"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the configuration in the `JSON schema` format. The configuration data is validated against this `JSON schema`."},"identifier":{"type":"object","properties":{"linkTemplateScript":{"type":"string","maxLength":2000,"nullable":true},"required":{"type":"boolean"}},"additionalProperties":false}},"nullable":true,"additionalProperties":false},"description":"Additional configuration definitions of the integration"},"channels":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the channel"},"description":{"type":"string","maxLength":256,"description":"Description of the channel"},"messages":{"type":"object","additionalProperties":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Message definition","nullable":true,"additionalProperties":false}},"conversation":{"type":"object","properties":{"creation":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Enable conversation creation"},"requiredTags":{"type":"array","items":{"type":"string"},"description":"The list of tags that are required to be specified when calling the API directly to create a conversation."}},"required":["enabled","requiredTags"],"description":"The conversation creation setting determines how to create a conversation through the API directly. The integration will have to implement the `createConversation` functionality to support this setting.","additionalProperties":false},"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","nullable":true,"additionalProperties":false}}},"additionalProperties":false},"message":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","nullable":true,"additionalProperties":false}}},"additionalProperties":false}},"nullable":true,"additionalProperties":false}},"identifier":{"type":"object","properties":{"extractScript":{"type":"string","maxLength":2000,"nullable":true},"fallbackHandlerScript":{"type":"string","maxLength":2000,"nullable":true}},"additionalProperties":false},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the action"},"description":{"type":"string","maxLength":256,"description":"Description of the action"},"billable":{"type":"boolean"},"cacheable":{"type":"boolean"},"input":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false},"output":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false}},"required":["input","output"],"description":"Action definition","nullable":true,"additionalProperties":false}},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the event"},"description":{"type":"string","maxLength":256,"description":"Description of the event"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Event Definition","nullable":true,"additionalProperties":false}},"states":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["conversation","user","integration"],"description":"Type of the [State](#schema_state) (`conversation`, `user` or `integration`)"},"schema":{"type":"object","additionalProperties":true,"description":"Schema of the [State](#schema_state) in the `JSON schema` format. This `JSON schema` is going to be used for validating the state data."}},"required":["type","schema"],"description":"State definition","nullable":true,"additionalProperties":false}},"user":{"type":"object","properties":{"creation":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Enable user creation"},"requiredTags":{"type":"array","items":{"type":"string"},"description":"The list of tags that are required to be specified when calling the API directly to create a user."}},"required":["enabled","requiredTags"],"description":"The user creation setting determines how to create a user through the API directly. The integration will have to implement the `createUser` functionality to support this setting.","additionalProperties":false},"tags":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the tag"},"description":{"type":"string","maxLength":256,"description":"Description of the tag"}},"description":"Definition of a tag that can be provided on the object","nullable":true,"additionalProperties":false}}},"additionalProperties":false},"entities":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the entity"},"description":{"type":"string","maxLength":256,"description":"Description of the entity"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Entity definition","nullable":true,"additionalProperties":false}},"interfaces":{"type":"object","additionalProperties":{"type":"object","properties":{"id":{"type":"string","minLength":28,"maxLength":36,"description":"ID of the interface"},"entities":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}},"channels":{"type":"object","additionalProperties":{"type":"object","properties":{"name":{"type":"string","maxLength":200}},"required":["name"],"additionalProperties":false}}},"required":["id"],"nullable":true,"additionalProperties":false}},"secrets":{"type":"object","additionalProperties":{"type":"string","nullable":true},"description":"Secrets are integration-wide values available in the code via environment variables formatted with a SECRET_ prefix followed by your secret name. A secret name must respect SCREAMING_SNAKE casing."},"code":{"type":"string","description":"JavaScript code of the integration"},"icon":{"type":"string","description":"Base64 encoded svg of the integration icon. This icon is global to the integration each versions will be updated when this changes."},"readme":{"type":"string","description":"Base64 encoded markdown of the integration readme. The readme is specific to each integration versions."},"title":{"type":"string","minLength":1,"maxLength":64,"description":"Title of the integration. This is the name that will be displayed in the UI"},"description":{"type":"string","maxLength":256,"description":"Description of the integration. This is the description that will be displayed in the UI"},"url":{"type":"string","description":"URL of the integration","nullable":true},"public":{"type":"boolean","description":"Idicates if the integration is public. Public integrations are available to all and cannot be updated without creating a new version."}},"title":"updateIntegrationBody","additionalProperties":false}}}},"requestIntegrationVerificationBody":{"description":"Integration","content":{"application/json":{"schema":{"type":"object","properties":{"integrationId":{"type":"string"}},"required":["integrationId"],"title":"requestIntegrationVerificationBody","additionalProperties":false}}}},"createInterfaceBody":{"description":"Interface to create","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","maxLength":200,"description":"Name of the [Interface](#schema_interface)"},"version":{"type":"string","maxLength":200,"description":"Version of the [Interface](#schema_interface)"},"entities":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the entity"},"description":{"type":"string","maxLength":256,"description":"Description of the entity"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Entity definition","additionalProperties":false}},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the event"},"description":{"type":"string","maxLength":256,"description":"Description of the event"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Event Definition","additionalProperties":false}},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the action"},"description":{"type":"string","maxLength":256,"description":"Description of the action"},"billable":{"type":"boolean"},"cacheable":{"type":"boolean"},"input":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false},"output":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false}},"required":["input","output"],"description":"Action definition","additionalProperties":false}},"channels":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the channel"},"description":{"type":"string","maxLength":256,"description":"Description of the channel"},"messages":{"type":"object","additionalProperties":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Message definition","additionalProperties":false}}},"required":["messages"],"additionalProperties":false}},"nameTemplate":{"type":"object","properties":{"script":{"type":"string","maxLength":2000},"language":{"type":"string","maxLength":200}},"required":["script","language"],"description":"Template string optionaly used at build time by integrations implementing this interface to pick a name for actions and events.","additionalProperties":false}},"required":["name","version"],"title":"createInterfaceBody","additionalProperties":false}}}},"updateInterfaceBody":{"description":"Interface to update","content":{"application/json":{"schema":{"type":"object","properties":{"entities":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the entity"},"description":{"type":"string","maxLength":256,"description":"Description of the entity"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Entity definition","nullable":true,"additionalProperties":false}},"events":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the event"},"description":{"type":"string","maxLength":256,"description":"Description of the event"},"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Event Definition","nullable":true,"additionalProperties":false}},"actions":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the action"},"description":{"type":"string","maxLength":256,"description":"Description of the action"},"billable":{"type":"boolean"},"cacheable":{"type":"boolean"},"input":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false},"output":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"additionalProperties":false}},"required":["input","output"],"description":"Action definition","nullable":true,"additionalProperties":false}},"channels":{"type":"object","additionalProperties":{"type":"object","properties":{"title":{"type":"string","maxLength":64,"description":"Title of the channel"},"description":{"type":"string","maxLength":256,"description":"Description of the channel"},"messages":{"type":"object","additionalProperties":{"type":"object","properties":{"schema":{"type":"object","additionalProperties":true}},"required":["schema"],"description":"Message definition","nullable":true,"additionalProperties":false}}},"nullable":true,"additionalProperties":false}},"nameTemplate":{"type":"object","properties":{"script":{"type":"string","maxLength":2000},"language":{"type":"string","maxLength":200}},"required":["script","language"],"description":"Template string optionaly used at build time by integrations implementing this interface to pick a name for actions and events.","nullable":true,"additionalProperties":false}},"title":"updateInterfaceBody","additionalProperties":false}}}},"changeAISpendQuotaBody":{"description":"New AI Spend quota","content":{"application/json":{"schema":{"type":"object","properties":{"monthlySpendingLimit":{"type":"number"}},"required":["monthlySpendingLimit"],"title":"changeAISpendQuotaBody","additionalProperties":false}}}},"introspectBody":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"botId":{"type":"string"}},"required":["botId"],"title":"introspectBody","additionalProperties":false}}}},"upsertFileBody":{"description":"Properties of the file to create or update.","content":{"application/json":{"schema":{"type":"object","properties":{"key":{"type":"string","description":"Unique key for the file. Must be unique across the bot (and the integration, when applicable)."},"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":1000},"description":"File tags as an object of key-value pairs. Tag values should be of `string` (text) type."},"size":{"type":"number","description":"File size in bytes. This will count against your File Storage quota. If the `index` parameter is set to `true`, this will also count against your Vector DB Storage quota."},"index":{"default":false,"type":"boolean","description":"Set to a value of 'true' to index the file in vector storage. Only certain file formats are currently supported for indexing. Note that if a file is indexed, it will count towards both the Vector DB Storage quota and the File Storage quota of the workspace."},"accessPolicies":{"type":"array","items":{"type":"string","enum":["public_content","integrations"]},"description":"File access policies. Add \"public_content\" to allow public access to the file content. Add \"integrations\" to allow read, search and list operations for any integration installed in the bot."},"contentType":{"type":"string","description":"File content type. If omitted, the content type will be inferred from the file extension (if any) specified in `key`. If a content type cannot be inferred, the default is \"application/octet-stream\"."},"expiresAt":{"type":"string","format":"date-time","description":"Expiry timestamp in ISO 8601 format with UTC timezone. After expiry, the File will be deleted. Must be in the future. Cannot be more than 90 days from now. The value up to minutes is considered. Seconds and milliseconds are ignored."},"publicContentImmediatelyAccessible":{"type":"boolean","description":"Use when your file has \"public_content\" in its access policy and you need the file\\'s content to be immediately accessible through its URL after the file has been uploaded without having to wait for the upload to be processed by our system.\n\nIf set to `true`, the `x-amz-tagging` HTTP header with a value of `public=true` will need to be sent in the HTTP PUT request to the `uploadUrl` in order for the upload request to work."}},"required":["key","size"],"title":"upsertFileBody","additionalProperties":false}}}},"updateFileMetadataBody":{"description":"File metadata to update.","content":{"application/json":{"schema":{"type":"object","properties":{"tags":{"type":"object","additionalProperties":{"type":"string","maxLength":1000,"nullable":true},"description":"The file tags to update as an object of key-value pairs with `string` (text) values. Omit to keep existing tags intact. Any existing tags not included will be preserved. New tags will be added. To delete a tag, set its value to `null`."},"accessPolicies":{"type":"array","items":{"type":"string","enum":["integrations","public_content"]},"description":"New access policies to set for the file. Omit to keep existing policies intact."},"expiresAt":{"type":"string","format":"date-time","description":"Expiry timestamp in ISO 8601 format with UTC timezone. After expiry, the File will be deleted. Must be in the future. Cannot be more than 90 days from now. The value up to minutes is considered. Seconds and milliseconds are ignored. Omit to keep the existing expiry intact. Set to `null` to remove the expiry.","nullable":true}},"title":"updateFileMetadataBody","additionalProperties":false}}}},"getOrCreateTableBody":{"description":"Schema defining the structure of the table","content":{"application/json":{"schema":{"type":"object","properties":{"factor":{"default":1,"type":"number","minimum":1,"maximum":30,"description":"The 'factor' multiplies the row's data storage limit by 4KB and its quota count, but can only be set at table creation and not modified later. For instance, a factor of 2 increases storage to 8KB but counts as 2 rows in your quota. The default factor is 1."},"frozen":{"type":"boolean","description":"A table designated as \"frozen\" is immutable in terms of its name and schema structure; modifications to its schema or a renaming operation are not permitted. The only action that can be taken on such a table is deletion. The schema established at the time of creation is locked in as the final structure. To implement any changes, the table must be duplicated with the desired alterations."},"schema":{"type":"object","additionalProperties":true,"description":"Provide an object or a JSON schema to define the columns of the table. A maximum of 20 keys in the object/schema is allowed."},"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"Optional tags to help organize your tables. These should be passed here as an object representing key/value pairs."},"isComputeEnabled":{"type":"boolean","description":"Indicates if the table is enabled for computation."}},"required":["schema"],"title":"getOrCreateTableBody","additionalProperties":false}}}},"createTableBody":{"description":"Schema defining the structure of the new table","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"description":"Required. This name is used to identify your table.","type":"string","minLength":1},"factor":{"default":1,"type":"number","minimum":1,"maximum":30,"description":"The 'factor' multiplies the row's data storage limit by 4KB and its quota count, but can only be set at table creation and not modified later. For instance, a factor of 2 increases storage to 8KB but counts as 2 rows in your quota. The default factor is 1."},"frozen":{"type":"boolean","description":"A table designated as \"frozen\" is immutable in terms of its name and schema structure; modifications to its schema or a renaming operation are not permitted. The only action that can be taken on such a table is deletion. The schema established at the time of creation is locked in as the final structure. To implement any changes, the table must be duplicated with the desired alterations."},"schema":{"type":"object","additionalProperties":true,"description":"Provide an object or a JSON schema to define the columns of the table. A maximum of 20 keys in the object/schema is allowed."},"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"Optional tags to help organize your tables. These should be passed here as an object representing key/value pairs."},"isComputeEnabled":{"type":"boolean","description":"Indicates if the table is enabled for computation."}},"required":["name","schema"],"title":"createTableBody","additionalProperties":false}}}},"duplicateTableBody":{"description":"Parameters for the duplication operation.","content":{"application/json":{"schema":{"type":"object","properties":{"tableName":{"type":"string"},"schemaOnly":{"type":"boolean","description":"Only duplicate the schema, not the content"},"factor":{"type":"number","description":"Use a different factor for the table. Leave empty to use the same as the duplicated table."}},"title":"duplicateTableBody","additionalProperties":false}}}},"updateTableBody":{"description":"The updated schema/name of the table.","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"description":"Required. This name is used to identify your table.","type":"string","minLength":1},"frozen":{"type":"boolean","description":"A table designated as \"frozen\" is immutable in terms of its name and schema structure; modifications to its schema or a renaming operation are not permitted. The only action that can be taken on such a table is deletion. The schema established at the time of creation is locked in as the final structure. To implement any changes, the table must be duplicated with the desired alterations."},"schema":{"type":"object","additionalProperties":true,"description":"Provide an object or a JSON schema to define the columns of the table. A maximum of 20 keys in the object/schema is allowed."},"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"Optional tags to help organize your tables. These should be passed here as an object representing key/value pairs."},"isComputeEnabled":{"type":"boolean","description":"Indicates if the table is enabled for computation."}},"title":"updateTableBody","additionalProperties":false}}}},"renameTableColumnBody":{"description":"Details of the column to be renamed, including its current name and the desired new name.","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"The existing name of the column."},"newName":{"description":"The new name to assign to the column.","type":"string","minLength":1,"maxLength":30}},"required":["name","newName"],"title":"renameTableColumnBody","additionalProperties":false}}}},"findTableRowsBody":{"description":"The search criteria and filters to apply when searching for rows. This includes conditions, search terms, and pagination options.","content":{"application/json":{"schema":{"type":"object","properties":{"limit":{"default":100,"type":"integer","minimum":1,"maximum":1000,"description":"Limit for pagination, specifying the maximum number of rows to return."},"offset":{"default":0,"type":"integer","minimum":0,"description":"Offset for pagination, specifying where to start returning rows from."},"filter":{"type":"object","additionalProperties":true,"description":"Provide a mongodb-like filter to apply to the query. Example: \\{ \"name\": \\{ \"$eq\": \"John\" \\} \\}"},"group":{"type":"object","additionalProperties":true,"description":"Group the rows by a specific column and apply aggregations to them. Allowed values: key, avg, max, min, sum, count. Example: \\{ \"someId\": \"key\", \"orders\": [\"sum\", \"avg\"] \\}"},"search":{"type":"string","maxLength":1024,"description":"Search term to apply to the row search. When using this parameter, some rows which doesn't match the search term will be returned, use the similarity field to know how much the row matches the search term. "},"orderBy":{"default":"id","type":"string","description":"Specifies the column by which to order the results. By default it is ordered by id. Build-in columns: id, createdAt, updatedAt"},"orderDirection":{"default":"asc","type":"string","enum":["asc","desc"],"description":"Specifies the direction of sorting, either ascending or descending."}},"title":"findTableRowsBody","additionalProperties":false}}}},"createTableRowsBody":{"description":"A batch of new rows to insert into the table. Each row must adhere to the table’s schema. A maximum of 1000 rows can be inserted in a single request.","content":{"application/json":{"schema":{"type":"object","properties":{"rows":{"type":"array","items":{"type":"object","properties":{},"additionalProperties":true},"minItems":1,"maxItems":1000},"waitComputed":{"type":"boolean","description":"Ensure computed columns are fully processed before returning the result. This is applicable only when the number of rows involved is fewer than 1."}},"required":["rows"],"title":"createTableRowsBody","additionalProperties":false}}}},"deleteTableRowsBody":{"description":"Identifiers of the rows to be deleted.","content":{"application/json":{"schema":{"type":"object","properties":{"ids":{"type":"array","items":{"type":"number"},"maxItems":1000},"filter":{"type":"object","additionalProperties":true,"description":"Filter to apply when deleting rows. Example: \\{ \"name\": \\{ \"$eq\": \"John\" \\} \\}"},"deleteAllRows":{"type":"boolean","description":"Flag to delete all rows. Use with caution as this action is irreversible."}},"title":"deleteTableRowsBody","additionalProperties":false}}}},"updateTableRowsBody":{"description":"Data for rows to update, including IDs. Errors affect only specific rows, not the entire batch.","content":{"application/json":{"schema":{"type":"object","properties":{"rows":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number"}},"required":["id"],"additionalProperties":true},"minItems":1,"maxItems":1000,"description":"Rows with updated data, identified by ID."},"waitComputed":{"type":"boolean","description":"Ensure computed columns are fully processed before returning the result. This is applicable only when the number of rows involved is fewer than 1."}},"required":["rows"],"title":"updateTableRowsBody","additionalProperties":false}}}},"upsertTableRowsBody":{"description":"Rows for insertion or update, with a key column to determine action. Supports partial successes.","content":{"application/json":{"schema":{"type":"object","properties":{"rows":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number"}},"additionalProperties":true},"minItems":1,"maxItems":1000},"keyColumn":{"default":"id","type":"string","minLength":1,"maxLength":30,"description":"Determines if a row is inserted or updated. Defaults to \"id\"."},"waitComputed":{"type":"boolean","description":"Ensure computed columns are fully processed before returning the result. This is applicable only when the number of rows involved is fewer than 1."}},"required":["rows"],"title":"upsertTableRowsBody","additionalProperties":false}}}}},"parameters":{}}}