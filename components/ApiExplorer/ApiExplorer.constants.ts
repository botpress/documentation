export const CLIENT_LIB_SOURCE = `declare class Client {
    private _innerClient;
    constructor(configuration?: Configuration, basePath?: string, axiosInstance?: AxiosInstance);
    createConversation: (createConversationBody: CreateConversationProps) => Promise<import("./api").CreateConversationResponse>;
    getConversation: (props: GetConversationProps) => Promise<import("./api").GetConversationResponse>;
    listConversations: (props: ListConversationsProps) => Promise<import("./api").ListConversationsResponse>;
    getOrCreateConversation: (getOrCreateConversationBody: GetOrCreateConversationProps) => Promise<import("./api").GetOrCreateConversationResponse>;
    updateConversation: ({ id, ...updateConversationBody }: UpdateConversationProps) => Promise<import("./api").UpdateConversationResponse>;
    deleteConversation: (props: DeleteConversationProps) => Promise<object>;
    createEvent: (createEventBody: CreateEventProps) => Promise<import("./api").CreateEventResponse>;
    getEvent: (props: GetEventProps) => Promise<import("./api").GetEventResponse>;
    listEvents: (props: ListEventsProps) => Promise<import("./api").ListEventsResponse>;
    createMessage: (createMessageBody: CreateMessageProps) => Promise<import("./api").CreateMessageResponse>;
    getOrCreateMessage: (getOrCreateMessageBody: GetOrCreateMessageProps) => Promise<import("./api").GetOrCreateMessageResponse>;
    getMessage: (props: GetMessageProps) => Promise<import("./api").GetMessageResponse>;
    updateMessage: ({ id, ...updateMessageBody }: UpdateMessageProps) => Promise<import("./api").UpdateMessageResponse>;
    listMessages: (props: ListMessagesProps) => Promise<import("./api").ListMessagesResponse>;
    deleteMessage: (props: DeleteMessageProps) => Promise<object>;
    createUser: (createUserBody: CreateUserProps) => Promise<import("./api").CreateUserResponse>;
    getUser: (props: GetUserProps) => Promise<import("./api").GetUserResponse>;
    listUsers: (props: ListUsersProps) => Promise<import("./api").ListUsersResponse>;
    getOrCreateUser: (getOrCreateUserBody: GetOrCreateUserProps) => Promise<import("./api").GetOrCreateUserResponse>;
    updateUser: ({ id, ...updateUserBody }: UpdateUserProps) => Promise<import("./api").UpdateUserResponse>;
    deleteUser: (props: DeleteUserProps) => Promise<object>;
    getState: (props: GetStateProps) => Promise<import("./api").GetStateResponse>;
    setState: ({ type, id, name, ...setStateBody }: SetStateProps) => Promise<import("./api").SetStateResponse>;
    patchState: ({ type, id, name, ...patchStateBody }: PatchStateProps) => Promise<import("./api").PatchStateResponse>;
    callAction: (callActionBody: CallActionProps) => Promise<import("./api").CallActionResponse>;
    configureIntegration: (configureIntegrationBody: ConfigureIntegrationProps) => Promise<object>;
    listPublicIntegrations: (props: ListPublicIntegrationsProps) => Promise<import("./api").ListPublicIntegrationsResponse>;
    getPublicIntegrationById: (props: GetPublicIntegrationByIdProps) => Promise<import("./api").GetPublicIntegrationByIdResponse>;
    getPublicIntegration: (props: GetPublicIntegrationProps) => Promise<import("./api").GetPublicIntegrationResponse>;
    createBot: (createBotBody: CreateBotProps) => Promise<import("./api").CreateBotResponse>;
    updateBot: ({ id, ...updateBotBody }: UpdateBotProps) => Promise<import("./api").UpdateBotResponse>;
    transferBot: ({ id, ...transferBotBody }: TransferBotProps) => Promise<object>;
    listBots: (props: ListBotsProps) => Promise<import("./api").ListBotsResponse>;
    getBot: (props: GetBotProps) => Promise<import("./api").GetBotResponse>;
    deleteBot: (props: DeleteBotProps) => Promise<object>;
    getBotLogs: (props: GetBotLogsProps) => Promise<import("./api").GetBotLogsResponse>;
    getBotWebchat: (props: GetBotWebchatProps) => Promise<import("./api").GetBotWebchatResponse>;
    getBotAnalytics: (props: GetBotAnalyticsProps) => Promise<import("./api").GetBotAnalyticsResponse>;
    createWorkspace: (createWorkspaceBody: CreateWorkspaceProps) => Promise<import("./api").CreateWorkspaceResponse>;
    getWorkspace: (props: GetWorkspaceProps) => Promise<import("./api").GetWorkspaceResponse>;
    updateWorkspace: ({ id, ...updateWorkspaceBody }: UpdateWorkspaceProps) => Promise<import("./api").UpdateWorkspaceResponse1>;
    listWorkspaces: (props: ListWorkspacesProps) => Promise<import("./api").ListWorkspacesResponse>;
    changeWorkspacePlan: ({ id, ...changeWorkspacePlanBody }: ChangeWorkspacePlanProps) => Promise<import("./api").ChangeWorkspacePlanResponse>;
    deleteWorkspace: (props: DeleteWorkspaceProps) => Promise<object>;
    createIntegration: (createIntegrationBody: CreateIntegrationProps) => Promise<import("./api").CreateIntegrationResponse>;
    updateIntegration: ({ id, ...updateIntegrationBody }: UpdateIntegrationProps) => Promise<import("./api").UpdateIntegrationResponse>;
    listIntegrations: (props: ListIntegrationsProps) => Promise<import("./api").ListIntegrationsResponse>;
    getIntegration: (props: GetIntegrationProps) => Promise<import("./api").GetIntegrationResponse>;
    getIntegrationLogs: (props: GetIntegrationLogsProps) => Promise<import("./api").GetIntegrationLogsResponse>;
    getIntegrationByName: (props: GetIntegrationByNameProps) => Promise<import("./api").GetIntegrationByNameResponse>;
    deleteIntegration: (props: DeleteIntegrationProps) => Promise<object>;
    listWorkspaceMembers: (props: ListWorkspaceMembersProps) => Promise<import("./api").ListWorkspaceMembersResponse>;
    deleteWorkspaceMember: (props: DeleteWorkspaceMemberProps) => Promise<object>;
    createWorkspaceMember: (createWorkspaceMemberBody: CreateWorkspaceMemberProps) => Promise<import("./api").CreateWorkspaceMemberResponse>;
    updateWorkspaceMember: ({ id, ...updateWorkspaceMemberBody }: UpdateWorkspaceMemberProps) => Promise<import("./api").UpdateWorkspaceMemberResponse>;
    introspect: (introspectBody: IntrospectProps) => Promise<import("./api").IntrospectResponse>;
    createFile: (createFileBody: CreateFileProps) => Promise<import("./api").CreateFileResponse>;
    getFile: (props: GetFileProps) => Promise<import("./api").GetFileResponse>;
    downloadFile: (props: DownloadFileProps) => Promise<any>;
    deleteFile: (props: DeleteFileProps) => Promise<object>;
    listFiles: (props: ListFilesProps) => Promise<import("./api").ListFilesResponse>;
}
type CreateConversationProps = Merge<Except<DefaultApiCreateConversationRequest, 'createConversationBody'>, NonNullable<DefaultApiCreateConversationRequest['createConversationBody']>>;
type GetConversationProps = Merge<DefaultApiGetConversationRequest, {}>;
type ListConversationsProps = Merge<DefaultApiListConversationsRequest, {}>;
type GetOrCreateConversationProps = Merge<Except<DefaultApiGetOrCreateConversationRequest, 'getOrCreateConversationBody'>, NonNullable<DefaultApiGetOrCreateConversationRequest['getOrCreateConversationBody']>>;
type UpdateConversationProps = Merge<Except<DefaultApiUpdateConversationRequest, 'updateConversationBody'>, NonNullable<DefaultApiUpdateConversationRequest['updateConversationBody']>>;
type DeleteConversationProps = Merge<DefaultApiDeleteConversationRequest, {}>;
type CreateEventProps = Merge<Except<DefaultApiCreateEventRequest, 'createEventBody'>, NonNullable<DefaultApiCreateEventRequest['createEventBody']>>;
type GetEventProps = Merge<DefaultApiGetEventRequest, {}>;
type ListEventsProps = Merge<DefaultApiListEventsRequest, {}>;
type CreateMessageProps = Merge<Except<DefaultApiCreateMessageRequest, 'createMessageBody'>, NonNullable<DefaultApiCreateMessageRequest['createMessageBody']>>;
type GetOrCreateMessageProps = Merge<Except<DefaultApiGetOrCreateMessageRequest, 'getOrCreateMessageBody'>, NonNullable<DefaultApiGetOrCreateMessageRequest['getOrCreateMessageBody']>>;
type GetMessageProps = Merge<DefaultApiGetMessageRequest, {}>;
type UpdateMessageProps = Merge<Except<DefaultApiUpdateMessageRequest, 'updateMessageBody'>, NonNullable<DefaultApiUpdateMessageRequest['updateMessageBody']>>;
type ListMessagesProps = Merge<DefaultApiListMessagesRequest, {}>;
type DeleteMessageProps = Merge<DefaultApiDeleteMessageRequest, {}>;
type CreateUserProps = Merge<Except<DefaultApiCreateUserRequest, 'createUserBody'>, NonNullable<DefaultApiCreateUserRequest['createUserBody']>>;
type GetUserProps = Merge<DefaultApiGetUserRequest, {}>;
type ListUsersProps = Merge<DefaultApiListUsersRequest, {}>;
type GetOrCreateUserProps = Merge<Except<DefaultApiGetOrCreateUserRequest, 'getOrCreateUserBody'>, NonNullable<DefaultApiGetOrCreateUserRequest['getOrCreateUserBody']>>;
type UpdateUserProps = Merge<Except<DefaultApiUpdateUserRequest, 'updateUserBody'>, NonNullable<DefaultApiUpdateUserRequest['updateUserBody']>>;
type DeleteUserProps = Merge<DefaultApiDeleteUserRequest, {}>;
type GetStateProps = Merge<DefaultApiGetStateRequest, {}>;
type SetStateProps = Merge<Except<DefaultApiSetStateRequest, 'setStateBody'>, NonNullable<DefaultApiSetStateRequest['setStateBody']>>;
type PatchStateProps = Merge<Except<DefaultApiPatchStateRequest, 'patchStateBody'>, NonNullable<DefaultApiPatchStateRequest['patchStateBody']>>;
type CallActionProps = Merge<Except<DefaultApiCallActionRequest, 'callActionBody'>, NonNullable<DefaultApiCallActionRequest['callActionBody']>>;
type ConfigureIntegrationProps = Merge<Except<DefaultApiConfigureIntegrationRequest, 'configureIntegrationBody'>, NonNullable<DefaultApiConfigureIntegrationRequest['configureIntegrationBody']>>;
type ListPublicIntegrationsProps = Merge<DefaultApiListPublicIntegrationsRequest, {}>;
type GetPublicIntegrationByIdProps = Merge<DefaultApiGetPublicIntegrationByIdRequest, {}>;
type GetPublicIntegrationProps = Merge<DefaultApiGetPublicIntegrationRequest, {}>;
type CreateBotProps = Merge<Except<DefaultApiCreateBotRequest, 'createBotBody'>, NonNullable<DefaultApiCreateBotRequest['createBotBody']>>;
type UpdateBotProps = Merge<Except<DefaultApiUpdateBotRequest, 'updateBotBody'>, NonNullable<DefaultApiUpdateBotRequest['updateBotBody']>>;
type TransferBotProps = Merge<Except<DefaultApiTransferBotRequest, 'transferBotBody'>, NonNullable<DefaultApiTransferBotRequest['transferBotBody']>>;
type ListBotsProps = Merge<DefaultApiListBotsRequest, {}>;
type GetBotProps = Merge<DefaultApiGetBotRequest, {}>;
type DeleteBotProps = Merge<DefaultApiDeleteBotRequest, {}>;
type GetBotLogsProps = Merge<DefaultApiGetBotLogsRequest, {}>;
type GetBotWebchatProps = Merge<DefaultApiGetBotWebchatRequest, {}>;
type GetBotAnalyticsProps = Merge<DefaultApiGetBotAnalyticsRequest, {}>;
type CreateWorkspaceProps = Merge<Except<DefaultApiCreateWorkspaceRequest, 'createWorkspaceBody'>, NonNullable<DefaultApiCreateWorkspaceRequest['createWorkspaceBody']>>;
type GetWorkspaceProps = Merge<DefaultApiGetWorkspaceRequest, {}>;
type UpdateWorkspaceProps = Merge<Except<DefaultApiUpdateWorkspaceRequest, 'updateWorkspaceBody'>, NonNullable<DefaultApiUpdateWorkspaceRequest['updateWorkspaceBody']>>;
type ListWorkspacesProps = Merge<DefaultApiListWorkspacesRequest, {}>;
type ChangeWorkspacePlanProps = Merge<Except<DefaultApiChangeWorkspacePlanRequest, 'changeWorkspacePlanBody'>, NonNullable<DefaultApiChangeWorkspacePlanRequest['changeWorkspacePlanBody']>>;
type DeleteWorkspaceProps = Merge<DefaultApiDeleteWorkspaceRequest, {}>;
type CreateIntegrationProps = Merge<Except<DefaultApiCreateIntegrationRequest, 'createIntegrationBody'>, NonNullable<DefaultApiCreateIntegrationRequest['createIntegrationBody']>>;
type UpdateIntegrationProps = Merge<Except<DefaultApiUpdateIntegrationRequest, 'updateIntegrationBody'>, NonNullable<DefaultApiUpdateIntegrationRequest['updateIntegrationBody']>>;
type ListIntegrationsProps = Merge<DefaultApiListIntegrationsRequest, {}>;
type GetIntegrationProps = Merge<DefaultApiGetIntegrationRequest, {}>;
type GetIntegrationLogsProps = Merge<DefaultApiGetIntegrationLogsRequest, {}>;
type GetIntegrationByNameProps = Merge<DefaultApiGetIntegrationByNameRequest, {}>;
type DeleteIntegrationProps = Merge<DefaultApiDeleteIntegrationRequest, {}>;
type ListWorkspaceMembersProps = Merge<DefaultApiListWorkspaceMembersRequest, {}>;
type DeleteWorkspaceMemberProps = Merge<DefaultApiDeleteWorkspaceMemberRequest, {}>;
type CreateWorkspaceMemberProps = Merge<Except<DefaultApiCreateWorkspaceMemberRequest, 'createWorkspaceMemberBody'>, NonNullable<DefaultApiCreateWorkspaceMemberRequest['createWorkspaceMemberBody']>>;
type UpdateWorkspaceMemberProps = Merge<Except<DefaultApiUpdateWorkspaceMemberRequest, 'updateWorkspaceMemberBody'>, NonNullable<DefaultApiUpdateWorkspaceMemberRequest['updateWorkspaceMemberBody']>>;
type IntrospectProps = Merge<Except<DefaultApiIntrospectRequest, 'introspectBody'>, NonNullable<DefaultApiIntrospectRequest['introspectBody']>>;
type CreateFileProps = Merge<Except<DefaultApiCreateFileRequest, 'createFileBody'>, NonNullable<DefaultApiCreateFileRequest['createFileBody']>>;
type GetFileProps = Merge<DefaultApiGetFileRequest, {}>;
type DownloadFileProps = Merge<DefaultApiDownloadFileRequest, {}>;
type DeleteFileProps = Merge<DefaultApiDeleteFileRequest, {}>;
type ListFilesProps = Merge<DefaultApiListFilesRequest, {}>;
`
